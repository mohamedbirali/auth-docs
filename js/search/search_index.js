var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,3.108,1,3.364]],["body/controllers/AppController.html",[1,4.731,2,3.459,3,0.151,4,0.151,5,5.945,6,0.6,7,1.862,8,7.745,9,2.269,10,0.01,11,5.945,12,1.494,13,1.119,14,0.009,15,0.009]],["title/modules/AppModule.html",[16,1.381,17,3.108]],["body/modules/AppModule.html",[1,4.302,2,3.145,3,0.137,4,0.137,10,0.01,14,0.009,15,0.009,17,6.109,18,1.615,19,2.51,20,4.74,21,4.74,22,5.348,23,5.348,24,2.678,25,2.132,26,2.132,27,5.406,28,2.543]],["title/classes/AuthAccessTokenEntity.html",[29,1.614,30,2.903]],["body/classes/AuthAccessTokenEntity.html",[3,0.094,4,0.094,6,0.375,9,2.948,10,0.011,13,1.331,14,0.007,15,0.007,30,2.553,31,1.419,32,1.332,33,3.26,34,2.959,35,1.569,36,2.733,37,1.328,38,4.204,39,4.204,40,4.204,41,4.204,42,3.263,43,3.263,44,3.263,45,2.346,46,1.042,47,4.327,48,2.959,49,4.096,50,3.715,51,3.553,52,2.959,53,2.959,54,2.959,55,3.739,56,2.064,57,2.064,58,2.064,59,1.974,60,0.882]],["title/injectables/AuthAccessTokenService.html",[61,1.848,62,2.903]],["body/injectables/AuthAccessTokenService.html",[3,0.105,4,0.105,6,0.417,7,1.471,10,0.01,12,1.634,13,1.319,14,0.007,15,0.007,30,4.813,32,1.479,45,1.577,46,0.878,60,1.663,62,2.837,63,1.743,64,4.131,65,3.622,66,3.481,67,2.895,68,4.181,69,4.181,70,2.102,71,4.131,72,5.176,73,2.157,74,1.616,75,2.528,76,2.996,77,3.157,78,3.18,79,2.947,80,2.652,81,3.037,82,3.157,83,2.293,84,3.037,85,3.677]],["title/classes/AuthEntityAbstract.html",[29,1.614,36,3.108]],["body/classes/AuthEntityAbstract.html",[3,0.095,4,0.095,6,0.377,9,2.951,10,0.011,13,1.333,14,0.007,15,0.007,31,1.425,32,1.337,35,1.575,36,2.745,37,1.331,38,4.217,39,4.217,40,4.217,41,4.217,42,3.271,43,3.271,44,3.271,45,2.351,46,1.043,47,4.335,48,2.971,49,4.104,50,3.722,51,3.56,52,2.971,53,2.971,54,2.971,55,3.744,56,2.072,57,2.072,58,2.072,59,1.982,60,0.886,86,3.734,87,2.172]],["title/injectables/AuthJwtAccessTokenGuard.html",[61,1.848,88,3.707]],["body/injectables/AuthJwtAccessTokenGuard.html",[3,0.186,4,0.133,6,0.53,7,1.723,10,0.01,12,1.318,14,0.008,15,0.008,32,1.879,46,0.835,60,1.245,63,2.214,73,2.051,74,1.21,88,4.601,89,4.601,90,4.601,91,4.601,92,5.843,93,4.601,94,6.754,95,3.698,96,6.754,97,4.601]],["title/injectables/AuthJwtAccessTokenStrategy.html",[61,1.848,98,3.108]],["body/injectables/AuthJwtAccessTokenStrategy.html",[3,0.128,4,0.128,6,0.509,7,1.679,10,0.01,12,1.266,14,0.008,15,0.008,32,1.805,46,0.813,60,1.541,62,5.212,63,2.127,67,3.305,70,2.565,73,1.998,74,1.497,89,4.419,90,4.419,98,3.705,99,4.419,100,5.694,101,3.258,102,4.645,103,4.906,104,4.419,105,3.175,106,5.04]],["title/modules/AuthJwtModule.html",[16,1.381,107,2.733]],["body/modules/AuthJwtModule.html",[3,0.108,4,0.108,10,0.01,14,0.007,15,0.007,18,1.27,19,2.143,24,2.287,25,1.676,26,1.676,28,1.998,32,1.522,62,4.87,98,5.213,103,5.233,107,5.547,108,3.725,109,3.725,110,3.725,111,3.725,112,4.87,113,4.585,114,5.213,115,4.87,116,4.249,117,2.358,118,2.358]],["title/injectables/AuthJwtRefreshTokenGuard.html",[61,1.848,119,3.707]],["body/injectables/AuthJwtRefreshTokenGuard.html",[3,0.186,4,0.133,6,0.53,7,1.723,10,0.01,12,1.318,14,0.008,15,0.008,32,1.879,46,0.835,60,1.245,63,2.214,73,2.051,74,1.21,91,4.601,92,5.843,93,4.601,94,6.754,95,3.698,96,6.754,97,4.601,119,4.601,120,4.601,121,4.601]],["title/injectables/AuthJwtRefreshTokenStrategy.html",[61,1.848,114,3.108]],["body/injectables/AuthJwtRefreshTokenStrategy.html",[3,0.128,4,0.128,6,0.509,7,1.679,10,0.01,12,1.266,14,0.008,15,0.008,32,1.805,46,0.813,60,1.541,63,2.127,67,3.305,70,2.565,73,1.998,74,1.497,80,2.055,99,4.419,100,5.694,101,3.258,102,4.645,103,4.906,104,4.419,105,3.175,114,3.705,115,5.212,120,4.419,121,4.419]],["title/modules/AuthJwtRepositoryModule.html",[16,1.381,112,2.903]],["body/modules/AuthJwtRepositoryModule.html",[3,0.126,4,0.126,10,0.01,14,0.008,15,0.008,18,1.481,19,2.374,24,2.533,25,1.955,26,1.955,32,1.775,72,6.641,112,5.732,117,2.751,118,2.751,122,4.346,123,4.346,124,4.346,125,6.641,126,4.956]],["title/classes/AuthRefreshTokenEntity.html",[29,1.614,127,2.903]],["body/classes/AuthRefreshTokenEntity.html",[3,0.085,4,0.085,6,0.339,9,2.972,10,0.011,13,1.279,14,0.006,15,0.006,31,1.281,32,1.202,34,2.67,35,1.416,36,2.466,37,1.233,38,3.904,39,3.904,40,3.904,41,3.904,42,3.08,43,3.08,44,3.08,45,2.214,46,1.048,47,4.586,48,2.67,49,3.906,50,3.937,51,3.766,52,2.67,53,2.67,54,2.67,55,3.61,56,1.862,57,1.862,58,1.862,59,1.781,60,0.796,127,2.304,128,2.942,129,4.906,130,4.906,131,2.07,132,3.355,133,3.904,134,3.355]],["title/injectables/AuthRefreshTokenService.html",[61,1.848,115,2.903]],["body/injectables/AuthRefreshTokenService.html",[3,0.093,4,0.093,6,0.368,7,1.346,10,0.01,12,1.666,13,1.374,14,0.007,15,0.007,32,1.304,45,1.987,46,0.879,60,1.664,63,1.537,65,3.194,66,3.187,67,3.91,68,3.828,69,3.828,70,1.854,73,2.159,74,1.617,75,2.229,76,3.029,77,2.89,78,3.429,79,3.004,80,2.704,81,2.678,82,2.89,83,2.022,84,2.678,85,4.287,115,2.501,125,4.835,127,4.554,135,3.642,136,4.565,137,3.642,138,3.194,139,3.828]],["title/injectables/AuthService.html",[61,1.848,103,2.733]],["body/injectables/AuthService.html",[3,0.051,4,0.051,6,0.203,7,0.852,10,0.011,12,1.802,13,1.46,14,0.004,15,0.004,32,0.72,37,0.828,46,0.925,60,1.554,63,0.848,67,4.048,70,1.023,73,2.016,74,1.51,76,2.264,78,0.983,79,1.897,80,2.874,83,1.829,101,1.3,102,2.707,103,1.3,105,2.964,131,2.422,140,2.011,141,5.608,142,4.84,143,3.295,144,3.295,145,3.295,146,3.295,147,3.295,148,3.295,149,2.889,150,2.889,151,2.889,152,2.889,153,2.889,154,3.671,155,3.671,156,3.671,157,3.671,158,3.671,159,2.889,160,2.889,161,2.889,162,3.326,163,3.326,164,2.011,165,1.6,166,1.763,167,2.889,168,1.344,169,2.423,170,1.763,171,2.011,172,3.326,173,3.56,174,1.763,175,1.478,176,1.763,177,2.13,178,1.763,179,1.763,180,2.017,181,1.763,182,2.889,183,1.763,184,3.711,185,3.513,186,2.011,187,2.011,188,2.011,189,2.011,190,2.011,191,2.011]],["title/classes/AuthUpdateRefreshTokenDto.html",[29,1.614,139,3.108]],["body/classes/AuthUpdateRefreshTokenDto.html",[3,0.148,4,0.148,6,0.588,10,0.01,14,0.009,15,0.009,31,2.225,32,2.088,37,1.788,46,0.891,55,2.967,139,4.285,168,2.377,192,5.829,193,5.829,194,6.238,195,6.238]],["title/modules/AwsModule.html",[16,1.381,196,2.587]],["body/modules/AwsModule.html",[3,0.13,4,0.13,10,0.01,14,0.008,15,0.008,18,1.532,19,2.427,24,2.589,25,2.022,26,2.022,28,2.411,117,2.845,118,2.845,196,5.089,197,4.495,198,4.495,199,4.495,200,4.495,201,5.245,202,5.768,203,5.126]],["title/classes/AwsPhotoEntity.html",[29,1.614,204,3.364]],["body/classes/AwsPhotoEntity.html",[3,0.099,4,0.099,6,0.393,9,2.983,10,0.011,13,1.442,14,0.007,15,0.007,31,1.487,37,1.372,45,2.085,46,1.043,47,4.077,49,4.565,50,3.5,51,3.96,59,2.069,95,3.031,204,3.101,205,3.417,206,4.346,207,4.789,208,4.015,209,4.789,210,3.531,211,4.789,212,3.896,213,3.896,214,6.305,215,3.896,216,2.676,217,3.896]],["title/modules/AwsRepositoryModule.html",[16,1.381,201,2.903]],["body/modules/AwsRepositoryModule.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,18,1.931,201,4.438,218,6.462]],["title/classes/AwsS3MultipartPartsSerialization.html",[29,1.614,219,3.364]],["body/classes/AwsS3MultipartPartsSerialization.html",[3,0.138,4,0.138,6,0.549,9,2.602,10,0.01,13,1.024,14,0.009,15,0.009,31,2.076,37,1.713,46,0.854,131,2.295,219,4.328,220,4.769,221,7.444,222,5.011,223,4.681,224,3.516,225,3.329,226,4.328,227,4.769,228,4.769,229,5.439]],["title/classes/AwsS3MultipartSerialization.html",[29,1.614,230,3.707]],["body/classes/AwsS3MultipartSerialization.html",[3,0.113,4,0.113,6,0.45,9,2.762,10,0.011,13,0.84,14,0.008,15,0.008,31,1.703,37,1.506,45,1.703,46,0.906,74,1.792,131,3.053,219,3.55,220,3.911,222,4.406,223,4.648,224,2.884,225,4.142,226,3.55,227,3.911,228,3.911,230,3.911,231,5.993,232,4.769,233,4.769,234,4.461,235,4.461,236,5.993,237,2.476,238,4.461,239,3.911,240,4.461,241,4.461,242,4.461,243,3.911,244,4.461]],["title/classes/AwsS3Serialization.html",[29,1.614,245,3.707]],["body/classes/AwsS3Serialization.html",[3,0.116,4,0.116,6,0.462,9,2.988,10,0.011,13,1.474,14,0.008,15,0.008,31,1.746,37,1.531,46,0.981,206,4.85,207,5.344,208,4.481,209,5.344,210,3.94,211,5.344,223,5.377,224,2.958,243,6.675,245,4.012,246,4.575]],["title/injectables/AwsS3Service.html",[61,1.848,202,2.903]],["body/injectables/AwsS3Service.html",[3,0.055,4,0.055,6,0.217,7,0.9,10,0.011,12,1.771,13,1.551,14,0.004,15,0.004,37,0.875,46,0.915,60,1.635,63,0.908,67,4.049,70,1.095,73,2.121,74,1.589,76,1.988,79,1.987,80,2.874,101,1.391,102,2.835,131,1.469,141,4.714,142,4.069,202,1.477,206,2.77,208,3.224,210,2.251,222,2.559,232,2.77,233,4.714,247,2.151,248,3.481,249,4.386,250,3.053,251,3.846,252,3.053,253,3.053,254,3.053,255,3.053,256,3.053,257,3.053,258,3.846,259,3.053,260,3.053,261,1.886,262,1.886,263,3.053,264,1.886,265,3.705,266,1.886,267,1.886,268,1.886,269,1.886,270,1.886,271,1.886,272,4.42,273,4.42,274,4.42,275,4.42,276,4.42,277,1.886,278,1.886,279,1.886,280,3.053,281,1.886]],["title/modules/CommonModule.html",[16,1.381,22,2.903]],["body/modules/CommonModule.html",[3,0.114,4,0.114,10,0.01,14,0.008,15,0.008,18,1.346,19,2.23,22,5.911,24,2.379,25,1.777,26,1.777,28,2.119,107,4.696,113,4.696,196,4.446,282,3.951,283,3.951,284,4.989,285,4.989,286,4.989,287,4.989,288,4.506]],["title/classes/DatabaseEntityAbstract.html",[29,1.614,87,2.46]],["body/classes/DatabaseEntityAbstract.html",[3,0.123,4,0.123,6,0.489,9,2.854,10,0.011,13,0.913,14,0.008,15,0.008,31,1.851,37,1.591,42,3.744,43,3.744,44,3.744,45,2.692,46,1.015,55,4.05,56,2.691,57,2.691,58,2.691,59,2.574,60,1.15,87,2.821,289,4.848]],["title/modules/DatabaseModule.html",[16,1.381,284,2.903]],["body/modules/DatabaseModule.html",[3,0.137,4,0.137,10,0.01,14,0.009,15,0.009,18,1.615,19,2.51,24,2.678,25,2.132,26,2.132,117,3,118,3,284,5.623,290,4.74,291,4.74,292,4.74,293,6.233,294,5.406]],["title/injectables/DatabaseOptionsService.html",[61,1.848,293,3.108]],["body/injectables/DatabaseOptionsService.html",[3,0.086,4,0.086,6,0.341,7,1.276,10,0.011,12,0.849,13,1.339,14,0.006,15,0.006,37,1.24,46,0.962,60,1.382,63,1.426,70,1.721,73,1.04,74,0.779,76,1.946,95,2.738,101,2.185,102,3.766,131,1.426,141,6.565,142,5.666,168,1.378,184,4.866,185,4.607,293,2.485,295,3.38,296,3.38,297,4.326,298,4.933,299,4.933,300,3.019,301,4.933,302,5.108,303,2.964,304,3.38,305,3.38,306,3.38,307,3.38,308,3.38,309,3.38,310,3.38,311,3.38]],["title/injectables/HealthAwsS3Indicator.html",[61,1.848,312,3.108]],["body/injectables/HealthAwsS3Indicator.html",[3,0.133,4,0.133,6,0.53,7,1.723,10,0.01,12,1.318,13,1.255,14,0.008,15,0.008,35,2.214,46,0.835,60,1.581,63,2.214,67,3.392,70,2.671,73,2.051,74,1.536,80,2.14,172,3.604,202,5.029,312,3.857,313,5.247,314,5.247,315,5.247,316,6.663,317,5.247,318,5.247]],["title/controllers/HealthController.html",[0,3.108,319,3.364]],["body/controllers/HealthController.html",[2,3.414,3,0.149,4,0.149,6,0.592,7,1.847,9,2.24,10,0.01,12,1.474,14,0.009,15,0.009,67,3.636,80,2.393,319,4.669,320,5.867,321,7.701,322,5.867]],["title/modules/HealthModule.html",[16,1.381,323,2.903]],["body/modules/HealthModule.html",[3,0.13,4,0.13,10,0.01,14,0.008,15,0.008,18,1.532,19,2.427,24,2.589,25,2.022,26,2.022,28,2.411,117,2.845,118,2.845,196,4.674,312,6.174,323,5.711,324,4.495,325,4.495,326,4.495,327,5.126,328,5.126]],["title/injectables/HelperEncryptionService.html",[61,1.848,162,2.903]],["body/injectables/HelperEncryptionService.html",[3,0.075,4,0.075,6,0.297,7,1.152,10,0.011,12,1.817,13,1.602,14,0.006,15,0.006,46,0.927,60,1.756,63,1.243,70,1.499,73,2.278,74,1.707,76,2.361,78,2.625,83,1.635,105,3.535,162,2.023,168,1.816,172,4.111,173,4.401,175,2.165,177,2.879,180,2.726,329,2.945,330,3.905,331,3.905,332,3.905,333,3.905,334,3.905,335,3.905,336,3.905,337,3.905,338,2.945,339,5.37,340,2.945,341,2.945,342,2.583,343,2.583,344,2.583,345,2.583,346,3.905,347,2.583,348,2.583,349,2.583,350,2.583,351,2.583]],["title/injectables/HelperHashService.html",[61,1.848,163,2.903]],["body/injectables/HelperHashService.html",[3,0.102,4,0.102,6,0.404,7,1.438,10,0.01,12,1.825,13,1.598,14,0.007,15,0.007,46,0.91,60,1.724,63,1.688,73,2.236,74,1.675,131,2.348,163,2.748,165,4.427,168,2.269,237,2.221,352,4.001,353,4.427,354,4.878,355,4.878,356,4.878,357,4.878,358,3.508,359,4.878,360,3.508,361,4.878,362,3.508,363,3.508,364,3.508,365,4.001,366,4.878,367,4.001]],["title/modules/HelperModule.html",[16,1.381,113,2.733]],["body/modules/HelperModule.html",[3,0.117,4,0.117,10,0.01,14,0.008,15,0.008,18,1.381,19,2.268,24,2.42,25,1.823,26,1.823,113,5.457,117,2.566,118,2.566,162,5.656,163,5.656,368,4.053,369,4.053,370,4.053,371,6.054,372,4.622]],["title/injectables/HelperStringService.html",[61,1.848,371,3.108]],["body/injectables/HelperStringService.html",[3,0.082,4,0.082,6,0.324,7,1.228,10,0.011,12,1.864,13,1.55,14,0.006,15,0.006,46,0.929,60,1.76,63,1.355,73,2.283,74,1.71,76,1.873,79,3.022,131,3.252,168,2.719,185,1.965,237,4.117,300,3.46,371,2.36,373,3.21,374,4.165,375,4.165,376,4.165,377,4.165,378,4.165,379,4.165,380,4.165,381,4.165,382,2.815,383,2.815,384,2.075,385,2.815,386,2.815,387,2.815,388,2.815,389,2.815,390,3.21,391,3.492,392,2.815,393,3.78]],["title/interfaces/IAuthAccessTokenService.html",[394,1.423,395,3.707]],["body/interfaces/IAuthAccessTokenService.html",[3,0.111,4,0.111,6,0.441,7,1.529,10,0.01,12,1.683,13,1.351,14,0.008,15,0.008,30,4.929,32,1.566,45,1.669,46,0.839,60,1.59,66,3.619,68,4.347,69,4.347,73,2.062,74,1.545,75,2.677,76,3.047,77,3.282,78,3.275,79,3.036,80,2.732,81,3.215,82,3.282,83,2.427,84,3.215,85,3.823,395,3.835,396,1.429,397,4.373,398,3.835]],["title/interfaces/IAuthPayloadOptions.html",[169,3.108,394,1.423]],["body/interfaces/IAuthPayloadOptions.html",[3,0.152,4,0.152,6,0.604,10,0.01,14,0.009,15,0.009,32,2.144,37,1.816,46,0.75,55,3.68,169,4.4,194,6.811,396,1.955,399,5.985]],["title/interfaces/IAuthRefreshTokenService.html",[394,1.423,400,3.707]],["body/interfaces/IAuthRefreshTokenService.html",[3,0.1,4,0.1,6,0.397,7,1.421,10,0.01,12,1.724,13,1.408,14,0.007,15,0.007,32,1.408,45,2.097,46,0.859,60,1.628,66,3.363,68,4.04,69,4.04,73,2.111,74,1.582,75,2.406,76,3.089,77,3.05,78,3.529,79,3.108,80,2.797,81,2.89,82,3.05,83,2.182,84,2.89,85,4.435,127,4.711,136,4.818,138,3.447,139,4.04,396,1.284,398,3.447,400,3.447,401,3.931]],["title/interfaces/IAuthService.html",[394,1.423,402,3.707]],["body/interfaces/IAuthService.html",[3,0.069,4,0.069,6,0.275,7,1.087,10,0.011,12,1.943,13,1.553,14,0.005,15,0.005,32,0.978,46,0.884,60,1.675,73,2.172,74,1.628,76,2.588,78,1.334,79,2.322,80,3.114,83,2.332,105,3.343,149,3.685,150,3.685,151,3.685,152,3.685,153,3.685,154,4.493,155,4.493,156,4.493,157,4.493,158,4.493,159,3.685,160,3.685,161,3.685,166,2.393,167,3.685,168,1.714,169,3.089,170,2.393,172,3.952,173,4.231,174,2.393,175,3.089,176,2.393,177,2.717,178,2.393,179,2.393,180,2.572,181,2.393,182,3.685,183,2.393,300,1.671,396,0.892,402,2.393,403,2.729,404,2.729,405,2.729]],["title/interfaces/IAwsS3PutItemOptions.html",[265,3.108,394,1.423]],["body/interfaces/IAwsS3PutItemOptions.html",[3,0.144,4,0.144,6,0.573,10,0.01,13,1.319,14,0.009,15,0.009,37,1.76,46,0.877,74,1.615,210,4.908,265,4.176,396,1.856,406,5.681,407,7.592,408,7.003]],["title/interfaces/IAwsS3Service.html",[394,1.423,409,3.707]],["body/interfaces/IAwsS3Service.html",[3,0.066,4,0.066,6,0.262,7,1.045,10,0.011,12,1.866,13,1.577,14,0.005,15,0.005,46,0.893,60,1.692,73,2.195,74,1.644,76,2.209,79,2.249,80,3.029,131,1.705,208,3.648,210,2.612,222,2.971,232,3.215,233,5.116,250,3.543,251,4.351,252,3.543,253,3.543,254,3.543,255,3.543,256,3.543,257,3.543,258,4.351,259,3.543,260,3.543,261,2.275,262,2.275,263,3.543,264,2.275,265,4.118,266,2.275,267,2.275,268,2.275,269,2.275,270,2.275,271,2.275,272,4.912,273,4.912,274,3.543,275,3.543,276,3.543,277,2.275,278,2.275,279,2.275,280,3.543,281,2.275,396,0.848,409,2.275,410,2.595]],["title/interfaces/IDatabaseCreateOptions.html",[77,2.346,394,1.423]],["body/interfaces/IDatabaseCreateOptions.html",[3,0.149,4,0.149,6,0.592,10,0.01,13,1.345,14,0.009,15,0.009,35,2.476,37,1.795,45,2.939,46,0.735,74,1.647,77,3.257,396,1.917,411,4.03,412,4.669]],["title/interfaces/IDatabaseExistOptions.html",[394,1.423,413,2.903]],["body/interfaces/IDatabaseExistOptions.html",[3,0.151,4,0.151,6,0.6,10,0.01,13,1.356,14,0.009,15,0.009,35,2.509,37,1.809,46,0.745,396,1.942,411,4.083,413,4.083,414,4.083,415,7.745]],["title/interfaces/IDatabaseFindAllOptions.html",[394,1.423,416,2.903]],["body/interfaces/IDatabaseFindAllOptions.html",[3,0.162,4,0.162,10,0.01,14,0.01,15,0.01,35,2.688,396,2.081,411,4.375,416,4.375,417,5.069]],["title/interfaces/IDatabaseFindOneOptions.html",[82,2.346,394,1.423]],["body/interfaces/IDatabaseFindOneOptions.html",[3,0.124,4,0.124,6,0.492,10,0.01,14,0.008,15,0.008,35,2.057,37,1.597,46,0.939,74,1.898,82,2.706,105,3.107,168,3.055,396,1.592,411,3.348,418,4.274,419,6.2,420,7.071,421,6.2,422,6.2,423,6.355,424,5.057]],["title/interfaces/IDatabaseOptionsService.html",[394,1.423,425,3.707]],["body/interfaces/IDatabaseOptionsService.html",[3,0.153,4,0.153,6,0.608,7,1.877,10,0.01,12,1.514,14,0.009,15,0.009,302,6.831,303,5.284,396,1.968,425,5.284,426,6.026,427,6.026]],["title/interfaces/IDatabaseRepository.html",[394,1.423,428,3.707]],["body/interfaces/IDatabaseRepository.html",[3,0.033,4,0.033,6,0.132,7,0.591,10,0.011,12,1.836,13,1.251,14,0.003,15,0.003,45,1.993,46,0.968,60,1.719,66,1.4,73,2.378,74,1.67,75,0.8,76,3.169,77,2.03,78,2.553,79,3.337,80,2.979,82,2.03,85,2.365,105,3.968,396,0.427,413,1.571,414,1.571,416,1.571,428,1.146,429,1.307,430,2.287,431,2.287,432,2.287,433,2.287,434,1.82,435,2.287,436,1.82,437,1.82,438,2.287,439,2.287,440,3.048,441,2.287,442,2.287,443,2.287,444,2.287,445,2.287,446,2.287,447,2.287,448,2.287,449,2.287,450,2.287,451,2.287,452,2.287,453,6.751,454,1.307,455,1.307,456,4.008,457,4.847,458,1.307,459,1.307,460,2.689,461,1.04,462,1.307,463,1.04,464,3.048,465,1.04,466,1.307,467,1.307,468,1.307,469,3.048,470,1.307,471,1.307,472,3.207,473,1.307,474,1.307,475,3.207,476,1.307,477,1.307,478,3.207,479,1.307,480,1.307,481,3.207,482,1.307,483,1.307,484,1.307,485,1.307]],["title/interfaces/IHelperEncryptionService.html",[394,1.423,486,3.707]],["body/interfaces/IHelperEncryptionService.html",[3,0.077,4,0.077,6,0.306,7,1.178,10,0.011,12,1.833,13,1.607,14,0.006,15,0.006,46,0.914,60,1.731,73,2.246,74,1.682,76,2.397,78,2.674,83,1.685,105,3.567,168,1.858,172,4.174,173,4.468,175,2.232,177,2.945,180,2.788,330,3.995,331,3.995,332,3.995,333,3.995,334,3.995,335,3.995,336,3.995,337,3.995,342,2.662,343,2.662,344,2.662,345,2.662,346,3.995,347,2.662,348,2.662,349,2.662,350,2.662,351,2.662,396,0.992,486,2.662,487,3.036,488,2.416,489,3.036,490,3.036]],["title/interfaces/IHelperHashService.html",[394,1.423,491,3.707]],["body/interfaces/IHelperHashService.html",[3,0.101,4,0.101,6,0.402,7,1.434,10,0.01,12,1.822,13,1.597,14,0.007,15,0.007,46,0.909,60,1.721,73,2.232,74,1.673,131,2.34,165,4.413,168,2.262,237,2.211,353,4.413,354,4.863,355,4.863,356,4.863,357,4.863,358,3.493,359,4.863,360,3.493,361,4.863,362,3.493,363,3.493,364,3.493,366,4.863,396,1.301,488,3.17,491,3.493,492,3.983,493,3.983,494,3.983]],["title/interfaces/IHelperJwtOptions.html",[177,2.733,394,1.423]],["body/interfaces/IHelperJwtOptions.html",[3,0.136,4,0.136,6,0.539,10,0.011,13,1.46,14,0.009,15,0.009,35,2.254,37,1.693,46,0.844,74,1.554,131,3.271,177,3.453,180,3.269,396,1.745,495,4.25,496,7.382,497,7.382]],["title/interfaces/IHelperJwtVerifyOptions.html",[180,2.587,394,1.423]],["body/interfaces/IHelperJwtVerifyOptions.html",[3,0.134,4,0.134,6,0.533,10,0.01,13,1.575,14,0.009,15,0.009,37,1.68,46,0.967,180,3.23,396,1.724,495,4.2,498,7.342,499,7.342,500,7.342,501,7.342]],["title/interfaces/IHelperRandomStringOptions.html",[391,3.108,394,1.423]],["body/interfaces/IHelperRandomStringOptions.html",[3,0.135,4,0.135,6,0.536,10,0.01,13,1.264,14,0.009,15,0.009,37,1.687,46,0.922,74,1.879,168,3.155,391,3.903,393,5.858,396,1.734,495,4.225,502,7.362,503,7.362]],["title/interfaces/IHelperStringService.html",[394,1.423,504,3.707]],["body/interfaces/IHelperStringService.html",[3,0.081,4,0.081,6,0.323,7,1.225,10,0.011,12,1.862,13,1.55,14,0.006,15,0.006,46,0.928,60,1.758,73,2.281,74,1.709,76,1.868,79,3.017,131,3.249,168,2.715,185,1.958,237,3.696,300,3.453,374,4.154,375,4.154,376,4.154,377,4.154,378,4.154,379,4.154,380,4.154,381,4.154,382,2.805,383,2.805,384,2.068,385,2.805,386,2.805,387,2.805,388,2.805,389,2.805,391,3.483,392,2.805,393,3.77,396,1.045,488,2.545,504,2.805,505,3.199,506,5.642,507,3.199]],["title/interfaces/IPaginationOptions.html",[394,1.423,417,3.364]],["body/interfaces/IPaginationOptions.html",[3,0.141,4,0.141,6,0.559,10,0.01,14,0.009,15,0.009,37,1.732,46,0.984,74,1.811,396,1.81,417,4.408,508,4.858,509,7.507,510,7.507,511,6.895,512,6.046]],["title/interfaces/IRoleEntity.html",[394,1.423,513,3.364]],["body/interfaces/IRoleEntity.html",[3,0.151,4,0.151,6,0.6,10,0.01,14,0.009,15,0.009,35,2.509,37,1.809,46,0.745,396,1.942,412,4.731,513,4.731,514,5.945,515,6.791,516,5.293]],["title/interfaces/ISettingService.html",[394,1.423,517,3.707]],["body/interfaces/ISettingService.html",[3,0.154,4,0.154,6,0.612,7,1.885,10,0.01,12,1.524,14,0.009,15,0.009,80,2.474,396,1.982,517,5.32,518,6.067,519,6.851]],["title/interfaces/IUserEntity.html",[394,1.423,520,3.364]],["body/interfaces/IUserEntity.html",[3,0.151,4,0.151,6,0.6,10,0.01,14,0.009,15,0.009,35,2.509,37,1.809,46,0.745,396,1.942,412,4.731,513,5.73,520,4.731,521,5.945,522,4.74]],["title/interfaces/IUserService.html",[394,1.423,523,3.707]],["body/interfaces/IUserService.html",[3,0.062,4,0.062,6,0.245,7,0.993,10,0.011,12,1.834,13,1.436,14,0.005,15,0.005,45,1.466,46,0.966,60,1.732,66,2.351,73,2.373,74,1.683,75,1.489,76,3.199,77,2.132,78,1.189,79,3.364,80,2.977,82,3.473,95,1.35,105,2.643,216,2.638,384,2.483,396,0.795,413,4.297,414,3.713,416,2.638,424,4.302,434,3.056,436,3.056,437,3.056,457,3.056,460,2.824,461,1.935,463,1.935,465,1.935,523,2.133,524,2.432,525,3.368,526,3.368,527,3.368,528,3.368,529,3.368,530,3.368,531,3.368,532,2.824,533,2.133,534,2.133,535,1.788,536,2.133,537,2.638,538,2.133,539,2.133,540,2.133,541,2.133]],["title/classes/LoggerEntity.html",[29,1.614,542,3.707]],["body/classes/LoggerEntity.html",[3,0.058,4,0.058,6,0.23,9,2.986,10,0.011,13,1.375,14,0.005,15,0.005,31,0.871,35,0.963,37,0.918,42,2.424,43,2.424,44,2.424,45,1.991,46,1.039,47,4.795,49,1.397,50,4.116,51,2.77,55,3.098,56,1.267,57,1.267,58,1.267,59,1.212,60,0.542,74,1.772,87,1.328,95,2.027,131,0.963,133,1.817,168,0.931,184,1.476,210,2.951,225,2.794,237,1.267,522,2.794,542,2.002,543,2.002,544,3.203,545,4.565,546,4.565,547,4.565,548,4.565,549,4.565,550,4.565,551,3.652,552,3.652,553,4.565,554,2.685,555,2.002,556,4.297,557,4.881,558,2.002,559,4.565,560,3.652,561,2.002,562,2.002,563,2.283,564,1.817,565,2.283,566,2.283,567,2.283,568,2.283,569,1.817,570,1.817,571,2.283]],["title/modules/LoggerModule.html",[16,1.381,285,2.903]],["body/modules/LoggerModule.html",[3,0.145,4,0.145,10,0.01,14,0.009,15,0.009,18,1.708,19,2.599,24,2.773,25,2.255,26,2.255,28,2.689,285,5.6,572,5.013,573,5.013,574,5.455,575,5.717]],["title/modules/LoggerRepositoryModule.html",[16,1.381,574,2.903]],["body/modules/LoggerRepositoryModule.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,18,1.931,574,4.438,576,6.462]],["title/classes/PermissionEntity.html",[29,1.614,516,3.108]],["body/classes/PermissionEntity.html",[3,0.084,4,0.084,6,0.335,7,1.258,9,2.965,10,0.011,12,0.834,13,1.195,14,0.006,15,0.006,31,1.266,35,1.4,37,1.223,42,3.06,43,3.06,44,3.06,45,2.2,46,1.016,50,3.523,51,3.37,55,3.596,56,1.841,57,1.841,58,1.841,59,1.761,60,1.604,87,1.93,168,1.353,184,2.145,225,3.527,237,1.841,516,2.439,522,3.527,556,2.978,557,3.577,569,2.64,570,2.64,577,2.909,578,5.763,579,4.267,580,5.053,581,3.317,582,4.267,583,3.317,584,3.317,585,2.909,586,3.317,587,2.64,588,3.317,589,2.64,590,3.317,591,3.317,592,3.317,593,3.317,594,2.909,595,2.909]],["title/modules/PermissionModule.html",[16,1.381,596,2.903]],["body/modules/PermissionModule.html",[3,0.145,4,0.145,10,0.01,14,0.009,15,0.009,18,1.708,19,2.599,24,2.773,25,2.255,26,2.255,28,2.689,596,5.6,597,5.013,598,5.013,599,5.455,600,5.717]],["title/modules/PermissionRepositoryModule.html",[16,1.381,599,2.903]],["body/modules/PermissionRepositoryModule.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,18,1.931,599,4.438,601,6.462]],["title/modules/RequestModule.html",[16,1.381,286,2.903]],["body/modules/RequestModule.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,18,1.931,286,4.438,602,6.462]],["title/classes/RoleEntity.html",[29,1.614,589,3.364]],["body/classes/RoleEntity.html",[3,0.101,4,0.101,6,0.4,9,2.937,10,0.011,13,1.041,14,0.007,15,0.007,31,1.514,35,1.673,37,1.389,42,3.379,43,3.379,44,3.379,45,2.43,46,1.031,49,2.427,50,2.201,51,2.105,55,3.817,56,2.201,57,2.201,58,2.201,59,2.105,60,1.51,87,2.307,237,2.201,515,5.581,516,2.915,544,4.848,554,4.065,555,3.477,556,2.427,557,4.065,564,3.156,589,3.156,603,3.477,604,3.966,605,3.966,606,3.966,607,3.966]],["title/modules/RoleModule.html",[16,1.381,608,2.903]],["body/modules/RoleModule.html",[3,0.145,4,0.145,10,0.01,14,0.009,15,0.009,18,1.708,19,2.599,24,2.773,25,2.255,26,2.255,28,2.689,608,5.6,609,5.013,610,5.013,611,5.455,612,5.717]],["title/modules/RoleRepositoryModule.html",[16,1.381,611,2.903]],["body/modules/RoleRepositoryModule.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,18,1.931,611,4.438,613,6.462]],["title/modules/RouterModule.html",[16,1.381,23,2.903]],["body/modules/RouterModule.html",[3,0.156,4,0.156,7,1.59,10,0.01,12,1.545,14,0.009,15,0.009,18,1.838,23,4.224,614,6.15,615,6.15,616,7.348,617,6.15]],["title/modules/RoutesAdminModule.html",[16,1.381,618,3.108]],["body/modules/RoutesAdminModule.html",[3,0.145,4,0.145,10,0.01,14,0.009,15,0.009,18,1.708,19,2.599,24,2.773,25,2.255,26,2.255,28,2.689,596,5.455,618,5.995,619,5.013,620,5.717,621,5.717]],["title/modules/RoutesModule.html",[16,1.381,622,3.108]],["body/modules/RoutesModule.html",[2,3.145,3,0.137,4,0.137,10,0.01,14,0.009,15,0.009,18,1.615,19,2.51,24,2.678,25,2.132,26,2.132,28,2.543,196,4.766,319,4.302,323,5.348,622,6.109,623,4.74,624,5.406,625,5.406]],["title/modules/RoutesPublicModule.html",[16,1.381,626,3.108]],["body/modules/RoutesPublicModule.html",[2,3.018,3,0.132,4,0.132,10,0.01,14,0.008,15,0.008,18,1.55,19,2.445,24,2.608,25,2.045,26,2.045,28,2.439,107,4.959,608,5.267,626,6.187,627,4.547,628,4.547,629,5.267,630,5.186,631,4.127]],["title/classes/SettingEntity.html",[29,1.614,632,3.707]],["body/classes/SettingEntity.html",[3,0.094,4,0.094,6,0.375,9,2.948,10,0.011,13,1.26,14,0.007,15,0.007,31,1.419,35,1.569,37,1.328,42,3.263,43,3.263,44,3.263,45,2.346,46,1.042,47,4.327,50,3.715,51,2.805,55,3.739,56,2.064,57,2.064,58,2.064,59,1.974,60,1.588,74,1.543,87,2.163,185,3.762,225,3.762,556,3.762,557,3.884,587,2.959,632,3.26,633,3.26,634,4.633]],["title/modules/SettingModule.html",[16,1.381,287,2.903]],["body/modules/SettingModule.html",[3,0.13,4,0.13,10,0.01,14,0.008,15,0.008,18,1.532,19,2.427,24,2.589,25,2.022,26,2.022,28,2.411,117,2.845,118,2.845,287,5.711,635,4.495,636,4.495,637,4.495,638,4.495,639,5.245,640,6.174,641,5.126]],["title/modules/SettingRepositoryModule.html",[16,1.381,639,2.903]],["body/modules/SettingRepositoryModule.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,18,1.931,639,4.438,642,6.462]],["title/injectables/SettingService.html",[61,1.848,640,3.108]],["body/injectables/SettingService.html",[3,0.142,4,0.142,6,0.566,7,1.797,10,0.01,12,1.409,14,0.009,15,0.009,46,0.703,60,1.331,63,2.367,67,3.537,70,2.855,73,1.726,74,1.293,80,2.287,101,3.627,102,4.881,519,6.619,640,4.124,643,5.609]],["title/controllers/UserController.html",[0,3.108,644,3.707]],["body/controllers/UserController.html",[2,3.76,3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,644,5.666,645,6.462]],["title/classes/UserCreateDto.html",[29,1.614,532,3.108]],["body/classes/UserCreateDto.html",[3,0.092,4,0.092,6,0.366,9,2.863,10,0.011,13,1.413,14,0.007,15,0.007,31,1.385,37,1.304,46,0.94,142,5.656,223,5.004,224,4.85,225,2.22,300,3.711,384,3.356,522,3.177,532,2.667,535,3.817,537,4.164,556,2.22,646,3.627,647,4.552,648,4.552,649,6.578,650,3.627,651,5.191,652,3.181,653,3.627,654,3.627,655,3.627,656,3.627,657,3.627,658,3.627,659,3.627,660,3.181,661,3.627,662,3.627,663,3.181,664,3.627,665,3.627]],["title/classes/UserEntity.html",[29,1.614,216,2.903]],["body/classes/UserEntity.html",[3,0.064,4,0.064,6,0.254,7,1.019,9,3.017,10,0.011,12,0.632,13,1.293,14,0.005,15,0.005,30,1.727,31,0.96,35,1.061,37,0.991,42,2.582,43,2.582,44,2.582,45,2.532,46,1.01,49,3.884,50,3.812,51,3.75,55,3.23,56,1.396,57,1.396,58,1.396,59,1.335,60,1.154,87,1.463,127,1.727,131,1.061,133,2.001,168,1.608,184,2.549,204,2.001,216,1.727,237,1.396,300,2.413,384,2.549,522,2.413,535,2.898,537,2.708,556,2.976,569,4.382,570,4.382,579,3.457,580,4.264,585,2.205,587,3.87,594,2.205,595,2.205,647,3.457,648,3.457,666,2.205,667,3.942,668,3.457,669,3.457,670,3.942,671,2.514,672,2.514,673,2.514,674,2.514,675,2.514,676,2.514,677,2.514,678,2.514,679,2.514,680,2.514,681,2.514,682,2.514,683,2.514,684,2.514,685,2.514,686,2.514,687,2.514,688,2.514,689,2.514,690,2.514,691,2.514,692,2.514,693,2.514,694,2.514]],["title/classes/UserLoginDto.html",[29,1.614,695,3.364]],["body/classes/UserLoginDto.html",[3,0.118,4,0.118,6,0.469,9,2.636,10,0.01,13,1.3,14,0.008,15,0.008,31,1.774,37,1.547,46,0.865,51,2.467,74,1.42,83,2.579,142,5.4,168,1.895,195,5.4,223,3.191,224,3.004,300,4.227,537,4.229,556,2.844,649,5.4,652,5.4,660,5.4,663,4.074,695,3.697,696,4.646,697,4.646,698,4.646,699,4.646,700,4.646,701,4.646,702,4.646,703,4.646]],["title/modules/UserModule.html",[16,1.381,629,2.903]],["body/modules/UserModule.html",[3,0.13,4,0.13,10,0.01,14,0.008,15,0.008,18,1.532,19,2.427,24,2.589,25,2.022,26,2.022,28,2.411,117,2.845,118,2.845,629,5.711,704,4.495,705,4.495,706,4.495,707,4.495,708,5.245,709,6.174,710,5.126]],["title/classes/UserPasswordAttemptDto.html",[29,1.614,711,3.707]],["body/classes/UserPasswordAttemptDto.html",[3,0.151,4,0.151,6,0.6,9,2.269,10,0.01,14,0.009,15,0.009,31,2.269,37,1.809,46,0.745,131,2.509,668,6.314,711,5.213,712,5.945,713,5.945,714,5.945]],["title/controllers/UserPublicController.html",[0,3.108,631,3.364]],["body/controllers/UserPublicController.html",[2,2.9,3,0.127,4,0.127,6,0.503,7,1.667,9,2.461,10,0.011,12,1.62,14,0.008,15,0.008,46,0.808,60,1.53,67,3.846,73,1.984,74,1.487,80,2.629,631,3.966,695,5.687,715,4.983,716,5.653,717,6.447,718,4.983,719,4.983,720,4.983,721,5.687,722,4.983]],["title/classes/UserRegisterDto.html",[29,1.614,721,3.364]],["body/classes/UserRegisterDto.html",[3,0.164,4,0.164,10,0.01,14,0.01,15,0.01,31,2.466,721,5.142,723,6.462]],["title/modules/UserRepositoryModule.html",[16,1.381,708,2.903]],["body/modules/UserRepositoryModule.html",[3,0.137,4,0.137,10,0.01,14,0.009,15,0.009,18,1.615,19,2.51,24,2.678,25,2.132,26,2.132,117,3,118,3,708,5.623,724,4.74,725,4.74,726,4.74,727,6.746,728,5.406]],["title/injectables/UserService.html",[61,1.848,709,3.108]],["body/injectables/UserService.html",[3,0.057,4,0.057,6,0.225,7,0.925,10,0.011,12,1.789,13,1.407,14,0.005,15,0.005,45,1.366,46,0.958,60,1.721,63,0.939,66,2.191,67,4.022,70,1.133,73,2.353,74,1.672,75,1.362,76,3.155,77,1.987,78,1.088,79,3.286,80,2.903,82,3.34,95,1.236,105,2.514,216,2.458,384,2.314,413,4.133,414,3.531,416,2.458,424,4.092,434,2.848,436,2.848,437,2.848,457,2.848,460,2.631,461,1.771,463,1.771,465,1.771,520,2.848,525,3.138,526,3.138,527,3.138,528,3.138,529,3.138,530,3.138,531,3.138,532,2.631,533,1.952,534,1.952,535,1.637,536,1.952,537,2.458,538,1.952,539,1.952,540,1.952,541,1.952,709,1.637,727,3.572,729,2.226,730,2.226]],["title/dependencies.html",[19,1.88,731,3.092]],["body/dependencies.html",[10,0.011,14,0.006,15,0.006,19,1.299,29,1.937,226,2.796,353,2.796,732,3.513,733,3.513,734,3.513,735,3.513,736,3.513,737,3.513,738,3.513,739,3.513,740,3.513,741,3.513,742,3.513,743,5.955,744,3.513,745,3.513,746,3.513,747,3.513,748,3.513,749,3.513,750,3.513,751,3.513,752,3.513,753,3.513,754,3.513,755,3.513,756,3.513,757,3.513,758,3.513,759,3.513,760,3.513,761,3.513,762,3.513,763,3.513,764,3.513,765,3.513,766,3.513,767,3.513,768,3.513,769,5.073,770,3.513,771,3.513,772,3.513,773,3.513,774,3.513,775,3.513,776,3.513,777,3.513,778,3.513,779,3.513,780,3.513,781,3.081,782,3.513,783,3.513,784,3.081,785,3.513,786,3.513,787,5.955,788,3.513,789,3.513,790,3.513,791,3.081,792,3.513,793,3.513,794,3.513,795,3.513,796,3.513,797,3.513,798,3.081,799,3.513,800,3.081,801,3.513,802,3.513,803,3.513,804,3.513,805,3.513,806,3.513]],["title/miscellaneous/enumerations.html",[807,2.052,808,4.46]],["body/miscellaneous/enumerations.html",[3,0.107,6,0.276,10,0.011,13,0.793,14,0.005,15,0.005,32,1.509,76,1.661,95,3.199,131,1.777,168,1.718,185,5.183,239,2.401,297,3.693,522,2.578,558,3.693,561,3.693,562,3.693,582,3.693,634,3.693,716,3.693,807,1.593,808,2.401,809,3.352,810,3.352,811,3.352,812,4.212,813,2.738,814,4.212,815,4.212,816,2.738,817,6.571,818,2.738,819,6.571,820,2.738,821,2.738,822,4.212,823,2.738,824,2.738,825,4.212,826,2.738,827,2.738,828,4.212,829,2.738,830,2.179,831,4.212,832,4.212,833,2.738,834,2.738,835,2.738,836,2.738,837,2.738,838,2.738,839,2.738,840,2.738,841,2.738,842,2.738,843,2.738,844,3.097,845,2.738,846,4.212,847,4.212,848,2.738,849,4.212,850,4.212,851,4.212,852,4.212,853,4.212,854,2.738,855,2.738,856,2.738,857,2.738,858,3.693,859,3.693,860,2.738,861,2.738,862,2.738,863,2.738,864,4.212,865,2.738,866,2.738,867,2.738,868,2.738,869,2.738,870,2.738,871,2.738,872,2.738,873,2.738]],["title/miscellaneous/functions.html",[807,2.052,874,4.048]],["body/miscellaneous/functions.html",[6,0.481,10,0.01,12,1.867,14,0.008,15,0.008,32,1.709,46,0.785,60,1.487,73,1.928,74,1.445,76,1.881,79,2.162,807,2.776,874,3.796,875,6.997,876,5.494,877,6.997,878,6.997,879,4.77,880,6.266,881,6.266,882,6.266,883,4.183,884,6.266,885,4.77,886,4.77,887,4.77,888,6.266,889,4.77,890,4.77,891,4.183,892,4.77]],["title/index.html",[6,0.356,893,3.526,894,3.526]],["body/index.html",[10,0.011,14,0.007,15,0.007,781,3.432,784,3.432,791,4.803,798,3.432,800,3.432,844,4.646,891,3.432,895,5.542,896,3.913,897,3.913,898,3.913,899,3.913,900,3.913,901,3.913,902,3.913,903,3.913,904,3.913,905,3.913,906,3.432,907,3.913,908,3.913,909,5.478,910,3.913,911,3.913,912,3.913,913,3.913,914,3.913,915,3.913,916,3.913,917,3.913,918,3.913,919,3.913,920,3.913,921,3.913,922,3.913,923,3.913,924,3.913,925,3.913,926,6.32,927,3.913,928,3.913,929,3.114,930,3.913,931,3.913,932,3.913,933,3.114,934,3.913,935,3.913,936,3.913,937,7.207,938,3.913,939,3.913,940,6.846,941,3.913,942,3.913,943,5.478,944,3.913,945,3.913,946,3.913,947,3.114,948,3.913,949,3.913,950,3.432,951,3.913,952,3.913,953,3.432,954,3.913,955,3.913]],["title/modules.html",[18,1.727]],["body/modules.html",[10,0.007,14,0.007,15,0.007,17,2.656,18,1.08,22,2.481,23,2.481,107,2.336,112,2.481,113,2.336,196,2.211,201,2.481,284,2.481,285,2.481,286,2.481,287,2.481,323,2.481,574,2.481,596,2.481,599,2.481,608,2.481,611,2.481,618,2.656,622,2.656,626,2.656,629,2.481,639,2.481,708,2.481,956,8.375,957,8.375,958,8.375,959,8.581,960,7.493,961,7.493]],["title/overview.html",[933,4.598]],["body/overview.html",[2,1.025,10,0.011,14,0.004,15,0.004,17,3.953,18,0.526,19,1.091,20,1.544,21,1.544,22,5.03,23,2.618,24,1.164,25,0.694,26,0.694,31,0.672,62,2.618,63,0.743,72,4.546,98,2.802,103,3.693,107,4.836,108,1.544,109,1.544,110,1.544,111,1.544,112,4.279,113,4.464,114,2.802,115,2.618,122,1.544,123,1.544,124,1.544,125,4.546,162,3.923,163,3.923,196,3.938,197,1.544,198,1.544,199,1.544,200,1.544,201,2.618,202,3.923,282,1.544,283,1.544,284,3.693,285,3.413,286,2.618,287,4.116,290,1.544,291,1.544,292,1.544,293,4.2,312,4.2,323,4.116,324,1.544,325,1.544,326,1.544,368,1.544,369,1.544,370,1.544,371,4.2,396,0.575,572,1.544,573,1.544,574,2.618,596,3.413,597,1.544,598,1.544,599,2.618,608,3.413,609,1.544,610,1.544,611,2.618,618,3.28,619,1.544,622,3.953,623,1.544,626,4.406,627,1.544,628,1.544,629,4.116,635,1.544,636,1.544,637,1.544,638,1.544,639,2.618,640,4.2,704,1.544,705,1.544,706,1.544,707,1.544,708,3.693,709,4.2,724,1.544,725,1.544,726,1.544,727,4.546,933,1.401,962,1.761,963,1.761,964,1.761,965,1.761,966,1.761]],["title/properties.html",[37,1.278,731,3.092]],["body/properties.html",[10,0.011,14,0.009,15,0.009,37,1.514,225,3.688,895,5.284,906,5.284,929,4.795,950,5.284,953,5.284,967,6.026,968,6.026,969,6.026,970,6.026]],["title/miscellaneous/typealiases.html",[807,2.052,971,5.087]],["body/miscellaneous/typealiases.html",[6,0.444,10,0.011,14,0.008,15,0.008,32,1.574,46,0.551,85,4.342,105,2.149,411,3.018,414,4.075,418,6.585,419,5.889,421,6.306,422,3.854,456,6.306,460,4.362,472,5.202,475,5.202,478,5.202,481,5.889,508,3.854,512,5.202,554,4.362,807,2.557,809,3.497,810,3.497,811,3.497,830,3.497,972,4.395,973,5.933,974,8.151,975,4.395]],["title/unit-test.html",[844,3.34,947,3.615]],["body/unit-test.html",[4,0.124,10,0.011,14,0.008,15,0.008,564,6.77,844,3.584,874,3.879,947,3.879,976,4.875,977,4.875,978,4.875,979,4.875,980,4.875,981,6.355,982,4.875,983,6.355,984,4.875,985,4.875,986,4.875,987,4.875,988,4.875,989,4.875,990,4.875,991,4.875,992,4.875,993,4.875,994,4.875,995,4.875]],["title/miscellaneous/variables.html",[807,2.052,996,4.46]],["body/miscellaneous/variables.html",[6,0.236,10,0.011,13,1.48,14,0.005,15,0.005,32,2.07,33,2.054,34,4.213,42,1.98,43,1.98,44,1.98,46,0.958,78,2.27,95,2.578,105,1.145,128,2.054,184,5.042,185,4.773,205,2.054,224,1.515,522,1.434,543,2.054,554,2.741,577,2.054,603,2.054,633,2.054,666,2.054,669,2.054,807,1.363,809,1.864,810,1.864,811,1.864,830,1.864,858,2.054,859,2.054,876,3.269,883,2.054,929,1.864,996,2.054,997,3.729,998,2.343,999,3.729,1000,3.729,1001,3.729,1002,3.729,1003,2.343,1004,3.729,1005,3.729,1006,3.729,1007,2.343,1008,3.729,1009,2.343,1010,4.644,1011,3.729,1012,2.343,1013,3.729,1014,2.343,1015,3.729,1016,2.343,1017,3.729,1018,2.343,1019,3.729,1020,2.343,1021,2.343,1022,2.343,1023,2.343,1024,2.343,1025,2.343,1026,2.343,1027,3.729,1028,3.729,1029,3.729,1030,5.294,1031,3.729,1032,3.729,1033,2.343,1034,3.729,1035,2.343,1036,2.343,1037,2.343,1038,2.343,1039,2.343,1040,2.343,1041,2.343,1042,2.343,1043,2.343,1044,2.343,1045,2.343,1046,2.343]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"classes/PermissionEntity.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingEntity.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"injectables/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":681,"title":{},"body":{"classes/UserEntity.html":{}}}],["0.0.1",{"_index":968,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["0.3.11",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["0/0",{"_index":987,"title":{},"body":{"unit-test.html":{}}}],["1",{"_index":239,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"miscellaneous/enumerations.html":{}}}],["1.0.0",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["1.0.32",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":564,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/RoleEntity.html":{},"unit-test.html":{}}}],["11/11",{"_index":986,"title":{},"body":{"unit-test.html":{}}}],["14",{"_index":684,"title":{},"body":{"classes/UserEntity.html":{}}}],["15.1.0",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["17.6.2",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["17.7.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["17/17",{"_index":984,"title":{},"body":{"unit-test.html":{}}}],["18",{"_index":964,"title":{},"body":{"overview.html":{}}}],["19",{"_index":965,"title":{},"body":{"overview.html":{}}}],["19/19",{"_index":981,"title":{},"body":{"unit-test.html":{}}}],["1})@type(undefined",{"_index":229,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{}}}],["2",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.1.3",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":982,"title":{},"body":{"unit-test.html":{}}}],["200",{"_index":234,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["22/22",{"_index":990,"title":{},"body":{"unit-test.html":{}}}],["23",{"_index":966,"title":{},"body":{"overview.html":{}}}],["24",{"_index":962,"title":{},"body":{"overview.html":{}}}],["29/29",{"_index":991,"title":{},"body":{"unit-test.html":{}}}],["3.0.2",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["3.252.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["30d",{"_index":700,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["4",{"_index":963,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":588,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["5.1.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":988,"title":{},"body":{"unit-test.html":{}}}],["5100",{"_index":840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.1.4",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["6100",{"_index":835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6101",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6404",{"_index":867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6500",{"_index":862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7.6.0",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":701,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["8/8",{"_index":992,"title":{},"body":{"unit-test.html":{}}}],["9",{"_index":657,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["9.0.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":983,"title":{},"body":{"unit-test.html":{}}}],["abortmultipart",{"_index":250,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["abortmultipart(path",{"_index":261,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["abstract",{"_index":911,"title":{},"body":{"index.html":{}}}],["access_for",{"_index":555,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/RoleEntity.html":{}}}],["access_token_id",{"_index":672,"title":{},"body":{"classes/UserEntity.html":{}}}],["accessfor",{"_index":544,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/RoleEntity.html":{}}}],["accesstoken",{"_index":667,"title":{},"body":{"classes/UserEntity.html":{}}}],["accesstokenexpirationtime",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokennotbeforeexpirationtime",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["acl",{"_index":407,"title":{},"body":{"interfaces/IAwsS3PutItemOptions.html":{}}}],["action",{"_index":545,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["admin",{"_index":831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aes256decrypt",{"_index":330,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["aes256decrypt(encrepted",{"_index":489,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["aes256decrypt(encrypted",{"_index":340,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["aes256encrypt",{"_index":331,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["aes256encrypt(data",{"_index":342,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["aliases",{"_index":972,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anonymous",{"_index":546,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["apiproperty({description",{"_index":652,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty({example",{"_index":223,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty({oneof",{"_index":242,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["app",{"_index":926,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["applanguage",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":17,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":566,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["array_of_string",{"_index":864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["asc",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":67,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/SettingService.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{}}}],["attempt.dto.ts",{"_index":713,"title":{},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["audience",{"_index":498,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["auth_jwt_access_token_error",{"_index":834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_jwt_at_strategy_name",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_jwt_refresh_token_error",{"_index":836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_jwt_rt_strategy_name",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authaccesstokenentity",{"_index":30,"title":{"classes/AuthAccessTokenEntity.html":{}},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"classes/UserEntity.html":{}}}],["authaccesstokenentityname",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authaccesstokenprotected",{"_index":875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authaccesstokenrepository",{"_index":72,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["authaccesstokenservice",{"_index":62,"title":{"injectables/AuthAccessTokenService.html":{}},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"overview.html":{}}}],["authentication",{"_index":895,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authentityabstract",{"_index":36,"title":{"classes/AuthEntityAbstract.html":{}},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["authjwtaccesstokenguard",{"_index":88,"title":{"injectables/AuthJwtAccessTokenGuard.html":{}},"body":{"injectables/AuthJwtAccessTokenGuard.html":{}}}],["authjwtaccesstokenstrategy",{"_index":98,"title":{"injectables/AuthJwtAccessTokenStrategy.html":{}},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"overview.html":{}}}],["authjwtmodule",{"_index":107,"title":{"modules/AuthJwtModule.html":{}},"body":{"modules/AuthJwtModule.html":{},"modules/CommonModule.html":{},"modules/RoutesPublicModule.html":{},"modules.html":{},"overview.html":{}}}],["authjwtpayload",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authjwtrefreshtokenguard",{"_index":119,"title":{"injectables/AuthJwtRefreshTokenGuard.html":{}},"body":{"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["authjwtrefreshtokenstrategy",{"_index":114,"title":{"injectables/AuthJwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"overview.html":{}}}],["authjwtrepositorymodule",{"_index":112,"title":{"modules/AuthJwtRepositoryModule.html":{}},"body":{"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["authjwttoken",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":969,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":929,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["authorization.split",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorizations",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorizations.length",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorizations[1",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authrefreshtokenentity",{"_index":127,"title":{"classes/AuthRefreshTokenEntity.html":{}},"body":{"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"classes/UserEntity.html":{}}}],["authrefreshtokenentityname",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authrefreshtokenprotected",{"_index":877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authrefreshtokenrepository",{"_index":125,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"injectables/AuthRefreshTokenService.html":{},"overview.html":{}}}],["authrefreshtokenservice",{"_index":115,"title":{"injectables/AuthRefreshTokenService.html":{}},"body":{"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"overview.html":{}}}],["authservice",{"_index":103,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["authupdaterefreshtokendto",{"_index":139,"title":{"classes/AuthUpdateRefreshTokenDto.html":{}},"body":{"injectables/AuthRefreshTokenService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["available",{"_index":961,"title":{},"body":{"modules.html":{}}}],["aws",{"_index":226,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"dependencies.html":{}}}],["aws_photo_entity_name",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awsmodule",{"_index":196,"title":{"modules/AwsModule.html":{}},"body":{"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["awsphotoentity",{"_index":204,"title":{"classes/AwsPhotoEntity.html":{}},"body":{"classes/AwsPhotoEntity.html":{},"classes/UserEntity.html":{}}}],["awsrepositorymodule",{"_index":201,"title":{"modules/AwsRepositoryModule.html":{}},"body":{"modules/AwsModule.html":{},"modules/AwsRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["awss3multipartpartsserialization",{"_index":219,"title":{"classes/AwsS3MultipartPartsSerialization.html":{}},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["awss3multipartserialization",{"_index":230,"title":{"classes/AwsS3MultipartSerialization.html":{}},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["awss3serialization",{"_index":245,"title":{"classes/AwsS3Serialization.html":{}},"body":{"classes/AwsS3Serialization.html":{}}}],["awss3service",{"_index":202,"title":{"injectables/AwsS3Service.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsS3Service.html":{},"injectables/HealthAwsS3Indicator.html":{},"overview.html":{}}}],["b.mohamed",{"_index":970,"title":{},"body":{"properties.html":{}}}],["base64decrypt",{"_index":332,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64decrypt(data",{"_index":343,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64encrypt",{"_index":333,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64encrypt(data",{"_index":344,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64validate",{"_index":334,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64validate(clientbasictoken",{"_index":345,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base_url",{"_index":212,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["baseurl",{"_index":206,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{}}}],["bcrypt",{"_index":353,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{},"dependencies.html":{}}}],["bcrypt(passwordstring",{"_index":358,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["bcryptcomapre",{"_index":354,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["bcryptcomapre(passwordstring",{"_index":360,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["before_expiration",{"_index":132,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["beforeexpiration",{"_index":129,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["beforeinsert()@beforeupdate",{"_index":594,"title":{},"body":{"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["beforesave",{"_index":580,"title":{},"body":{"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["blob",{"_index":276,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["bodies",{"_index":547,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["boilerplate",{"_index":896,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["branches",{"_index":978,"title":{},"body":{"unit-test.html":{}}}],["browse",{"_index":959,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":956,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":248,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["buffer",{"_index":273,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["c:/users/lenovo/desktop/programmation/back/nestjs/production/authentication/src/common/helpers/services/helper.encryption.service.ts",{"_index":980,"title":{},"body":{"unit-test.html":{}}}],["c:/users/lenovo/desktop/programmation/back/nestjs/production/authentication/src/common/helpers/services/helper.hash.service.ts",{"_index":985,"title":{},"body":{"unit-test.html":{}}}],["c:/users/lenovo/desktop/programmation/back/nestjs/production/authentication/src/common/helpers/services/helper.string.service.ts",{"_index":989,"title":{},"body":{"unit-test.html":{}}}],["censor",{"_index":374,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["censor(value",{"_index":382,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["centralized",{"_index":907,"title":{},"body":{"index.html":{}}}],["character",{"_index":659,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["checkawshealth",{"_index":321,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkconnection",{"_index":251,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["checkemail",{"_index":375,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkemail(email",{"_index":383,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordmedium",{"_index":376,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordmedium(password",{"_index":385,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordstrong",{"_index":377,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordstrong(password",{"_index":386,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordweak",{"_index":378,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordweak(password",{"_index":387,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checksafestring",{"_index":379,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checksafestring(text",{"_index":388,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["chunk'})@type(undefined",{"_index":238,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["class",{"_index":29,"title":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"classes/UserRegisterDto.html":{}},"body":{"dependencies.html":{}}}],["classdecorator",{"_index":889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":31,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"classes/UserRegisterDto.html":{},"overview.html":{}}}],["clean",{"_index":902,"title":{},"body":{"index.html":{}}}],["clientbasictoken",{"_index":347,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["cluster_appmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule",{"_index":108,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule_exports",{"_index":111,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule_imports",{"_index":110,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule_providers",{"_index":109,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtrepositorymodule",{"_index":122,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["cluster_authjwtrepositorymodule_exports",{"_index":123,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["cluster_authjwtrepositorymodule_providers",{"_index":124,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["cluster_awsmodule",{"_index":197,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_exports",{"_index":199,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_imports",{"_index":200,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_providers",{"_index":198,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":282,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":283,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":290,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":291,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":292,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":324,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_exports",{"_index":326,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_imports",{"_index":327,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_healthmodule_providers",{"_index":325,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_helpermodule",{"_index":368,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_helpermodule_exports",{"_index":370,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_helpermodule_providers",{"_index":369,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":572,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_imports",{"_index":573,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_permissionmodule",{"_index":597,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_imports",{"_index":598,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":609,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":610,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_routesadminmodule",{"_index":619,"title":{},"body":{"modules/RoutesAdminModule.html":{},"overview.html":{}}}],["cluster_routesadminmodule_imports",{"_index":620,"title":{},"body":{"modules/RoutesAdminModule.html":{}}}],["cluster_routesmodule",{"_index":623,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_imports",{"_index":624,"title":{},"body":{"modules/RoutesModule.html":{}}}],["cluster_routespublicmodule",{"_index":627,"title":{},"body":{"modules/RoutesPublicModule.html":{},"overview.html":{}}}],["cluster_routespublicmodule_imports",{"_index":628,"title":{},"body":{"modules/RoutesPublicModule.html":{},"overview.html":{}}}],["cluster_settingmodule",{"_index":635,"title":{},"body":{"modules/SettingModule.html":{},"overview.html":{}}}],["cluster_settingmodule_exports",{"_index":637,"title":{},"body":{"modules/SettingModule.html":{},"overview.html":{}}}],["cluster_settingmodule_imports",{"_index":636,"title":{},"body":{"modules/SettingModule.html":{},"overview.html":{}}}],["cluster_settingmodule_providers",{"_index":638,"title":{},"body":{"modules/SettingModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":704,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":707,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":706,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":705,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userrepositorymodule",{"_index":724,"title":{},"body":{"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["cluster_userrepositorymodule_exports",{"_index":726,"title":{},"body":{"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["cluster_userrepositorymodule_providers",{"_index":725,"title":{},"body":{"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["code",{"_index":903,"title":{},"body":{"index.html":{}}}],["code.constant.ts",{"_index":814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code.enum.constant.ts",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column({name",{"_index":47,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/LoggerEntity.html":{},"classes/SettingEntity.html":{}}}],["column({nullable",{"_index":214,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["column({type",{"_index":675,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({unique",{"_index":605,"title":{},"body":{"classes/RoleEntity.html":{}}}],["command",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["commander",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":22,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["complete_url",{"_index":213,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["completedpart",{"_index":263,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["completemultipart",{"_index":252,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["completemultipart(path",{"_index":262,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["completeurl",{"_index":207,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{}}}],["compose",{"_index":922,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":102,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/SettingService.html":{}}}],["configuration",{"_index":908,"title":{},"body":{"index.html":{}}}],["const",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}}}],["constructor(authaccesstokenrepository",{"_index":71,"title":{},"body":{"injectables/AuthAccessTokenService.html":{}}}],["constructor(authrefreshtokenrepository",{"_index":137,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{}}}],["constructor(awss3service",{"_index":317,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["constructor(configservice",{"_index":101,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/SettingService.html":{}}}],["constructor(jwtservice",{"_index":338,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["constructor(userrepository",{"_index":730,"title":{},"body":{"injectables/UserService.html":{}}}],["contact",{"_index":955,"title":{},"body":{"index.html":{}}}],["contains",{"_index":654,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["content",{"_index":272,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/UserController.html":{},"controllers/UserPublicController.html":{}},"body":{}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"controllers/UserController.html":{},"controllers/UserPublicController.html":{},"overview.html":{}}}],["coverage",{"_index":976,"title":{},"body":{"unit-test.html":{}}}],["create",{"_index":66,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["create(data",{"_index":75,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["created_at",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdatecolumn({name",{"_index":56,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["createmany",{"_index":430,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["createmany(data",{"_index":454,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["createmultipart",{"_index":253,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["createmultipart(filename",{"_index":264,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["createparamdecorator",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpassword",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["createpassword(password",{"_index":404,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["createpassword(passwordstring",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["createpayloadtoken",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["createpayloadtoken(data",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["createtypeormoptions",{"_index":302,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"interfaces/IDatabaseOptionsService.html":{}}}],["crypto",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":78,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":901,"title":{},"body":{"index.html":{}}}],["database_created_at_field_name",{"_index":42,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["database_delete_at_field_name",{"_index":43,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["database_update_at_field_name",{"_index":44,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["databaseentity",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databaseentity(options",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databaseentityabstract",{"_index":87,"title":{"classes/DatabaseEntityAbstract.html":{}},"body":{"classes/AuthEntityAbstract.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["databasemodel",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasemodel(entity",{"_index":890,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasemodule",{"_index":284,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseoptionsservice",{"_index":293,"title":{"injectables/DatabaseOptionsService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"overview.html":{}}}],["date",{"_index":55,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/DatabaseEntityAbstract.html":{},"interfaces/IAuthPayloadOptions.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["debug",{"_index":297,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"miscellaneous/enumerations.html":{}}}],["decodetoken",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["decodetoken(token",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["decorators",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/DatabaseEntityAbstract.html":{},"controllers/HealthController.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{}}}],["decrypttoken",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["decrypttoken(payload",{"_index":405,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["decrypttoken(undefined",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["default",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseOptionsService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleted_at",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedatecolumn({name",{"_index":57,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["deletefolder",{"_index":254,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deletefolder(directory",{"_index":266,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteiteminbucket",{"_index":255,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteiteminbucket(filename",{"_index":268,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteitemsinbucket",{"_index":256,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteitemsinbucket(filenames",{"_index":269,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deletemany",{"_index":431,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deletemany(find",{"_index":455,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deletemanybyid",{"_index":432,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deletemanybyid(id",{"_index":458,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deleteone",{"_index":433,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deleteone(find",{"_index":459,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deleteonebyid",{"_index":434,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["deleteonebyid(id",{"_index":461,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":19,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/LoggerModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":225,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"properties.html":{}}}],["development",{"_index":939,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":914,"title":{},"body":{"index.html":{}}}],["directory",{"_index":267,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["docker",{"_index":921,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":920,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":904,"title":{},"body":{"index.html":{}}}],["dynamicmodule",{"_index":617,"title":{},"body":{"modules/RouterModule.html":{}}}],["e2e",{"_index":949,"title":{},"body":{"index.html":{}}}],["ecryption_key",{"_index":53,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["email",{"_index":384,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["en",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encrepted",{"_index":490,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["encrypted",{"_index":341,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["encrypted_token",{"_index":48,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryptedtoken",{"_index":38,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryption_iv",{"_index":52,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryptioniv",{"_index":39,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryptionkey",{"_index":40,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encrypttoken",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["encrypttoken(payload",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["end",{"_index":925,"title":{},"body":{"index.html":{}}}],["entity",{"_index":891,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["entityoptions",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":557,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{}}}],["enum.constant.ts",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_auth_access_for",{"_index":554,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/RoleEntity.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enum_auth_access_for_default",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enum_auth_access_for_super_admin",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enum_auth_status_code_error",{"_index":812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_error_status_code_error",{"_index":815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_logger_action",{"_index":558,"title":{},"body":{"classes/LoggerEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enum_logger_level",{"_index":561,"title":{},"body":{"classes/LoggerEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enum_logger_method",{"_index":562,"title":{},"body":{"classes/LoggerEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enum_pagination_sort_type",{"_index":822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_permission_group",{"_index":582,"title":{},"body":{"classes/PermissionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enum_request_status_code_error",{"_index":825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_setting_data_type",{"_index":634,"title":{},"body":{"classes/SettingEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enum_user_status_code_error",{"_index":828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":808,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":298,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["erd",{"_index":935,"title":{},"body":{"index.html":{}}}],["err",{"_index":97,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["error",{"_index":94,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["error_request_timeout",{"_index":842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_service_unavailable",{"_index":841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_unknown",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["etag",{"_index":221,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{}}}],["example",{"_index":660,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["excludeids",{"_index":415,"title":{},"body":{"interfaces/IDatabaseExistOptions.html":{}}}],["executioncontext",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existemail",{"_index":525,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existemail(email",{"_index":533,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existphonenumber",{"_index":526,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existphonenumber(phonenumber",{"_index":534,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":435,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["exists(find",{"_index":462,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["existusername",{"_index":527,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existusername(username",{"_index":536,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["expire",{"_index":699,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["expiredin",{"_index":496,"title":{},"body":{"interfaces/IHelperJwtOptions.html":{}}}],["exports",{"_index":118,"title":{},"body":{"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{}}}],["express",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":35,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/HealthAwsS3Indicator.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/IUserEntity.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["faker",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":51,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["fatal",{"_index":847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["features",{"_index":898,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"classes/PermissionEntity.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingEntity.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"injectables/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"unit-test.html":{}}}],["filename",{"_index":208,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["filenames",{"_index":270,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["find",{"_index":457,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findall",{"_index":436,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findall(find",{"_index":463,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":437,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findone(find",{"_index":465,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyemail",{"_index":528,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyemail(email",{"_index":538,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyid",{"_index":438,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["findonebyid(id",{"_index":466,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["findonebytoken",{"_index":68,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["findonebytoken(token",{"_index":81,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["findonebyusername",{"_index":529,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyusername(username",{"_index":539,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findoptionsrelations",{"_index":423,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{}}}],["firstname",{"_index":647,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserEntity.html":{}}}],["fk_auth_jwt_access_token",{"_index":673,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_auth_jwt_refresh_token",{"_index":690,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_aws_photo_user",{"_index":687,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_role_permission",{"_index":593,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["fk_role_user",{"_index":693,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_user_logger",{"_index":571,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["foreignkeyconstraintname",{"_index":570,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["forroot",{"_index":616,"title":{},"body":{"modules/RouterModule.html":{}}}],["front",{"_index":924,"title":{},"body":{"index.html":{}}}],["functions",{"_index":874,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["get('hello",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["getaccesstokenexpirationtime",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["getaccesstokennotbeforeexpirationtime",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["getappname",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["getiteminbucket",{"_index":257,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["getiteminbucket(filename",{"_index":271,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["getmaxpasswordattempt",{"_index":519,"title":{},"body":{"interfaces/ISettingService.html":{},"injectables/SettingService.html":{}}}],["getrefreshtokenexpirationtime",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["getrefreshtokenexpirationtimerememeberme",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["getrefreshtokennotbeforeexpirationtime",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["getting",{"_index":893,"title":{"index.html":{}},"body":{}}],["gettotal",{"_index":439,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["gettotal(find",{"_index":467,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["google",{"_index":931,"title":{},"body":{"index.html":{}}}],["graph",{"_index":960,"title":{},"body":{"modules.html":{}}}],["group",{"_index":578,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["handled",{"_index":934,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":92,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["handlerequest(err",{"_index":93,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["hashone",{"_index":367,"title":{},"body":{"injectables/HelperHashService.html":{}}}],["hashtwo",{"_index":366,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["hasone",{"_index":494,"title":{},"body":{"interfaces/IHelperHashService.html":{}}}],["head",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["headerapikey",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthawss3indicator",{"_index":312,"title":{"injectables/HealthAwsS3Indicator.html":{}},"body":{"injectables/HealthAwsS3Indicator.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["healthcheck()@get('/aws",{"_index":322,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":319,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/RoutesModule.html":{}}}],["healthindicator",{"_index":315,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["healthmodule",{"_index":323,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["helperencryptionservice",{"_index":162,"title":{"injectables/HelperEncryptionService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["helperhashservice",{"_index":163,"title":{"injectables/HelperHashService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["helpermodule",{"_index":113,"title":{"modules/HelperModule.html":{}},"body":{"modules/AuthJwtModule.html":{},"modules/CommonModule.html":{},"modules/HelperModule.html":{},"modules.html":{},"overview.html":{}}}],["helperstringservice",{"_index":371,"title":{"injectables/HelperStringService.html":{}},"body":{"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"overview.html":{}}}],["host",{"_index":299,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["iauthaccesstokenservice",{"_index":395,"title":{"interfaces/IAuthAccessTokenService.html":{}},"body":{"interfaces/IAuthAccessTokenService.html":{}}}],["iauthpayloadoptions",{"_index":169,"title":{"interfaces/IAuthPayloadOptions.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthService.html":{}}}],["iauthrefreshtokenservice",{"_index":400,"title":{"interfaces/IAuthRefreshTokenService.html":{}},"body":{"interfaces/IAuthRefreshTokenService.html":{}}}],["iauthservice",{"_index":402,"title":{"interfaces/IAuthService.html":{}},"body":{"interfaces/IAuthService.html":{}}}],["iawss3putitemoptions",{"_index":265,"title":{"interfaces/IAwsS3PutItemOptions.html":{}},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{}}}],["iawss3service",{"_index":409,"title":{"interfaces/IAwsS3Service.html":{}},"body":{"interfaces/IAwsS3Service.html":{}}}],["id",{"_index":45,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/DatabaseEntityAbstract.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["idatabasecreatemanyoptions",{"_index":973,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idatabasecreateoptions",{"_index":77,"title":{"interfaces/IDatabaseCreateOptions.html":{}},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasedeleteoptions",{"_index":460,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseexistoptions",{"_index":413,"title":{"interfaces/IDatabaseExistOptions.html":{}},"body":{"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasefindalloptions",{"_index":416,"title":{"interfaces/IDatabaseFindAllOptions.html":{}},"body":{"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasefindoneoptions",{"_index":82,"title":{"interfaces/IDatabaseFindOneOptions.html":{}},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasemanyoptions",{"_index":456,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseoptions",{"_index":414,"title":{},"body":{"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseoptionsservice",{"_index":425,"title":{"interfaces/IDatabaseOptionsService.html":{}},"body":{"interfaces/IDatabaseOptionsService.html":{}}}],["idatabaserepository",{"_index":428,"title":{"interfaces/IDatabaseRepository.html":{}},"body":{"interfaces/IDatabaseRepository.html":{}}}],["idatabaserestoremanyoptions",{"_index":472,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaserestoreoptions",{"_index":475,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabasesoftdeletemanyoptions",{"_index":478,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabasesoftdeleteoptions",{"_index":481,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseupdateoptions",{"_index":85,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["ihelperencryptionservice",{"_index":486,"title":{"interfaces/IHelperEncryptionService.html":{}},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["ihelperhashservice",{"_index":491,"title":{"interfaces/IHelperHashService.html":{}},"body":{"interfaces/IHelperHashService.html":{}}}],["ihelperjwtoptions",{"_index":177,"title":{"interfaces/IHelperJwtOptions.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperJwtOptions.html":{}}}],["ihelperjwtverifyoptions",{"_index":180,"title":{"interfaces/IHelperJwtVerifyOptions.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{}}}],["ihelperrandomstringoptions",{"_index":391,"title":{"interfaces/IHelperRandomStringOptions.html":{}},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{}}}],["ihelperstringservice",{"_index":504,"title":{"interfaces/IHelperStringService.html":{}},"body":{"interfaces/IHelperStringService.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/LoggerModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{}}}],["increasepasswordattempt",{"_index":530,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["increasepasswordattempt(user",{"_index":540,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"injectables/SettingService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index('access_for')@column({name",{"_index":604,"title":{},"body":{"classes/RoleEntity.html":{}}}],["index('access_token')@onetoone(undefined)@joincolumn({name",{"_index":671,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('description')@column({name",{"_index":581,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["index('email')@column({type",{"_index":674,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('group')@column({name",{"_index":583,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["index('is_active')@column({name",{"_index":584,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["index('is_active')@column({type",{"_index":676,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('lastname')@column({type",{"_index":677,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('name')@column({name",{"_index":586,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["index('password')@column({type",{"_index":678,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('password_attempt')@column({type",{"_index":679,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('phone_number')@column({name",{"_index":682,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('photo')@onetoone(undefined)@joincolumn({name",{"_index":685,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('refresh_token')@onetoone(undefined)@joincolumn({name",{"_index":688,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('role')@manytoone(undefined)@joincolumn({name",{"_index":691,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('username')@column({type",{"_index":694,"title":{},"body":{"classes/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"classes/PermissionEntity.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingEntity.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"injectables/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["init",{"_index":227,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{}},"body":{}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"injectables/SettingService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":936,"title":{},"body":{"index.html":{}}}],["int",{"_index":133,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{},"classes/LoggerEntity.html":{},"classes/UserEntity.html":{}}}],["integration",{"_index":909,"title":{},"body":{"index.html":{}}}],["interface",{"_index":394,"title":{"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{}},"body":{}}],["interfaces",{"_index":396,"title":{},"body":{"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"overview.html":{}}}],["ipaginationoptions",{"_index":417,"title":{"interfaces/IPaginationOptions.html":{}},"body":{"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IPaginationOptions.html":{}}}],["ipaginationsort",{"_index":512,"title":{},"body":{"interfaces/IPaginationOptions.html":{},"miscellaneous/typealiases.html":{}}}],["iroleentity",{"_index":513,"title":{"interfaces/IRoleEntity.html":{}},"body":{"interfaces/IRoleEntity.html":{},"interfaces/IUserEntity.html":{}}}],["irunning",{"_index":938,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":585,"title":{},"body":{"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["isactive",{"_index":579,"title":{},"body":{"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["isettingservice",{"_index":517,"title":{"interfaces/ISettingService.html":{}},"body":{"interfaces/ISettingService.html":{}}}],["ishealthy",{"_index":316,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["ishealthy(key",{"_index":318,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["isnumber()@type(undefined)@isnotempty",{"_index":714,"title":{},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["isoptional",{"_index":663,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["issuer",{"_index":499,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["iuserentity",{"_index":520,"title":{"interfaces/IUserEntity.html":{}},"body":{"interfaces/IUserEntity.html":{},"injectables/UserService.html":{}}}],["iuserservice",{"_index":523,"title":{"interfaces/IUserService.html":{}},"body":{"interfaces/IUserService.html":{}}}],["iv",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jenkinsfile",{"_index":932,"title":{},"body":{"index.html":{}}}],["joi",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":419,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["js",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["js/faker",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":560,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["jsonwebtoken",{"_index":915,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":791,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["jwt/auth.jwt.module.ts",{"_index":116,"title":{},"body":{"modules/AuthJwtModule.html":{}}}],["jwt/constants/auth.constant.ts",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/constants/auth.enum.constant.ts",{"_index":830,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["jwt/constants/enum.status",{"_index":833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jwt/decorators/auth.jwt.decorator.ts",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jwt/dto/auth.refresh",{"_index":192,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{}}}],["jwt/guards/access",{"_index":89,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{}}}],["jwt/guards/refresh",{"_index":120,"title":{},"body":{"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["jwt/interfaces/auth.access",{"_index":397,"title":{},"body":{"interfaces/IAuthAccessTokenService.html":{}}}],["jwt/interfaces/auth.interface.ts",{"_index":399,"title":{},"body":{"interfaces/IAuthPayloadOptions.html":{}}}],["jwt/interfaces/auth.refresh",{"_index":401,"title":{},"body":{"interfaces/IAuthRefreshTokenService.html":{}}}],["jwt/interfaces/auth.service.interface.ts",{"_index":403,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["jwt/repository/auth.jwt.repository.module.ts",{"_index":126,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{}}}],["jwt/repository/entities/abstract/auth.entity.abstract.ts",{"_index":86,"title":{},"body":{"classes/AuthEntityAbstract.html":{}}}],["jwt/repository/entities/auth.access",{"_index":33,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"miscellaneous/variables.html":{}}}],["jwt/repository/entities/auth.refresh",{"_index":128,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{},"miscellaneous/variables.html":{}}}],["jwt/services/auth.access",{"_index":64,"title":{},"body":{"injectables/AuthAccessTokenService.html":{}}}],["jwt/services/auth.refresh",{"_index":135,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{}}}],["jwt/services/auth.service.ts",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_access_token",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_refresh_token",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_token",{"_index":54,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["jwtaccesstoken",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdecrypt",{"_index":335,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtdecrypt(jwtencrypted",{"_index":348,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtencrypt",{"_index":336,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtencrypt(payload",{"_index":350,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtencrypted",{"_index":349,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtrefreshtoken",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":339,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["jwttoken",{"_index":41,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["jwtverify",{"_index":337,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtverify(token",{"_index":351,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["key",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["last",{"_index":240,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["lastname",{"_index":648,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserEntity.html":{}}}],["lenght",{"_index":506,"title":{},"body":{"interfaces/IHelperStringService.html":{}}}],["length",{"_index":237,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["level",{"_index":548,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["license",{"_index":950,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":954,"title":{},"body":{"index.html":{}}}],["limit",{"_index":918,"title":{},"body":{"index.html":{}}}],["lines",{"_index":979,"title":{},"body":{"unit-test.html":{}}}],["link",{"_index":923,"title":{},"body":{"index.html":{}}}],["listbucket",{"_index":258,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["listtiteminbucket",{"_index":259,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["listtiteminbucket(prifix",{"_index":277,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["literal",{"_index":511,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["lodash",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger_entity_name",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggerentity",{"_index":542,"title":{"classes/LoggerEntity.html":{}},"body":{"classes/LoggerEntity.html":{}}}],["loggermodule",{"_index":285,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerrepositorymodule",{"_index":574,"title":{"modules/LoggerRepositoryModule.html":{}},"body":{"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["login",{"_index":716,"title":{},"body":{"controllers/UserPublicController.html":{},"miscellaneous/enumerations.html":{}}}],["login(userlogindto",{"_index":718,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["logindate",{"_index":194,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{},"interfaces/IAuthPayloadOptions.html":{}}}],["manytoone(undefined",{"_index":590,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["matching",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"classes/PermissionEntity.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingEntity.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"injectables/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":235,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["maxpartnumber",{"_index":231,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["metadata",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":549,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["methoddecorator",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"classes/PermissionEntity.html":{},"modules/RouterModule.html":{},"injectables/SettingService.html":{},"classes/UserEntity.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{}}}],["mime",{"_index":209,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{}}}],["miscellaneous",{"_index":807,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":953,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mode",{"_index":943,"title":{},"body":{"index.html":{}}}],["model",{"_index":440,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/AwsRepositoryModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{}},"body":{}}],["modules",{"_index":18,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/AwsRepositoryModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["multipart'})@type(undefined",{"_index":228,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["mysql",{"_index":910,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":453,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["name",{"_index":60,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"injectables/SettingService.html":{},"classes/UserEntity.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":781,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs",{"_index":784,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bullmq",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":993,"title":{},"body":{"unit-test.html":{}}}],["ngrx/store",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["notbefore",{"_index":497,"title":{},"body":{"interfaces/IHelperJwtOptions.html":{}}}],["npm",{"_index":937,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":50,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":131,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthService.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperStringService.html":{},"classes/LoggerEntity.html":{},"classes/UserEntity.html":{},"classes/UserPasswordAttemptDto.html":{},"miscellaneous/enumerations.html":{}}}],["oauth2",{"_index":930,"title":{},"body":{"index.html":{}}}],["object",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectcannedacl",{"_index":408,"title":{},"body":{"interfaces/IAwsS3PutItemOptions.html":{}}}],["omit",{"_index":412,"title":{},"body":{"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/IUserEntity.html":{}}}],["onetomany(undefined",{"_index":606,"title":{},"body":{"classes/RoleEntity.html":{}}}],["onetoone(undefined",{"_index":217,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["onetoone(undefined)@joincolumn({name",{"_index":567,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["optional",{"_index":74,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"classes/SettingEntity.html":{},"injectables/SettingService.html":{},"classes/UserLoginDto.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":76,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["options.service.interface.ts",{"_index":427,"title":{},"body":{"interfaces/IDatabaseOptionsService.html":{}}}],["options.service.ts",{"_index":296,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["ours",{"_index":346,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["out",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/LoggerModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["overview",{"_index":933,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":731,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paging",{"_index":509,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["parameterdecorator",{"_index":892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":73,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"injectables/SettingService.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":550,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["parser",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":236,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["parth",{"_index":281,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["partnumber",{"_index":222,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["parts",{"_index":232,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["passport",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":300,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperStringService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["password_attempt",{"_index":680,"title":{},"body":{"classes/UserEntity.html":{}}}],["passwordattempt",{"_index":668,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserPasswordAttemptDto.html":{}}}],["passwordhashed",{"_index":361,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["passwordsaltlength",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordstring",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["patch",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["path",{"_index":210,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"classes/LoggerEntity.html":{}}}],["path_with_file_name",{"_index":215,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["pathwithfilename",{"_index":211,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{}}}],["payload",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["payloadhashed",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["permission",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["permission_entity_name",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissionentity",{"_index":516,"title":{"classes/PermissionEntity.html":{}},"body":{"interfaces/IRoleEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{}}}],["permissionmodule",{"_index":596,"title":{"modules/PermissionModule.html":{}},"body":{"modules/PermissionModule.html":{},"modules/RoutesAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionrepositorymodule",{"_index":599,"title":{"modules/PermissionRepositoryModule.html":{}},"body":{"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["permissions",{"_index":515,"title":{},"body":{"interfaces/IRoleEntity.html":{},"classes/RoleEntity.html":{}}}],["permissions.name",{"_index":607,"title":{},"body":{"classes/RoleEntity.html":{}}}],["phone_number",{"_index":683,"title":{},"body":{"classes/UserEntity.html":{}}}],["phonenumber",{"_index":535,"title":{},"body":{"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["photo",{"_index":669,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["photo_id",{"_index":686,"title":{},"body":{"classes/UserEntity.html":{}}}],["pick",{"_index":418,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["port",{"_index":301,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["post",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post('login",{"_index":719,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["post('register",{"_index":722,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["prefix",{"_index":393,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{}}}],["prifix",{"_index":278,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":59,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["private",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{}}}],["production",{"_index":945,"title":{},"body":{"index.html":{}}}],["project",{"_index":951,"title":{},"body":{"index.html":{}}}],["promise",{"_index":80,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"injectables/SettingService.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/IUserEntity.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"properties.html":{}}}],["providers",{"_index":117,"title":{},"body":{"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{}}}],["put",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pwdhashed",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["pwdstring",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["r",{"_index":469,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["random",{"_index":380,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["random(lenght",{"_index":507,"title":{},"body":{"interfaces/IHelperStringService.html":{}}}],["random(length",{"_index":390,"title":{},"body":{"injectables/HelperStringService.html":{}}}],["randomreference",{"_index":381,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["randomreference(length",{"_index":392,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["randomsalt",{"_index":355,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["randomsalt(length",{"_index":362,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["rate",{"_index":917,"title":{},"body":{"index.html":{}}}],["raw",{"_index":441,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["raw(rawoperation",{"_index":468,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["rawoperation",{"_index":470,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["readable",{"_index":274,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["readablestream",{"_index":275,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["readonly",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["record",{"_index":105,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":569,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["reflect",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":698,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["refresh_token_id",{"_index":689,"title":{},"body":{"classes/UserEntity.html":{}}}],["refreshtoken",{"_index":670,"title":{},"body":{"classes/UserEntity.html":{}}}],["refreshtokenexpirationtime",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokenexpirationtimerememeberme",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokennotbeforeexpirationtime",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["register",{"_index":717,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["register(userregisterdto",{"_index":720,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["relational",{"_index":900,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":913,"title":{},"body":{"index.html":{}}}],["release1",{"_index":906,"title":{},"body":{"index.html":{},"properties.html":{}}}],["remember_me_expired",{"_index":134,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["rememberme",{"_index":195,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{},"classes/UserLoginDto.html":{}}}],["remembermeexpired",{"_index":130,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["rememeberme",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["rename",{"_index":927,"title":{},"body":{"index.html":{}}}],["repo",{"_index":928,"title":{},"body":{"index.html":{}}}],["repository",{"_index":912,"title":{},"body":{"index.html":{}}}],["request_id",{"_index":563,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["request_validation_error",{"_index":861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestid",{"_index":551,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["requestmodule",{"_index":286,"title":{"modules/RequestModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["required",{"_index":649,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["reset",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/LoggerModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["resetpasswordattempt",{"_index":531,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["resetpasswordattempt(id",{"_index":541,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["restoremany",{"_index":442,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoremany(find",{"_index":471,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoremanybyid",{"_index":443,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoremanybyid(id",{"_index":473,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreone",{"_index":444,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreone(find",{"_index":474,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreonebyid",{"_index":445,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreonebyid(id",{"_index":476,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["results",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"modules/LoggerModule.html":{},"modules/LoggerRepositoryModule.html":{},"classes/PermissionEntity.html":{},"modules/PermissionModule.html":{},"modules/PermissionRepositoryModule.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingEntity.html":{},"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"injectables/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"classes/PermissionEntity.html":{},"modules/RouterModule.html":{},"injectables/SettingService.html":{},"classes/UserEntity.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":522,"title":{},"body":{"interfaces/IUserEntity.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.permissions)@joincolumn({name",{"_index":591,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["role_entity_name",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role_id",{"_index":692,"title":{},"body":{"classes/UserEntity.html":{}}}],["role_name",{"_index":592,"title":{},"body":{"classes/PermissionEntity.html":{}}}],["roleentity",{"_index":589,"title":{"classes/RoleEntity.html":{}},"body":{"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{}}}],["rolemodule",{"_index":608,"title":{"modules/RoleModule.html":{}},"body":{"modules/RoleModule.html":{},"modules/RoutesPublicModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepositorymodule",{"_index":611,"title":{"modules/RoleRepositoryModule.html":{}},"body":{"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["routermodule",{"_index":23,"title":{"modules/RouterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RouterModule.html":{},"modules.html":{},"overview.html":{}}}],["routesadminmodule",{"_index":618,"title":{"modules/RoutesAdminModule.html":{}},"body":{"modules/RoutesAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["routesmodule",{"_index":622,"title":{"modules/RoutesModule.html":{}},"body":{"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["routespublicmodule",{"_index":626,"title":{"modules/RoutesPublicModule.html":{}},"body":{"modules/RoutesPublicModule.html":{},"modules.html":{},"overview.html":{}}}],["run",{"_index":940,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":798,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["s3",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["s3.indicator.ts",{"_index":314,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["s3client",{"_index":249,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["safe",{"_index":502,"title":{},"body":{"interfaces/IHelperRandomStringOptions.html":{}}}],["salt",{"_index":359,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["satutuscode",{"_index":552,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["sdk/client",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["secretkey",{"_index":500,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["select",{"_index":420,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{}}}],["service.interface.ts",{"_index":488,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{}}}],["session",{"_index":421,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["setting",{"_index":859,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["setting_entity_name",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settingentity",{"_index":632,"title":{"classes/SettingEntity.html":{}},"body":{"classes/SettingEntity.html":{}}}],["settingmodule",{"_index":287,"title":{"modules/SettingModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/SettingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingrepositorymodule",{"_index":639,"title":{"modules/SettingRepositoryModule.html":{}},"body":{"modules/SettingModule.html":{},"modules/SettingRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["settingservice",{"_index":640,"title":{"injectables/SettingService.html":{}},"body":{"modules/SettingModule.html":{},"injectables/SettingService.html":{},"overview.html":{}}}],["sha256",{"_index":356,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sha256(str",{"_index":363,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sha256compare",{"_index":357,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sha256compare(hashone",{"_index":365,"title":{},"body":{"injectables/HelperHashService.html":{}}}],["sha256compare(hasone",{"_index":493,"title":{},"body":{"interfaces/IHelperHashService.html":{}}}],["signtoken",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["signtoken(payloadhashed",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["simple",{"_index":559,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["softdeletemany",{"_index":446,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeletemany(find",{"_index":477,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeletemanybyid",{"_index":447,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeletemanybyid(id",{"_index":479,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteone",{"_index":448,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteone(find",{"_index":480,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteonebyid",{"_index":449,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteonebyid(id",{"_index":482,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["sort",{"_index":510,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["special",{"_index":658,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/.../app.constant.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.access",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constant.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enum.constant.ts",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.jwt.decorator.ts",{"_index":876,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.refresh",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../aws.photo.entity.ts",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.decorator.ts",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../database.interface.ts",{"_index":974,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../databast.constant.ts",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../enum.status",{"_index":813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../error.status",{"_index":816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.action",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.entity.ts",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.level",{"_index":820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.method",{"_index":821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pagination.enum.constant.ts",{"_index":823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../pagination.interface.ts",{"_index":975,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../permission.entity.ts",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.constant.ts",{"_index":824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../request.status",{"_index":826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.entity.ts",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../setting.entity.ts",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../setting.enum.constant.ts",{"_index":827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.status",{"_index":829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.module.ts",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/constants/app.constant.ts",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/controllers/app.controllers.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{}}}],["src/common/auth",{"_index":32,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/aws/aws.module.ts",{"_index":203,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/common/aws/interfaces/aws.s3.interface.ts",{"_index":406,"title":{},"body":{"interfaces/IAwsS3PutItemOptions.html":{}}}],["src/common/aws/interfaces/aws.s3.service.interface.ts",{"_index":410,"title":{},"body":{"interfaces/IAwsS3Service.html":{}}}],["src/common/aws/repositories/aws.repository.module.ts",{"_index":218,"title":{},"body":{"modules/AwsRepositoryModule.html":{}}}],["src/common/aws/repositories/entities/aws.photo.entity.ts",{"_index":205,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"miscellaneous/variables.html":{}}}],["src/common/aws/serializations/aws.s3.multipart.serialization.ts",{"_index":220,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["src/common/aws/serializations/aws.s3.serialization.ts",{"_index":246,"title":{},"body":{"classes/AwsS3Serialization.html":{}}}],["src/common/aws/services/aws.s3.service.ts",{"_index":247,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["src/common/common.module.ts",{"_index":288,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/database/abstracts/database.entity.abstract.ts",{"_index":289,"title":{},"body":{"classes/DatabaseEntityAbstract.html":{}}}],["src/common/database/constants/databast.constant.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/common/database/database.module.ts",{"_index":294,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/common/database/decorators/database.decorator.ts",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/database/interfaces/database",{"_index":426,"title":{},"body":{"interfaces/IDatabaseOptionsService.html":{}}}],["src/common/database/interfaces/database.interface.ts",{"_index":411,"title":{},"body":{"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/database/interfaces/database.repository.interface.ts",{"_index":429,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["src/common/database/services/database",{"_index":295,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["src/common/error/constants/error.status",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/helper.module.ts",{"_index":372,"title":{},"body":{"modules/HelperModule.html":{}}}],["src/common/helpers/interfaces/helper.encryption",{"_index":487,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["src/common/helpers/interfaces/helper.hash",{"_index":492,"title":{},"body":{"interfaces/IHelperHashService.html":{}}}],["src/common/helpers/interfaces/helper.interface.ts",{"_index":495,"title":{},"body":{"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{}}}],["src/common/helpers/interfaces/helper.string",{"_index":505,"title":{},"body":{"interfaces/IHelperStringService.html":{}}}],["src/common/helpers/services/helper.encryption.service.ts",{"_index":329,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["src/common/helpers/services/helper.hash.service.ts",{"_index":352,"title":{},"body":{"injectables/HelperHashService.html":{}}}],["src/common/helpers/services/helper.string.service.ts",{"_index":373,"title":{},"body":{"injectables/HelperStringService.html":{}}}],["src/common/logger/constants/logger.action",{"_index":843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/logger/constants/logger.level",{"_index":845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/logger/constants/logger.method",{"_index":848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/logger/logger.module.ts",{"_index":575,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/common/logger/repository/entities/logger.entity.ts",{"_index":543,"title":{},"body":{"classes/LoggerEntity.html":{},"miscellaneous/variables.html":{}}}],["src/common/logger/repository/logger.repository.module.ts",{"_index":576,"title":{},"body":{"modules/LoggerRepositoryModule.html":{}}}],["src/common/pagination/constants/pagination.enum.constant.ts",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/pagination/interfaces/pagination.interface.ts",{"_index":508,"title":{},"body":{"interfaces/IPaginationOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/request/constants/request.status",{"_index":860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/request/request.module.ts",{"_index":602,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/common/settings/interfaces/setting.service.interface.ts",{"_index":518,"title":{},"body":{"interfaces/ISettingService.html":{}}}],["src/common/settings/repository/constants/setting.enum.constant.ts",{"_index":863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/settings/repository/entities/setting.entity.ts",{"_index":633,"title":{},"body":{"classes/SettingEntity.html":{},"miscellaneous/variables.html":{}}}],["src/common/settings/repository/setting.repository.module.ts",{"_index":642,"title":{},"body":{"modules/SettingRepositoryModule.html":{}}}],["src/common/settings/services/setting.service.ts",{"_index":643,"title":{},"body":{"injectables/SettingService.html":{}}}],["src/common/settings/setting.module.ts",{"_index":641,"title":{},"body":{"modules/SettingModule.html":{}}}],["src/health/controllers/health.controller.ts",{"_index":320,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":328,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/health/indicators/health.aws",{"_index":313,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["src/main.ts",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/modules/permissions/constants/permission.enum.constant.ts",{"_index":857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/permissions/permission.module.ts",{"_index":600,"title":{},"body":{"modules/PermissionModule.html":{}}}],["src/modules/permissions/repository/entities/permission.entity.ts",{"_index":577,"title":{},"body":{"classes/PermissionEntity.html":{},"miscellaneous/variables.html":{}}}],["src/modules/permissions/repository/permission.repository.module.ts",{"_index":601,"title":{},"body":{"modules/PermissionRepositoryModule.html":{}}}],["src/modules/role/interfaces/role.interface.ts",{"_index":514,"title":{},"body":{"interfaces/IRoleEntity.html":{}}}],["src/modules/role/repository/entities/role.entity.ts",{"_index":603,"title":{},"body":{"classes/RoleEntity.html":{},"miscellaneous/variables.html":{}}}],["src/modules/role/repository/role.repository.module.ts",{"_index":613,"title":{},"body":{"modules/RoleRepositoryModule.html":{}}}],["src/modules/role/role.module.ts",{"_index":612,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/modules/user/constants/user.status",{"_index":865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/controllers/user.controller.ts",{"_index":645,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/controllers/user.public.controller.ts",{"_index":715,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["src/modules/user/dto/user.create.dto.ts",{"_index":646,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/modules/user/dto/user.login.dto.ts",{"_index":696,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["src/modules/user/dto/user.password",{"_index":712,"title":{},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["src/modules/user/dto/user.register.dto.ts",{"_index":723,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/user/interfaces/user.interface.ts",{"_index":521,"title":{},"body":{"interfaces/IUserEntity.html":{}}}],["src/modules/user/interfaces/user.service.interface.ts",{"_index":524,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/modules/user/repository/entities/user.entity.ts",{"_index":666,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/repository/user.repository.module.ts",{"_index":728,"title":{},"body":{"modules/UserRepositoryModule.html":{}}}],["src/modules/user/services/user.service.ts",{"_index":729,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.module.ts",{"_index":710,"title":{},"body":{"modules/UserModule.html":{}}}],["src/router/router.module.ts",{"_index":614,"title":{},"body":{"modules/RouterModule.html":{}}}],["src/router/routes/routes.admin.module.ts",{"_index":621,"title":{},"body":{"modules/RoutesAdminModule.html":{}}}],["src/router/routes/routes.module.ts",{"_index":625,"title":{},"body":{"modules/RoutesModule.html":{}}}],["src/router/routes/routes.public.module.ts",{"_index":630,"title":{},"body":{"modules/RoutesPublicModule.html":{}}}],["start",{"_index":941,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":944,"title":{},"body":{"index.html":{}}}],["start:prodtests",{"_index":946,"title":{},"body":{"index.html":{}}}],["started",{"_index":894,"title":{"index.html":{}},"body":{}}],["startegy(ongoing",{"_index":916,"title":{},"body":{"index.html":{}}}],["statements",{"_index":977,"title":{},"body":{"unit-test.html":{}}}],["static",{"_index":615,"title":{},"body":{"modules/RouterModule.html":{}}}],["status_code",{"_index":565,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["str",{"_index":364,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["string",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":653,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["subject",{"_index":501,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["super_admin",{"_index":832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":957,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":958,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":919,"title":{},"body":{"index.html":{}}}],["system",{"_index":897,"title":{},"body":{"index.html":{}}}],["t",{"_index":424,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["table",{"_index":995,"title":{},"body":{"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":994,"title":{},"body":{"unit-test.html":{}}}],["tags",{"_index":553,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["test",{"_index":844,"title":{"unit-test.html":{}},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"unit-test.html":{}}}],["test:unit",{"_index":948,"title":{},"body":{"index.html":{}}}],["text",{"_index":389,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["this.configservice.get('app.env",{"_index":305,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('auth.password.salt",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('database.debug",{"_index":304,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.host",{"_index":306,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.name",{"_index":307,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.options",{"_index":308,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.password",{"_index":309,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.port",{"_index":310,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.user",{"_index":311,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('jwt.accesstoken.expirationtime",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt.accesstoken.notbeforeexpirationtime",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt.refreshtoken.expirationtime",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt.refreshtoken.expirationtimerememeber",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt.refreshtoken.notbeforeexpirationtime",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":905,"title":{},"body":{"index.html":{}}}],["token",{"_index":83,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{},"classes/UserLoginDto.html":{}}}],["token.dto.ts",{"_index":193,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{}}}],["token.entity.ts",{"_index":34,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthRefreshTokenEntity.html":{},"miscellaneous/variables.html":{}}}],["token.guard.ts",{"_index":91,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["token.service.interface.ts",{"_index":398,"title":{},"body":{"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["token.service.ts",{"_index":65,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{}}}],["token.strategy.ts",{"_index":99,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["token/auth.jwt.access",{"_index":90,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{}}}],["token/auth.jwt.refresh",{"_index":121,"title":{},"body":{"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["transformer",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":556,"title":{},"body":{"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["true})@isboolean()@isnotempty()@validateif(e",{"_index":702,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["true})@isnotempty",{"_index":661,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@isuuid('4')@isnotempty",{"_index":664,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@maxlength(100)@isemail()@type(undefined)@isnotempty",{"_index":650,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@maxlength(100)@isstring()@type(undefined)@isnotempty",{"_index":703,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["true})@maxlength(14)@minlength(10)@isstring()@type(undefined)@validateif(e",{"_index":662,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@maxlength(40)@minlength(1)@isstring()@type(undefined)@isnotempty",{"_index":651,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["tuser",{"_index":96,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IRoleEntity.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"injectables/SettingService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":971,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":800,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typeormmoduleoptions",{"_index":303,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"interfaces/IDatabaseOptionsService.html":{}}}],["types",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":899,"title":{},"body":{"index.html":{}}}],["ua",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["uint8array",{"_index":280,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["undefined",{"_index":224,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@isstring()@type(undefined)@isnotempty",{"_index":697,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["undefined})@type(undefined",{"_index":243,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{}}}],["under",{"_index":952,"title":{},"body":{"index.html":{}}}],["unique",{"_index":587,"title":{},"body":{"classes/PermissionEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["unique'})@isstring()@type(undefined)@isnotempty",{"_index":665,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["unit",{"_index":947,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["unknown",{"_index":106,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{}}}],["update",{"_index":69,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["update(id",{"_index":84,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["updated_at",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedatecolumn({name",{"_index":58,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/LoggerEntity.html":{},"classes/PermissionEntity.html":{},"classes/RoleEntity.html":{},"classes/SettingEntity.html":{},"classes/UserEntity.html":{}}}],["updatemany",{"_index":450,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updatemany(find",{"_index":483,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateone",{"_index":451,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateone(find",{"_index":484,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateonebyid",{"_index":452,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateonebyid(id",{"_index":485,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateremembermeandlogindate",{"_index":136,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["updateremembermeandlogindate(id",{"_index":138,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["upload",{"_index":244,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["uploaded'})@type(undefined",{"_index":241,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["uploadid",{"_index":233,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["uploadpart",{"_index":260,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["uploadpart(parth",{"_index":279,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["uppercase",{"_index":503,"title":{},"body":{"interfaces/IHelperRandomStringOptions.html":{}}}],["user",{"_index":95,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"classes/AwsPhotoEntity.html":{},"injectables/DatabaseOptionsService.html":{},"interfaces/IUserService.html":{},"classes/LoggerEntity.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user[data",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_account_not_activate_error",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_email_exists_error",{"_index":869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_entity_name",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":568,"title":{},"body":{"classes/LoggerEntity.html":{}}}],["user_not_found_error",{"_index":866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_password_max_attempt_error",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_password_not_correct_error",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_phone_exists_error",{"_index":870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_username_exists_error",{"_index":868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usercontroller",{"_index":644,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{}}}],["usercreatedto",{"_index":532,"title":{"classes/UserCreateDto.html":{}},"body":{"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"injectables/UserService.html":{}}}],["userentity",{"_index":216,"title":{"classes/UserEntity.html":{}},"body":{"classes/AwsPhotoEntity.html":{},"interfaces/IUserService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["userlogindto",{"_index":695,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{},"controllers/UserPublicController.html":{}}}],["usermodule",{"_index":629,"title":{"modules/UserModule.html":{}},"body":{"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":537,"title":{},"body":{"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["userpasswordattemptdto",{"_index":711,"title":{"classes/UserPasswordAttemptDto.html":{}},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["userpubliccontroller",{"_index":631,"title":{"controllers/UserPublicController.html":{}},"body":{"modules/RoutesPublicModule.html":{},"controllers/UserPublicController.html":{}}}],["userregisterdto",{"_index":721,"title":{"classes/UserRegisterDto.html":{}},"body":{"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{}}}],["userrepository",{"_index":727,"title":{},"body":{"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["userrepositorymodule",{"_index":708,"title":{"modules/UserRepositoryModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["userservice",{"_index":709,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["validate",{"_index":100,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["validate(undefined",{"_index":104,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["validatetoken",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validatetoken(token",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validateuser",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validateuser(pwdstring",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validator",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{},"classes/SettingEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":49,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/LoggerEntity.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["variables",{"_index":996,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":967,"title":{},"body":{"properties.html":{}}}],["void",{"_index":595,"title":{},"body":{"classes/PermissionEntity.html":{},"classes/UserEntity.html":{}}}],["warn",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":942,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":422,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":464,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["yargs",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":79,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["z0",{"_index":656,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["za",{"_index":655,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["zoom",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/LoggerModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/RoutesAdminModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/SettingModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/controllers/app.controllers.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nRouterModule\n\nRouterModule\n\nAppModule -->\n\nRouterModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            RouterModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthAccessTokenEntity.html":{"url":"classes/AuthAccessTokenEntity.html","title":"class - AuthAccessTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthAccessTokenEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/repository/entities/auth.access-token.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encryptedToken\n                            \n                            \n                                encryptionIv\n                            \n                            \n                                encryptionKey\n                            \n                            \n                                jwtToken\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encrypted_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionIv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encryption_iv', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'ecryption_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'jwt_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthAccessTokenService.html":{"url":"injectables/AuthAccessTokenService.html","title":"injectable - AuthAccessTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthAccessTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/services/auth.access-token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findOneByToken\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authAccessTokenRepository: AuthAccessTokenRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authAccessTokenRepository\n                                                  \n                                                        \n                                                                        AuthAccessTokenRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: AuthAccessTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: AuthAccessTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntityAbstract.html":{"url":"classes/AuthEntityAbstract.html","title":"class - AuthEntityAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntityAbstract\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/repository/entities/abstract/auth.entity.abstract.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encryptedToken\n                            \n                            \n                                encryptionIv\n                            \n                            \n                                encryptionKey\n                            \n                            \n                                jwtToken\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encrypted_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionIv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encryption_iv', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'ecryption_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'jwt_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtAccessTokenGuard.html":{"url":"injectables/AuthJwtAccessTokenGuard.html","title":"injectable - AuthJwtAccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtAccessTokenGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/access-token/auth.jwt.access-token.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: Error, user: TUser, info: Error)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        TUser\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            TUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtAccessTokenStrategy.html":{"url":"injectables/AuthJwtAccessTokenStrategy.html","title":"injectable - AuthJwtAccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtAccessTokenStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/access-token/auth.jwt.access-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService, authAccessTokenService: AuthAccessTokenService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authAccessTokenService\n                                                  \n                                                        \n                                                                        AuthAccessTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthJwtModule.html":{"url":"modules/AuthJwtModule.html","title":"module - AuthJwtModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthJwtModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthJwtModule\n\n\n\ncluster_AuthJwtModule_providers\n\n\n\ncluster_AuthJwtModule_imports\n\n\n\ncluster_AuthJwtModule_exports\n\n\n\n\nAuthJwtRepositoryModule\n\nAuthJwtRepositoryModule\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\nAuthJwtModule -->\n\nAuthJwtRepositoryModule->AuthJwtModule\n\n\n\n\n\nHelperModule\n\nHelperModule\n\nAuthJwtModule -->\n\nHelperModule->AuthJwtModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthJwtModule->AuthService \n\n\n\n\n\nAuthAccessTokenService\n\nAuthAccessTokenService\n\nAuthJwtModule -->\n\nAuthAccessTokenService->AuthJwtModule\n\n\n\n\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtAccessTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtRefreshTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthRefreshTokenService\n\nAuthRefreshTokenService\n\nAuthJwtModule -->\n\nAuthRefreshTokenService->AuthJwtModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthJwtModule -->\n\nAuthService->AuthJwtModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/auth-jwt/auth.jwt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthAccessTokenService\n                        \n                        \n                            AuthJwtAccessTokenStrategy\n                        \n                        \n                            AuthJwtRefreshTokenStrategy\n                        \n                        \n                            AuthRefreshTokenService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthJwtRepositoryModule\n                        \n                        \n                            HelperModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtRefreshTokenGuard.html":{"url":"injectables/AuthJwtRefreshTokenGuard.html","title":"injectable - AuthJwtRefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtRefreshTokenGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/refresh-token/auth.jwt.refresh-token.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: Error, user: TUser, info: Error)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        TUser\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            TUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtRefreshTokenStrategy.html":{"url":"injectables/AuthJwtRefreshTokenStrategy.html","title":"injectable - AuthJwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/refresh-token/auth.jwt.refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService, authRefreshTokenService: AuthRefreshTokenService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authRefreshTokenService\n                                                  \n                                                        \n                                                                        AuthRefreshTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthJwtRepositoryModule.html":{"url":"modules/AuthJwtRepositoryModule.html","title":"module - AuthJwtRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthJwtRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthJwtRepositoryModule\n\n\n\ncluster_AuthJwtRepositoryModule_exports\n\n\n\ncluster_AuthJwtRepositoryModule_providers\n\n\n\n\nAuthAccessTokenRepository \n\nAuthAccessTokenRepository \n\n\n\nAuthRefreshTokenRepository \n\nAuthRefreshTokenRepository \n\n\n\nAuthJwtRepositoryModule\n\nAuthJwtRepositoryModule\n\nAuthAccessTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthAccessTokenRepository \n\n\n\nAuthRefreshTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthRefreshTokenRepository \n\n\n\n\n\nAuthAccessTokenRepository\n\nAuthAccessTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthAccessTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\nAuthRefreshTokenRepository\n\nAuthRefreshTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthRefreshTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/auth-jwt/repository/auth.jwt.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthAccessTokenRepository\n                        \n                        \n                            AuthRefreshTokenRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthAccessTokenRepository\n                        \n                        \n                            AuthRefreshTokenRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRefreshTokenEntity.html":{"url":"classes/AuthRefreshTokenEntity.html","title":"class - AuthRefreshTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRefreshTokenEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/repository/entities/auth.refresh-token.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beforeExpiration\n                            \n                            \n                                rememberMeExpired\n                            \n                            \n                                encryptedToken\n                            \n                            \n                                encryptionIv\n                            \n                            \n                                encryptionKey\n                            \n                            \n                                jwtToken\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'before_expiration', type: 'int', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMeExpired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'remember_me_expired', type: 'int', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encrypted_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionIv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encryption_iv', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'ecryption_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'jwt_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthRefreshTokenService.html":{"url":"injectables/AuthRefreshTokenService.html","title":"injectable - AuthRefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthRefreshTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/services/auth.refresh-token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneByToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRememberMeAndLoginDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRefreshTokenRepository: AuthRefreshTokenRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRefreshTokenRepository\n                                                  \n                                                        \n                                                                        AuthRefreshTokenRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: AuthRefreshTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, data: AuthRefreshTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRememberMeAndLoginDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRememberMeAndLoginDate(id: string, data: AuthUpdateRefreshTokenDto, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthUpdateRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                accessTokenExpirationTime\n                            \n                            \n                                    Private\n                                    Readonly\n                                accessTokenNotBeforeExpirationTime\n                            \n                            \n                                    Private\n                                    Readonly\n                                passwordSaltLength\n                            \n                            \n                                    Private\n                                    Readonly\n                                refreshTokenExpirationTime\n                            \n                            \n                                    Private\n                                    Readonly\n                                refreshTokenExpirationTimeRememeberMe\n                            \n                            \n                                    Private\n                                    Readonly\n                                refreshTokenNotBeforeExpirationTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPassword\n                            \n                            \n                                createPayloadToken\n                            \n                            \n                                    Async\n                                decodeToken\n                            \n                            \n                                    Async\n                                decryptToken\n                            \n                            \n                                    Async\n                                encryptToken\n                            \n                            \n                                    Async\n                                getAccessTokenExpirationTime\n                            \n                            \n                                    Async\n                                getAccessTokenNotBeforeExpirationTime\n                            \n                            \n                                    Async\n                                getRefreshTokenExpirationTime\n                            \n                            \n                                    Async\n                                getRefreshTokenExpirationTimeRememeberMe\n                            \n                            \n                                    Async\n                                getRefreshTokenNotBeforeExpirationTime\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, helperEncryptionService: HelperEncryptionService, helperHashService: HelperHashService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperEncryptionService\n                                                  \n                                                        \n                                                                        HelperEncryptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperHashService\n                                                  \n                                                        \n                                                                        HelperHashService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPassword(passwordString: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPayloadToken\n                        \n                    \n                \n            \n            \n                \ncreatePayloadToken(data: Record, rememeberMe?: boolean, options?: IAuthPayloadOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rememeberMe\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAuthPayloadOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeToken(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptToken(undefined: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptToken(payload: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessTokenExpirationTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessTokenExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessTokenNotBeforeExpirationTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessTokenNotBeforeExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRefreshTokenExpirationTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRefreshTokenExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRefreshTokenExpirationTimeRememeberMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRefreshTokenExpirationTimeRememeberMe()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRefreshTokenNotBeforeExpirationTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRefreshTokenNotBeforeExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(payloadHashed: string, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payloadHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(token: string, options?: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(pwdString: string, pwdHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pwdString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pwdHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        accessTokenExpirationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('jwt.accessToken.expirationTime')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        accessTokenNotBeforeExpirationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('jwt.accessToken.notBeforeExpirationTime')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        passwordSaltLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('auth.password.salt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        refreshTokenExpirationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('jwt.refreshToken.expirationTime')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        refreshTokenExpirationTimeRememeberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('jwt.refreshToken.expirationTimeRememeber')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        refreshTokenNotBeforeExpirationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('jwt.refreshToken.notBeforeExpirationTime')\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUpdateRefreshTokenDto.html":{"url":"classes/AuthUpdateRefreshTokenDto.html","title":"class - AuthUpdateRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUpdateRefreshTokenDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/dto/auth.refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginDate\n                            \n                            \n                                rememberMe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsModule.html":{"url":"modules/AwsModule.html","title":"module - AwsModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_AwsModule_exports\n\n\n\ncluster_AwsModule_imports\n\n\n\n\nAwsRepositoryModule\n\nAwsRepositoryModule\n\n\n\nAwsModule\n\nAwsModule\n\nAwsModule -->\n\nAwsRepositoryModule->AwsModule\n\n\n\n\n\nAwsS3Service \n\nAwsS3Service \n\nAwsS3Service  -->\n\nAwsModule->AwsS3Service \n\n\n\n\n\nAwsS3Service\n\nAwsS3Service\n\nAwsModule -->\n\nAwsS3Service->AwsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/aws/aws.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AwsS3Service\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AwsS3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsPhotoEntity.html":{"url":"classes/AwsPhotoEntity.html","title":"class - AwsPhotoEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsPhotoEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/repositories/entities/aws.photo.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                completeUrl\n                            \n                            \n                                filename\n                            \n                            \n                                id\n                            \n                            \n                                mime\n                            \n                            \n                                path\n                            \n                            \n                                pathWithFileName\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'base_url', nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'complete_url', nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathWithFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'path_with_file_name', nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsRepositoryModule.html":{"url":"modules/AwsRepositoryModule.html","title":"module - AwsRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/aws/repositories/aws.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsS3MultipartPartsSerialization.html":{"url":"classes/AwsS3MultipartPartsSerialization.html","title":"class - AwsS3MultipartPartsSerialization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsS3MultipartPartsSerialization\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/serializations/aws.s3.multipart.serialization.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ETag\n                            \n                            \n                                PartNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ETag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'ETag from aws after init multipart'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsS3MultipartSerialization.html":{"url":"classes/AwsS3MultipartSerialization.html","title":"class - AwsS3MultipartSerialization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsS3MultipartSerialization\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/serializations/aws.s3.multipart.serialization.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                maxPartNumber\n                            \n                            \n                                    Optional\n                                partNumber\n                            \n                            \n                                    Optional\n                                parts\n                            \n                            \n                                uploadId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        maxPartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 200, description: 'Max part number, or length of the chunk'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        partNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'Last part number uploaded'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AwsS3MultipartPartsSerialization[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({oneOf: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Upload id from aws after init multipart'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsS3Serialization.html":{"url":"classes/AwsS3Serialization.html","title":"class - AwsS3Serialization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsS3Serialization\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/serializations/aws.s3.serialization.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                completeUrl\n                            \n                            \n                                filename\n                            \n                            \n                                mime\n                            \n                            \n                                path\n                            \n                            \n                                pathWithFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathWithFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsS3Service.html":{"url":"injectables/AwsS3Service.html","title":"injectable - AwsS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsS3Service\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/services/aws.s3.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                abortMultipart\n                            \n                            \n                                    Async\n                                checkConnection\n                            \n                            \n                                    Async\n                                completeMultipart\n                            \n                            \n                                    Async\n                                createMultipart\n                            \n                            \n                                    Async\n                                deleteFolder\n                            \n                            \n                                    Async\n                                deleteItemInBucket\n                            \n                            \n                                    Async\n                                deleteItemsInBucket\n                            \n                            \n                                    Async\n                                getItemInBucket\n                            \n                            \n                                    Async\n                                listBucket\n                            \n                            \n                                    Async\n                                listtItemInBucket\n                            \n                            \n                                    Async\n                                uploadPart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        abortMultipart\n                        \n                    \n                \n            \n            \n                \n                    \n                    abortMultipart(path: string, uploadId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkConnection()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        completeMultipart\n                        \n                    \n                \n            \n            \n                \n                    \n                    completeMultipart(path: string, uploadId: string, parts: CompletedPart[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parts\n                                    \n                                            CompletedPart[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createMultipart\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMultipart(filename: string, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFolder(directory: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteItemInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItemInBucket(filename: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteItemsInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItemsInBucket(filenames: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filenames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getItemInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    getItemInBucket(filename: string, content: string | Buffer | Readable | ReadableStream | Blob, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                            string | Buffer | Readable | ReadableStream | Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    listBucket()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listtItemInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    listtItemInBucket(prifix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prifix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadPart\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPart(parth: string, uploadId: string, partNumber: number, content: string | Buffer | Readable | ReadableStream | Blob | Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                            string | Buffer | Readable | ReadableStream | Blob | Uint8Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAuthJwtModule->CommonModule\n\n\n\n\n\nAwsModule\n\nAwsModule\n\nCommonModule -->\n\nAwsModule->CommonModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCommonModule -->\n\nDatabaseModule->CommonModule\n\n\n\n\n\nHelperModule\n\nHelperModule\n\nCommonModule -->\n\nHelperModule->CommonModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommonModule -->\n\nLoggerModule->CommonModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nCommonModule -->\n\nRequestModule->CommonModule\n\n\n\n\n\nSettingModule\n\nSettingModule\n\nCommonModule -->\n\nSettingModule->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthJwtModule\n                        \n                        \n                            AwsModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            HelperModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            RequestModule\n                        \n                        \n                            SettingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseEntityAbstract.html":{"url":"classes/DatabaseEntityAbstract.html","title":"class - DatabaseEntityAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseEntityAbstract\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/abstracts/database.entity.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nDatabaseOptionsService \n\nDatabaseOptionsService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseOptionsService  -->\n\nDatabaseModule->DatabaseOptionsService \n\n\n\n\n\nDatabaseOptionsService\n\nDatabaseOptionsService\n\nDatabaseModule -->\n\nDatabaseOptionsService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseOptionsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseOptionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseOptionsService.html":{"url":"injectables/DatabaseOptionsService.html","title":"injectable - DatabaseOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseOptionsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/services/database-options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debug\n                            \n                            \n                                    Private\n                                    Readonly\n                                env\n                            \n                            \n                                    Private\n                                    Readonly\n                                host\n                            \n                            \n                                    Private\n                                    Readonly\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                password\n                            \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                            \n                                    Private\n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.debug')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('app.env')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.host')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.name')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.options')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.password')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.port')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.user')\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthAwsS3Indicator.html":{"url":"injectables/HealthAwsS3Indicator.html","title":"injectable - HealthAwsS3Indicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthAwsS3Indicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/indicators/health.aws-s3.indicator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isHealthy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(awsS3Service: AwsS3Service)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        awsS3Service\n                                                  \n                                                        \n                                                                        AwsS3Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isHealthy\n                        \n                    \n                \n            \n            \n                \n                    \n                    isHealthy(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/controllers/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAwsHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAwsHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAwsHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HealthCheck()@Get('/aws')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_HealthModule_imports\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nAwsModule->HealthModule\n\n\n\n\n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator  -->\n\nHealthModule->HealthAwsS3Indicator \n\n\n\n\n\nHealthAwsS3Indicator\n\nHealthAwsS3Indicator\n\nHealthModule -->\n\nHealthAwsS3Indicator->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthAwsS3Indicator\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HealthAwsS3Indicator\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperEncryptionService.html":{"url":"injectables/HelperEncryptionService.html","title":"injectable - HelperEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelperEncryptionService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/services/helper.encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aes256Decrypt\n                            \n                            \n                                aes256Encrypt\n                            \n                            \n                                base64Decrypt\n                            \n                            \n                                base64Encrypt\n                            \n                            \n                                base64Validate\n                            \n                            \n                                jwtDecrypt\n                            \n                            \n                                jwtEncrypt\n                            \n                            \n                                jwtVerify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Decrypt\n                        \n                    \n                \n            \n            \n                \naes256Decrypt(encrypted: string, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Record | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Encrypt\n                        \n                    \n                \n            \n            \n                \naes256Encrypt(data: string | Record | Record[], key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Decrypt\n                        \n                    \n                \n            \n            \n                \nbase64Decrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Encrypt\n                        \n                    \n                \n            \n            \n                \nbase64Encrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Validate\n                        \n                    \n                \n            \n            \n                \nbase64Validate(clientBasicToken: string, ours: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientBasicToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ours\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtDecrypt\n                        \n                    \n                \n            \n            \n                \njwtDecrypt(jwtEncrypted: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jwtEncrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtEncrypt\n                        \n                    \n                \n            \n            \n                \njwtEncrypt(payload: Record, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtVerify\n                        \n                    \n                \n            \n            \n                \njwtVerify(token: string, options: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperHashService.html":{"url":"injectables/HelperHashService.html","title":"injectable - HelperHashService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelperHashService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/services/helper.hash.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bcrypt\n                            \n                            \n                                bcryptComapre\n                            \n                            \n                                randomSalt\n                            \n                            \n                                sha256\n                            \n                            \n                                sha256Compare\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n            \n                \nbcrypt(passwordString: string, salt: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bcryptComapre\n                        \n                    \n                \n            \n            \n                \nbcryptComapre(passwordString: string, passwordHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomSalt\n                        \n                    \n                \n            \n            \n                \nrandomSalt(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256\n                        \n                    \n                \n            \n            \n                \nsha256(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Compare\n                        \n                    \n                \n            \n            \n                \nsha256Compare(hashOne: string, hashTwo: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hashOne\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashTwo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelperModule.html":{"url":"modules/HelperModule.html","title":"module - HelperModule","body":"\n                   \n\n\n\n\n    Modules\n    HelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HelperModule\n\n\n\ncluster_HelperModule_providers\n\n\n\ncluster_HelperModule_exports\n\n\n\n\nHelperEncryptionService \n\nHelperEncryptionService \n\n\n\nHelperHashService \n\nHelperHashService \n\n\n\nHelperStringService \n\nHelperStringService \n\n\n\nHelperModule\n\nHelperModule\n\nHelperEncryptionService  -->\n\nHelperModule->HelperEncryptionService \n\n\n\nHelperHashService  -->\n\nHelperModule->HelperHashService \n\n\n\nHelperStringService  -->\n\nHelperModule->HelperStringService \n\n\n\n\n\nHelperEncryptionService\n\nHelperEncryptionService\n\nHelperModule -->\n\nHelperEncryptionService->HelperModule\n\n\n\n\n\nHelperHashService\n\nHelperHashService\n\nHelperModule -->\n\nHelperHashService->HelperModule\n\n\n\n\n\nHelperStringService\n\nHelperStringService\n\nHelperModule -->\n\nHelperStringService->HelperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/helpers/helper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HelperEncryptionService\n                        \n                        \n                            HelperHashService\n                        \n                        \n                            HelperStringService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HelperEncryptionService\n                        \n                        \n                            HelperHashService\n                        \n                        \n                            HelperStringService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperStringService.html":{"url":"injectables/HelperStringService.html","title":"injectable - HelperStringService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelperStringService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/services/helper.string.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                censor\n                            \n                            \n                                checkEmail\n                            \n                            \n                                checkPasswordMedium\n                            \n                            \n                                checkPasswordStrong\n                            \n                            \n                                checkPasswordWeak\n                            \n                            \n                                checkSafeString\n                            \n                            \n                                random\n                            \n                            \n                                randomReference\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        censor\n                        \n                    \n                \n            \n            \n                \ncensor(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordMedium\n                        \n                    \n                \n            \n            \n                \ncheckPasswordMedium(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordStrong\n                        \n                    \n                \n            \n            \n                \ncheckPasswordStrong(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordWeak\n                        \n                    \n                \n            \n            \n                \ncheckPasswordWeak(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkSafeString\n                        \n                    \n                \n            \n            \n                \ncheckSafeString(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        random\n                        \n                    \n                \n            \n            \n                \nrandom(length: number, options?: IHelperRandomStringOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperRandomStringOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomReference\n                        \n                    \n                \n            \n            \n                \nrandomReference(length: number, prefix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthAccessTokenService.html":{"url":"interfaces/IAuthAccessTokenService.html","title":"interface - IAuthAccessTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthAccessTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.access-token.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findOneByToken\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: AuthAccessTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \nfindOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: AuthAccessTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthPayloadOptions.html":{"url":"interfaces/IAuthPayloadOptions.html","title":"interface - IAuthPayloadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthPayloadOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthRefreshTokenService.html":{"url":"interfaces/IAuthRefreshTokenService.html","title":"interface - IAuthRefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthRefreshTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.refresh-token.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findOneByToken\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                                \n                                    \n                                        updateRememberMeAndLoginDate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: AuthRefreshTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \nfindOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: AuthRefreshTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRememberMeAndLoginDate\n                        \n                    \n                \n            \n            \n                \nupdateRememberMeAndLoginDate(id: string, data: AuthUpdateRefreshTokenDto, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthUpdateRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthService.html":{"url":"interfaces/IAuthService.html","title":"interface - IAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createPassword\n                                    \n                                \n                                \n                                    \n                                        createPayloadToken\n                                    \n                                \n                                \n                                    \n                                        decodeToken\n                                    \n                                \n                                \n                                    \n                                        decryptToken\n                                    \n                                \n                                \n                                    \n                                        encryptToken\n                                    \n                                \n                                \n                                    \n                                        getAccessTokenExpirationTime\n                                    \n                                \n                                \n                                    \n                                        getAccessTokenNotBeforeExpirationTime\n                                    \n                                \n                                \n                                    \n                                        getRefreshTokenExpirationTime\n                                    \n                                \n                                \n                                    \n                                        getRefreshTokenExpirationTimeRememeberMe\n                                    \n                                \n                                \n                                    \n                                        getRefreshTokenNotBeforeExpirationTime\n                                    \n                                \n                                \n                                    \n                                        signToken\n                                    \n                                \n                                \n                                    \n                                        validateToken\n                                    \n                                \n                                \n                                    \n                                        validateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPassword\n                        \n                    \n                \n            \n            \n                \ncreatePassword(password: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPayloadToken\n                        \n                    \n                \n            \n            \n                \ncreatePayloadToken(data: Record | string, rememeberMe?: boolean, options?: IAuthPayloadOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rememeberMe\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAuthPayloadOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeToken\n                        \n                    \n                \n            \n            \n                \ndecodeToken(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decryptToken\n                        \n                    \n                \n            \n            \n                \ndecryptToken(payload: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptToken\n                        \n                    \n                \n            \n            \n                \nencryptToken(payload: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessTokenExpirationTime\n                        \n                    \n                \n            \n            \n                \ngetAccessTokenExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessTokenNotBeforeExpirationTime\n                        \n                    \n                \n            \n            \n                \ngetAccessTokenNotBeforeExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRefreshTokenExpirationTime\n                        \n                    \n                \n            \n            \n                \ngetRefreshTokenExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRefreshTokenExpirationTimeRememeberMe\n                        \n                    \n                \n            \n            \n                \ngetRefreshTokenExpirationTimeRememeberMe()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRefreshTokenNotBeforeExpirationTime\n                        \n                    \n                \n            \n            \n                \ngetRefreshTokenNotBeforeExpirationTime()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signToken\n                        \n                    \n                \n            \n            \n                \nsignToken(payloadHashed: string, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payloadHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateToken\n                        \n                    \n                \n            \n            \n                \nvalidateToken(token: string, options?: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateUser\n                        \n                    \n                \n            \n            \n                \nvalidateUser(pwdString: string, pwdHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pwdString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pwdHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAwsS3PutItemOptions.html":{"url":"interfaces/IAwsS3PutItemOptions.html","title":"interface - IAwsS3PutItemOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAwsS3PutItemOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/interfaces/aws.s3.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acl\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acl:     ObjectCannedACL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectCannedACL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAwsS3Service.html":{"url":"interfaces/IAwsS3Service.html","title":"interface - IAwsS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAwsS3Service\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/interfaces/aws.s3.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        abortMultipart\n                                    \n                                \n                                \n                                    \n                                        checkConnection\n                                    \n                                \n                                \n                                    \n                                        completeMultipart\n                                    \n                                \n                                \n                                    \n                                        createMultipart\n                                    \n                                \n                                \n                                    \n                                        deleteFolder\n                                    \n                                \n                                \n                                    \n                                        deleteItemInBucket\n                                    \n                                \n                                \n                                    \n                                        deleteItemsInBucket\n                                    \n                                \n                                \n                                    \n                                        getItemInBucket\n                                    \n                                \n                                \n                                    \n                                        listBucket\n                                    \n                                \n                                \n                                    \n                                        listtItemInBucket\n                                    \n                                \n                                \n                                    \n                                        uploadPart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abortMultipart\n                        \n                    \n                \n            \n            \n                \nabortMultipart(path: string, uploadId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkConnection\n                        \n                    \n                \n            \n            \n                \ncheckConnection()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeMultipart\n                        \n                    \n                \n            \n            \n                \ncompleteMultipart(path: string, uploadId: string, parts: CompletedPart[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parts\n                                    \n                                            CompletedPart[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMultipart\n                        \n                    \n                \n            \n            \n                \ncreateMultipart(filename: string, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFolder\n                        \n                    \n                \n            \n            \n                \ndeleteFolder(directory: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItemInBucket\n                        \n                    \n                \n            \n            \n                \ndeleteItemInBucket(filename: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItemsInBucket\n                        \n                    \n                \n            \n            \n                \ndeleteItemsInBucket(filenames: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filenames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemInBucket\n                        \n                    \n                \n            \n            \n                \ngetItemInBucket(filename: string, content: Buffer | string | Readable | ReadableStream | Blob, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                            Buffer | string | Readable | ReadableStream | Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listBucket\n                        \n                    \n                \n            \n            \n                \nlistBucket()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listtItemInBucket\n                        \n                    \n                \n            \n            \n                \nlisttItemInBucket(prifix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prifix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadPart\n                        \n                    \n                \n            \n            \n                \nuploadPart(parth: string, uploadId: string, partNumber: number, content:  | string | Uint8Array | Buffer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                             | string | Uint8Array | Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseCreateOptions.html":{"url":"interfaces/IDatabaseCreateOptions.html","title":"interface - IDatabaseCreateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseCreateOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseExistOptions.html":{"url":"interfaces/IDatabaseExistOptions.html","title":"interface - IDatabaseExistOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseExistOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IDatabaseOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            excludeIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        excludeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        excludeIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseFindAllOptions.html":{"url":"interfaces/IDatabaseFindAllOptions.html","title":"interface - IDatabaseFindAllOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseFindAllOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IPaginationOptions\n            \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseFindOneOptions.html":{"url":"interfaces/IDatabaseFindOneOptions.html","title":"interface - IDatabaseFindOneOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseFindOneOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            join\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            select\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            session\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withDeleted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        join\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        join:     boolean | FindOptionsRelations\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | FindOptionsRelations\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        select:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withDeleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withDeleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseOptionsService.html":{"url":"interfaces/IDatabaseOptionsService.html","title":"interface - IDatabaseOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseOptionsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database-options.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createTypeOrmOptions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseRepository.html":{"url":"interfaces/IDatabaseRepository.html","title":"interface - IDatabaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        createMany\n                                    \n                                \n                                \n                                    \n                                        deleteMany\n                                    \n                                \n                                \n                                    \n                                        deleteManyById\n                                    \n                                \n                                \n                                    \n                                        deleteOne\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        findOneById\n                                    \n                                \n                                \n                                    \n                                        getTotal\n                                    \n                                \n                                \n                                    \n                                        model\n                                    \n                                \n                                \n                                    \n                                        raw\n                                    \n                                \n                                \n                                    \n                                        restoreMany\n                                    \n                                \n                                \n                                    \n                                        restoreManyById\n                                    \n                                \n                                \n                                    \n                                        restoreOne\n                                    \n                                \n                                \n                                    \n                                        restoreOneById\n                                    \n                                \n                                \n                                    \n                                        softDeleteMany\n                                    \n                                \n                                \n                                    \n                                        softDeleteManyById\n                                    \n                                \n                                \n                                    \n                                        softDeleteOne\n                                    \n                                \n                                \n                                    \n                                        softDeleteOneById\n                                    \n                                \n                                \n                                    \n                                        updateMany\n                                    \n                                \n                                \n                                    \n                                        updateOne\n                                    \n                                \n                                \n                                    \n                                        updateOneById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: N, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMany\n                        \n                    \n                \n            \n            \n                \ncreateMany(data: N[], options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            N[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(find: Record | Record[], options?: IDatabaseManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteManyById\n                        \n                    \n                \n            \n            \n                \ndeleteManyById(id: string[], options?: IDatabaseManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \ndeleteOne(find: Record | Record[], options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(id: string, options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(find: Record | Record[], options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(find?: Record | Record[], options?: IDatabaseFindAllOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Y\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindAllOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(find?: Record | Record[], options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Y\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Y\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotal\n                        \n                    \n                \n            \n            \n                \ngetTotal(find?: Record | Record[], options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n            \n                \nmodel()\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        raw\n                        \n                    \n                \n            \n            \n                \nraw(rawOperation: R)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawOperation\n                                    \n                                            R\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreMany\n                        \n                    \n                \n            \n            \n                \nrestoreMany(find: Record | Record[], options?: IDatabaseRestoreManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreManyById\n                        \n                    \n                \n            \n            \n                \nrestoreManyById(id: string[], options?: IDatabaseRestoreManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreOne\n                        \n                    \n                \n            \n            \n                \nrestoreOne(find: Record | Record[], options?: IDatabaseRestoreOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreOneById\n                        \n                    \n                \n            \n            \n                \nrestoreOneById(id: string, options?: IDatabaseRestoreOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteMany\n                        \n                    \n                \n            \n            \n                \nsoftDeleteMany(find: Record | Record[], options?: IDatabaseSoftDeleteManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteManyById\n                        \n                    \n                \n            \n            \n                \nsoftDeleteManyById(id: string[], options?: IDatabaseSoftDeleteManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteOne\n                        \n                    \n                \n            \n            \n                \nsoftDeleteOne(find: Record | Record[], options?: IDatabaseSoftDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteOneById\n                        \n                    \n                \n            \n            \n                \nsoftDeleteOneById(id: string, options?: IDatabaseSoftDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMany\n                        \n                    \n                \n            \n            \n                \nupdateMany(find: Record | Record[], data: N, options?: IDatabaseManyOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOne\n                        \n                    \n                \n            \n            \n                \nupdateOne(find: Record | Record, data: N, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(id: string, data: N, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperEncryptionService.html":{"url":"interfaces/IHelperEncryptionService.html","title":"interface - IHelperEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperEncryptionService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.encryption-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        aes256Decrypt\n                                    \n                                \n                                \n                                    \n                                        aes256Encrypt\n                                    \n                                \n                                \n                                    \n                                        base64Decrypt\n                                    \n                                \n                                \n                                    \n                                        base64Encrypt\n                                    \n                                \n                                \n                                    \n                                        base64Validate\n                                    \n                                \n                                \n                                    \n                                        jwtDecrypt\n                                    \n                                \n                                \n                                    \n                                        jwtEncrypt\n                                    \n                                \n                                \n                                    \n                                        jwtVerify\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Decrypt\n                        \n                    \n                \n            \n            \n                \naes256Decrypt(encrepted: string, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encrepted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Record | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Encrypt\n                        \n                    \n                \n            \n            \n                \naes256Encrypt(data: string | Record | Record[], key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Decrypt\n                        \n                    \n                \n            \n            \n                \nbase64Decrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Encrypt\n                        \n                    \n                \n            \n            \n                \nbase64Encrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Validate\n                        \n                    \n                \n            \n            \n                \nbase64Validate(clientBasicToken: string, ours: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientBasicToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ours\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtDecrypt\n                        \n                    \n                \n            \n            \n                \njwtDecrypt(jwtEncrypted: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jwtEncrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtEncrypt\n                        \n                    \n                \n            \n            \n                \njwtEncrypt(payload: Record, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtVerify\n                        \n                    \n                \n            \n            \n                \njwtVerify(token: string, options: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperHashService.html":{"url":"interfaces/IHelperHashService.html","title":"interface - IHelperHashService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperHashService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.hash-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        bcrypt\n                                    \n                                \n                                \n                                    \n                                        bcryptComapre\n                                    \n                                \n                                \n                                    \n                                        randomSalt\n                                    \n                                \n                                \n                                    \n                                        sha256\n                                    \n                                \n                                \n                                    \n                                        sha256Compare\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n            \n                \nbcrypt(passwordString: string, salt: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bcryptComapre\n                        \n                    \n                \n            \n            \n                \nbcryptComapre(passwordString: string, passwordHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomSalt\n                        \n                    \n                \n            \n            \n                \nrandomSalt(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256\n                        \n                    \n                \n            \n            \n                \nsha256(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Compare\n                        \n                    \n                \n            \n            \n                \nsha256Compare(hasOne: string, hashTwo: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hasOne\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashTwo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperJwtOptions.html":{"url":"interfaces/IHelperJwtOptions.html","title":"interface - IHelperJwtOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperJwtOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IHelperJwtVerifyOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expiredIn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notBefore\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiredIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiredIn:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notBefore\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notBefore:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperJwtVerifyOptions.html":{"url":"interfaces/IHelperJwtVerifyOptions.html","title":"interface - IHelperJwtVerifyOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperJwtVerifyOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audience\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            secretKey\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperRandomStringOptions.html":{"url":"interfaces/IHelperRandomStringOptions.html","title":"interface - IHelperRandomStringOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperRandomStringOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            upperCase\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upperCase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upperCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperStringService.html":{"url":"interfaces/IHelperStringService.html","title":"interface - IHelperStringService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperStringService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.string-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        censor\n                                    \n                                \n                                \n                                    \n                                        checkEmail\n                                    \n                                \n                                \n                                    \n                                        checkPasswordMedium\n                                    \n                                \n                                \n                                    \n                                        checkPasswordStrong\n                                    \n                                \n                                \n                                    \n                                        checkPasswordWeak\n                                    \n                                \n                                \n                                    \n                                        checkSafeString\n                                    \n                                \n                                \n                                    \n                                        random\n                                    \n                                \n                                \n                                    \n                                        randomReference\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        censor\n                        \n                    \n                \n            \n            \n                \ncensor(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordMedium\n                        \n                    \n                \n            \n            \n                \ncheckPasswordMedium(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordStrong\n                        \n                    \n                \n            \n            \n                \ncheckPasswordStrong(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordWeak\n                        \n                    \n                \n            \n            \n                \ncheckPasswordWeak(password: string, lenght?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lenght\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkSafeString\n                        \n                    \n                \n            \n            \n                \ncheckSafeString(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        random\n                        \n                    \n                \n            \n            \n                \nrandom(lenght: number, options?: IHelperRandomStringOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lenght\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperRandomStringOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomReference\n                        \n                    \n                \n            \n            \n                \nrandomReference(length: number, prefix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaginationOptions.html":{"url":"interfaces/IPaginationOptions.html","title":"interface - IPaginationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPaginationOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/pagination.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            paging\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paging:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         IPaginationSort\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPaginationSort\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleEntity.html":{"url":"interfaces/IRoleEntity.html","title":"interface - IRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/interfaces/role.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            permissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         PermissionEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PermissionEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettingService.html":{"url":"interfaces/ISettingService.html","title":"interface - ISettingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettingService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/settings/interfaces/setting.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getMaxPasswordAttempt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxPasswordAttempt\n                        \n                    \n                \n            \n            \n                \ngetMaxPasswordAttempt()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserEntity.html":{"url":"interfaces/IUserEntity.html","title":"interface - IUserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/interfaces/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         IRoleEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRoleEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserService.html":{"url":"interfaces/IUserService.html","title":"interface - IUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/interfaces/user.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        existEmail\n                                    \n                                \n                                \n                                    \n                                        existPhoneNumber\n                                    \n                                \n                                \n                                    \n                                        existUsername\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        findOneByEmail\n                                    \n                                \n                                \n                                    \n                                        findOneByUsername\n                                    \n                                \n                                \n                                    \n                                        increasePasswordAttempt\n                                    \n                                \n                                \n                                    \n                                        resetPasswordAttempt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: UserCreateDto, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(id: string, options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existEmail\n                        \n                    \n                \n            \n            \n                \nexistEmail(email: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existPhoneNumber\n                        \n                    \n                \n            \n            \n                \nexistPhoneNumber(phoneNumber: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existUsername\n                        \n                    \n                \n            \n            \n                \nexistUsername(username: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(find?: Record, options?: IDatabaseFindAllOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindAllOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(find: Record, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increasePasswordAttempt\n                        \n                    \n                \n            \n            \n                \nincreasePasswordAttempt(user: UserEntity, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordAttempt\n                        \n                    \n                \n            \n            \n                \nresetPasswordAttempt(id: string, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerEntity.html":{"url":"classes/LoggerEntity.html","title":"class - LoggerEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/logger/repository/entities/logger.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accessFor\n                            \n                            \n                                action\n                            \n                            \n                                anonymous\n                            \n                            \n                                    Optional\n                                bodies\n                            \n                            \n                                description\n                            \n                            \n                                level\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                params\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                requestId\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                satutusCode\n                            \n                            \n                                tags\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accessFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ENUM_AUTH_ACCESS_FOR\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_for', nullable: true, enum: ENUM_AUTH_ACCESS_FOR, type: 'enum'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'action', nullable: false, type: 'enum', enum: ENUM_LOGGER_ACTION})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        anonymous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'anonymous', nullable: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bodies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'bodies', nullable: true, type: 'simple-json'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'level', nullable: false, type: 'enum', enum: ENUM_LOGGER_LEVEL})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'method', nullable: false, type: 'enum', enum: ENUM_LOGGER_METHOD})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'params', nullable: true, type: 'simple-json'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'path', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        requestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'request_id', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'role', type: 'varchar', length: 100, nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        satutusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'status_code', type: 'int', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tags', nullable: true, type: 'simple-array'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_USER_LOGGER'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_imports\n\n\n\n\nLoggerRepositoryModule\n\nLoggerRepositoryModule\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerRepositoryModule->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LoggerRepositoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerRepositoryModule.html":{"url":"modules/LoggerRepositoryModule.html","title":"module - LoggerRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/logger/repository/logger.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionEntity.html":{"url":"classes/PermissionEntity.html","title":"class - PermissionEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/permissions/repository/entities/permission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                group\n                            \n                            \n                                isActive\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('description')@Column({name: 'description', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ENUM_PERMISSION_GROUP\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('group')@Column({name: 'group', type: 'enum', nullable: false, enum: ENUM_PERMISSION_GROUP})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('is_active')@Column({name: 'is_active', nullable: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('name')@Column({name: 'name', unique: true, type: String, nullable: false, length: 40})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, role => role.permissions)@JoinColumn({name: 'role_name', referencedColumnName: 'name', foreignKeyConstraintName: 'FK_ROLE_PERMISSION'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeSave\n                        \n                    \n                \n            \n            \n                \nbeforeSave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()@BeforeUpdate()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionModule.html":{"url":"modules/PermissionModule.html","title":"module - PermissionModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_imports\n\n\n\n\nPermissionRepositoryModule\n\nPermissionRepositoryModule\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionRepositoryModule->PermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/permissions/permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PermissionRepositoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionRepositoryModule.html":{"url":"modules/PermissionRepositoryModule.html","title":"module - PermissionRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/permissions/repository/permission.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/request/request.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleEntity.html":{"url":"classes/RoleEntity.html","title":"class - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/repository/entities/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessFor\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ENUM_AUTH_ACCESS_FOR\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('access_for')@Column({name: 'access_for', type: 'enum', nullable: false, enum: ENUM_AUTH_ACCESS_FOR})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, type: 'varchar', length: 100})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, permissions => permissions.name)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\n\nRoleRepositoryModule\n\nRoleRepositoryModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleRepositoryModule->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RoleRepositoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleRepositoryModule.html":{"url":"modules/RoleRepositoryModule.html","title":"module - RoleRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/repository/role.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RouterModule.html":{"url":"modules/RouterModule.html","title":"module - RouterModule","body":"\n                   \n\n\n\n\n    Modules\n    RouterModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/router.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesAdminModule.html":{"url":"modules/RoutesAdminModule.html","title":"module - RoutesAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesAdminModule\n\n\n\ncluster_RoutesAdminModule_imports\n\n\n\n\nPermissionModule\n\nPermissionModule\n\n\n\nRoutesAdminModule\n\nRoutesAdminModule\n\nRoutesAdminModule -->\n\nPermissionModule->RoutesAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/routes/routes.admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PermissionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesModule.html":{"url":"modules/RoutesModule.html","title":"module - RoutesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_imports\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesModule -->\n\nAwsModule->RoutesModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nRoutesModule -->\n\nHealthModule->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/routes/routes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                        \n                            HealthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesPublicModule.html":{"url":"modules/RoutesPublicModule.html","title":"module - RoutesPublicModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesPublicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesPublicModule\n\n\n\ncluster_RoutesPublicModule_imports\n\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\n\n\nRoutesPublicModule\n\nRoutesPublicModule\n\nRoutesPublicModule -->\n\nAuthJwtModule->RoutesPublicModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nRoutesPublicModule -->\n\nRoleModule->RoutesPublicModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nRoutesPublicModule -->\n\nUserModule->RoutesPublicModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/routes/routes.public.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserPublicController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthJwtModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingEntity.html":{"url":"classes/SettingEntity.html","title":"class - SettingEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/settings/repository/entities/setting.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                value\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ENUM_SETTING_DATA_TYPE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'type', nullable: true, type: 'enum', enum: ENUM_SETTING_DATA_TYPE})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'value', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingModule.html":{"url":"modules/SettingModule.html","title":"module - SettingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingModule\n\n\n\ncluster_SettingModule_imports\n\n\n\ncluster_SettingModule_exports\n\n\n\ncluster_SettingModule_providers\n\n\n\n\nSettingRepositoryModule\n\nSettingRepositoryModule\n\n\n\nSettingModule\n\nSettingModule\n\nSettingModule -->\n\nSettingRepositoryModule->SettingModule\n\n\n\n\n\nSettingService \n\nSettingService \n\nSettingService  -->\n\nSettingModule->SettingService \n\n\n\n\n\nSettingService\n\nSettingService\n\nSettingModule -->\n\nSettingService->SettingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/settings/setting.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingRepositoryModule.html":{"url":"modules/SettingRepositoryModule.html","title":"module - SettingRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/settings/repository/setting.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingService.html":{"url":"injectables/SettingService.html","title":"injectable - SettingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/settings/services/setting.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMaxPasswordAttempt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMaxPasswordAttempt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxPasswordAttempt()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/controllers/user.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCreateDto.html":{"url":"classes/UserCreateDto.html","title":"class - UserCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCreateDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstname\n                            \n                            \n                                    Readonly\n                                lastname\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(100)@IsEmail()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(40)@MinLength(1)@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(40)@MinLength(1)@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'password should be  strong and contains [a-zA-Z0-9] and special character', example: undefined, required: true})@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(14)@MinLength(10)@IsString()@Type(undefined)@ValidateIf(e => )@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@IsUUID('4')@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true, description: 'username should be unique'})@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/repository/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isActive\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                passwordAttempt\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                photo\n                            \n                            \n                                refreshToken\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthAccessTokenEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('access_token')@OneToOne(undefined)@JoinColumn({name: 'access_token_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_AUTH_JWT_ACCESS_TOKEN'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('email')@Column({type: 'varchar', nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('is_active')@Column({type: 'boolean', name: 'is_active', nullable: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('lastname')@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('password')@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('password_attempt')@Column({type: 'int', name: 'password_attempt', nullable: false, default: 0})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('phone_number')@Column({name: 'phone_number', type: 'varchar', length: 14, nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AwsPhotoEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('photo')@OneToOne(undefined)@JoinColumn({name: 'photo_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_AWS_PHOTO_USER'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthRefreshTokenEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('refresh_token')@OneToOne(undefined)@JoinColumn({name: 'refresh_token_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_AUTH_JWT_REFRESH_TOKEN'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('role')@ManyToOne(undefined)@JoinColumn({name: 'role_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_ROLE_USER'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('username')@Column({type: 'varchar', nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeSave\n                        \n                    \n                \n            \n            \n                \nbeforeSave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()@BeforeUpdate()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                rememberMe\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'string password', example: undefined})@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'if true refresh token will expire after 30d else 7d', example: false, required: true})@IsBoolean()@IsNotEmpty()@ValidateIf(e => )@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(100)@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserRepositoryModule\n\nUserRepositoryModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserRepositoryModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPasswordAttemptDto.html":{"url":"classes/UserPasswordAttemptDto.html","title":"class - UserPasswordAttemptDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPasswordAttemptDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.password-attempt.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordAttempt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserPublicController.html":{"url":"controllers/UserPublicController.html","title":"controller - UserPublicController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserPublicController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/controllers/user.public.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userLoginDto: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userRegisterDto: UserRegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRegisterDto\n                                    \n                                                UserRegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRegisterDto.html":{"url":"classes/UserRegisterDto.html","title":"class - UserRegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRegisterDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.register.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRepositoryModule.html":{"url":"modules/UserRepositoryModule.html","title":"module - UserRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserRepositoryModule\n\n\n\ncluster_UserRepositoryModule_providers\n\n\n\ncluster_UserRepositoryModule_exports\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nUserRepositoryModule\n\nUserRepositoryModule\n\nUserRepository  -->\n\nUserRepositoryModule->UserRepository \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserRepositoryModule -->\n\nUserRepository->UserRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/repository/user.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                existEmail\n                            \n                            \n                                    Async\n                                existPhoneNumber\n                            \n                            \n                                    Async\n                                existUsername\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                            \n                                    Async\n                                increasePasswordAttempt\n                            \n                            \n                                resetPasswordAttempt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: UserCreateDto, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string, options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        existEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    existEmail(email: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        existPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    existPhoneNumber(phoneNumber: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        existUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    existUsername(username: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(find?: Record, options?: IDatabaseFindAllOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindAllOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(find: Record, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUsername(username: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        increasePasswordAttempt\n                        \n                    \n                \n            \n            \n                \n                    \n                    increasePasswordAttempt(user: UserEntity | IUserEntity, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity | IUserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordAttempt\n                        \n                    \n                \n            \n            \n                \nresetPasswordAttempt(id: string, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.252.0\n        \n            @faker-js/faker : ^7.6.0\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/bullmq : ^1.0.0\n        \n            @nestjs/common : ^9.2.1\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.2.1\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.2.1\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/terminus : ^9.1.4\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @ngrx/store : ^15.1.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            crypto-js : ^4.1.1\n        \n            joi : ^17.7.0\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.4\n        \n            ms : ^2.1.3\n        \n            mysql2 : ^2.3.3\n        \n            nest-commander : ^3.3.0\n        \n            nestjs-command : ^3.1.2\n        \n            passport : ^0.6.0\n        \n            passport-headerapikey : ^1.2.2\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.8.0\n        \n            typeorm : ^0.3.11\n        \n            ua-parser-js : ^1.0.32\n        \n            yargs : ^17.6.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENUM_AUTH_ACCESS_FOR_DEFAULT   (src/.../auth.enum.constant.ts)\n                        \n                        \n                            ENUM_AUTH_ACCESS_FOR_SUPER_ADMIN   (src/.../auth.enum.constant.ts)\n                        \n                        \n                            ENUM_AUTH_STATUS_CODE_ERROR   (src/.../enum.status-code.constant.ts)\n                        \n                        \n                            ENUM_ERROR_STATUS_CODE_ERROR   (src/.../error.status-code.enum.constant.ts)\n                        \n                        \n                            ENUM_LOGGER_ACTION   (src/.../logger.action-enum.constant.ts)\n                        \n                        \n                            ENUM_LOGGER_LEVEL   (src/.../logger.level-enum.constant.ts)\n                        \n                        \n                            ENUM_LOGGER_METHOD   (src/.../logger.method-enum.constant.ts)\n                        \n                        \n                            ENUM_PAGINATION_SORT_TYPE   (src/.../pagination.enum.constant.ts)\n                        \n                        \n                            ENUM_PERMISSION_GROUP   (src/.../permission.enum.constant.ts)\n                        \n                        \n                            ENUM_REQUEST_STATUS_CODE_ERROR   (src/.../request.status-code.enum.constant.ts)\n                        \n                        \n                            ENUM_SETTING_DATA_TYPE   (src/.../setting.enum.constant.ts)\n                        \n                        \n                            ENUM_USER_STATUS_CODE_ERROR   (src/.../user.status-code.enum.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/auth-jwt/constants/auth.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_AUTH_ACCESS_FOR_DEFAULT\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ENUM_AUTH_ACCESS_FOR_SUPER_ADMIN\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n            \n        \n\n    src/common/auth-jwt/constants/enum.status-code.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_AUTH_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 AUTH_JWT_ACCESS_TOKEN_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6100\n                            \n                        \n                        \n                            \n                                 AUTH_JWT_REFRESH_TOKEN_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6101\n                            \n                        \n            \n        \n\n    src/common/error/constants/error.status-code.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_ERROR_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 ERROR_UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : 5100\n                            \n                        \n                        \n                            \n                                 ERROR_SERVICE_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                 ERROR_REQUEST_TIMEOUT\n                            \n                        \n            \n        \n\n    src/common/logger/constants/logger.action-enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_LOGGER_ACTION\n                    \n                \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : LOGIN\n                            \n                        \n                        \n                            \n                                 TEST\n                            \n                        \n                        \n                            \n                                Value : TEST\n                            \n                        \n            \n        \n\n    src/common/logger/constants/logger.level-enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_LOGGER_LEVEL\n                    \n                \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                Value : FATAL\n                            \n                        \n            \n        \n\n    src/common/logger/constants/logger.method-enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_LOGGER_METHOD\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 PATCH\n                            \n                        \n                        \n                            \n                                Value : PATCH\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 HEAD\n                            \n                        \n                        \n                            \n                                Value : HEAD\n                            \n                        \n                        \n                            \n                                 OPTIONS\n                            \n                        \n                        \n                            \n                                Value : OPTIONS\n                            \n                        \n            \n        \n\n    src/common/pagination/constants/pagination.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_PAGINATION_SORT_TYPE\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n            \n        \n\n    src/modules/permissions/constants/permission.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_PERMISSION_GROUP\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 SETTING\n                            \n                        \n                        \n                            \n                                Value : SETTING\n                            \n                        \n            \n        \n\n    src/common/request/constants/request.status-code.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_REQUEST_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 REQUEST_VALIDATION_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6500\n                            \n                        \n            \n        \n\n    src/common/settings/repository/constants/setting.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_SETTING_DATA_TYPE\n                    \n                \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                Value : BOOLEAN\n                            \n                        \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : STRING\n                            \n                        \n                        \n                            \n                                 ARRAY_OF_STRING\n                            \n                        \n                        \n                            \n                                Value : ARRAY_OF_STRING\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : NUMBER\n                            \n                        \n            \n        \n\n    src/modules/user/constants/user.status-code.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_USER_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 USER_NOT_FOUND_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6404\n                            \n                        \n                        \n                            \n                                 USER_USERNAME_EXISTS_ERROR\n                            \n                        \n                        \n                            \n                                 USER_EMAIL_EXISTS_ERROR\n                            \n                        \n                        \n                            \n                                 USER_PHONE_EXISTS_ERROR\n                            \n                        \n                        \n                            \n                                 USER_ACCOUNT_NOT_ACTIVATE_ERROR\n                            \n                        \n                        \n                            \n                                 USER_PASSWORD_MAX_ATTEMPT_ERROR\n                            \n                        \n                        \n                            \n                                 USER_PASSWORD_NOT_CORRECT_ERROR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthAccessTokenProtected   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            AuthRefreshTokenProtected   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            DatabaseEntity   (src/.../database.decorator.ts)\n                        \n                        \n                            DatabaseModel   (src/.../database.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/auth-jwt/decorators/auth.jwt.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthAccessTokenProtected\n                        \n                    \n                \n            \n            \n                \nAuthAccessTokenProtected()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     MethodDecorator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthRefreshTokenProtected\n                        \n                    \n                \n            \n            \n                \nAuthRefreshTokenProtected()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     MethodDecorator\n\n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/database/decorators/database.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DatabaseEntity\n                        \n                    \n                \n            \n            \n                \nDatabaseEntity(options?: EntityOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            EntityOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DatabaseModel\n                        \n                    \n                \n            \n            \n                \nDatabaseModel(entity: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParameterDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAuthentication\nA boilerplate authentication system with Nest.\nFeatures\n\nTypescript.\nNestJs.\nRelational database.\nClean code.\nDocumentation.\nRxJs.\n\nTodo\n #release1:\n\n Centralized configuration.\n TypeOrm integration (MySQL).\n Abstract repository.\n Entity Relationship Diagram.\n Jsonwebtoken startegy(ongoing...).\n rate-limit.\n Swagger.\n Dockerfile.\n Docker-compose.\n link to the front-end app.\n rename repo to: authentication-and-authorization.\n OAuth2 (Google).\n Jenkinsfile.\n\nOverview\n\nHow the jwt are handled in this app:\n\n \n\nERD-jwt:\n\n \nInstallation\n$ npm iRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTests\n# unit-test\n$ npm run test:unit\n\n# integration-test\n\n# e2e-test\nLicense\nThis project is under the MIT licensed.\nContact\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthJwtModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthJwtRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AwsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AwsRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RouterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesPublicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthJwtModule\n\n\n\ncluster_AuthJwtModule_imports\n\n\n\ncluster_AuthJwtModule_exports\n\n\n\ncluster_AuthJwtModule_providers\n\n\n\ncluster_AuthJwtRepositoryModule\n\n\n\ncluster_AuthJwtRepositoryModule_exports\n\n\n\ncluster_AuthJwtRepositoryModule_providers\n\n\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_imports\n\n\n\ncluster_AwsModule_exports\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_HelperModule\n\n\n\ncluster_HelperModule_exports\n\n\n\ncluster_HelperModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_imports\n\n\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_imports\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\ncluster_RoutesAdminModule\n\n\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesPublicModule\n\n\n\ncluster_RoutesPublicModule_imports\n\n\n\ncluster_SettingModule\n\n\n\ncluster_SettingModule_imports\n\n\n\ncluster_SettingModule_exports\n\n\n\ncluster_SettingModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserRepositoryModule\n\n\n\ncluster_UserRepositoryModule_exports\n\n\n\ncluster_UserRepositoryModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nRouterModule\n\nRouterModule\n\nAppModule -->\n\nRouterModule->AppModule\n\n\n\n\n\nAuthJwtRepositoryModule\n\nAuthJwtRepositoryModule\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\nAuthJwtModule -->\n\nAuthJwtRepositoryModule->AuthJwtModule\n\n\n\n\n\nAuthAccessTokenRepository \n\nAuthAccessTokenRepository \n\nAuthAccessTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthAccessTokenRepository \n\n\n\n\n\nAuthRefreshTokenRepository \n\nAuthRefreshTokenRepository \n\nAuthRefreshTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthRefreshTokenRepository \n\n\n\n\n\nHelperModule\n\nHelperModule\n\nCommonModule -->\n\nHelperModule->CommonModule\n\n\n\nAuthJwtModule -->\n\nHelperModule->AuthJwtModule\n\n\n\n\n\nHelperEncryptionService \n\nHelperEncryptionService \n\nHelperEncryptionService  -->\n\nHelperModule->HelperEncryptionService \n\n\n\n\n\nHelperHashService \n\nHelperHashService \n\nHelperHashService  -->\n\nHelperModule->HelperHashService \n\n\n\n\n\nHelperStringService \n\nHelperStringService \n\nHelperStringService  -->\n\nHelperModule->HelperStringService \n\n\n\nCommonModule -->\n\nAuthJwtModule->CommonModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthJwtModule->AuthService \n\n\n\n\n\nRoutesPublicModule\n\nRoutesPublicModule\n\nRoutesPublicModule -->\n\nAuthJwtModule->RoutesPublicModule\n\n\n\n\n\nAuthAccessTokenService\n\nAuthAccessTokenService\n\nAuthJwtModule -->\n\nAuthAccessTokenService->AuthJwtModule\n\n\n\n\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtAccessTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtRefreshTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthRefreshTokenService\n\nAuthRefreshTokenService\n\nAuthJwtModule -->\n\nAuthRefreshTokenService->AuthJwtModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthJwtModule -->\n\nAuthService->AuthJwtModule\n\n\n\n\n\nAuthAccessTokenRepository\n\nAuthAccessTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthAccessTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\nAuthRefreshTokenRepository\n\nAuthRefreshTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthRefreshTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\nAwsRepositoryModule\n\nAwsRepositoryModule\n\n\n\nAwsModule\n\nAwsModule\n\nAwsModule -->\n\nAwsRepositoryModule->AwsModule\n\n\n\nCommonModule -->\n\nAwsModule->CommonModule\n\n\n\n\n\nAwsS3Service \n\nAwsS3Service \n\nAwsS3Service  -->\n\nAwsModule->AwsS3Service \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nAwsModule->HealthModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesModule -->\n\nAwsModule->RoutesModule\n\n\n\n\n\nAwsS3Service\n\nAwsS3Service\n\nAwsModule -->\n\nAwsS3Service->AwsModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCommonModule -->\n\nDatabaseModule->CommonModule\n\n\n\n\n\nDatabaseOptionsService \n\nDatabaseOptionsService \n\nDatabaseOptionsService  -->\n\nDatabaseModule->DatabaseOptionsService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommonModule -->\n\nLoggerModule->CommonModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nCommonModule -->\n\nRequestModule->CommonModule\n\n\n\n\n\nSettingModule\n\nSettingModule\n\nCommonModule -->\n\nSettingModule->CommonModule\n\n\n\n\n\nSettingService \n\nSettingService \n\nSettingService  -->\n\nSettingModule->SettingService \n\n\n\n\n\nDatabaseOptionsService\n\nDatabaseOptionsService\n\nDatabaseModule -->\n\nDatabaseOptionsService->DatabaseModule\n\n\n\n\n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator  -->\n\nHealthModule->HealthAwsS3Indicator \n\n\n\nRoutesModule -->\n\nHealthModule->RoutesModule\n\n\n\n\n\nHealthAwsS3Indicator\n\nHealthAwsS3Indicator\n\nHealthModule -->\n\nHealthAwsS3Indicator->HealthModule\n\n\n\n\n\nHelperEncryptionService\n\nHelperEncryptionService\n\nHelperModule -->\n\nHelperEncryptionService->HelperModule\n\n\n\n\n\nHelperHashService\n\nHelperHashService\n\nHelperModule -->\n\nHelperHashService->HelperModule\n\n\n\n\n\nHelperStringService\n\nHelperStringService\n\nHelperModule -->\n\nHelperStringService->HelperModule\n\n\n\n\n\nLoggerRepositoryModule\n\nLoggerRepositoryModule\n\nLoggerModule -->\n\nLoggerRepositoryModule->LoggerModule\n\n\n\n\n\nPermissionRepositoryModule\n\nPermissionRepositoryModule\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionRepositoryModule->PermissionModule\n\n\n\n\n\nRoutesAdminModule\n\nRoutesAdminModule\n\nRoutesAdminModule -->\n\nPermissionModule->RoutesAdminModule\n\n\n\n\n\nRoleRepositoryModule\n\nRoleRepositoryModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleRepositoryModule->RoleModule\n\n\n\nRoutesPublicModule -->\n\nRoleModule->RoutesPublicModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nRoutesPublicModule -->\n\nUserModule->RoutesPublicModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nSettingRepositoryModule\n\nSettingRepositoryModule\n\nSettingModule -->\n\nSettingRepositoryModule->SettingModule\n\n\n\n\n\nSettingService\n\nSettingService\n\nSettingModule -->\n\nSettingService->SettingModule\n\n\n\n\n\nUserRepositoryModule\n\nUserRepositoryModule\n\nUserModule -->\n\nUserRepositoryModule->UserModule\n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUserRepositoryModule->UserRepository \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserRepositoryModule -->\n\nUserRepository->UserRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : #release1: authentication-authorization\n        \n            License : MIT\n        \n            Author : B.Mohamed\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENUM_AUTH_ACCESS_FOR   (src/.../auth.enum.constant.ts)\n                        \n                        \n                            IDatabaseCreateManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseDeleteOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseRestoreManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseRestoreOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseSoftDeleteManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseSoftDeleteOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseUpdateOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IPaginationSort   (src/.../pagination.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/auth-jwt/constants/auth.enum.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ENUM_AUTH_ACCESS_FOR\n                \n            \n            \n                \n                            ENUM_AUTH_ACCESS_FOR_DEFAULT | ENUM_AUTH_ACCESS_FOR_SUPER_ADMIN\n\n                \n            \n        \n    \n    src/common/database/interfaces/database.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IDatabaseCreateManyOptions\n                \n            \n            \n                \n                            Pick | session>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseDeleteOptions\n                \n            \n            \n                \n                            IDatabaseUpdateOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseManyOptions\n                \n            \n            \n                \n                            Pick | \"join\" | \"session\">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseOptions\n                \n            \n            \n                \n                            Pick | \"join\" | \"session\" | \"withDeleted\">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseRestoreManyOptions\n                \n            \n            \n                \n                            IDatabaseManyOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseRestoreOptions\n                \n            \n            \n                \n                            IDatabaseSoftDeleteOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseSoftDeleteManyOptions\n                \n            \n            \n                \n                            IDatabaseManyOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseSoftDeleteOptions\n                \n            \n            \n                \n                            Pick | \"join\" | \"session\">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseUpdateOptions\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/common/pagination/interfaces/pagination.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IPaginationSort\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                    C:/Users/LENOVO/Desktop/programmation/BACK/NestJs/production/authentication/src/common/helpers/services/helper.encryption.service.ts\n            \n            \n                100 %\n                (19/19)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (9/9)\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    C:/Users/LENOVO/Desktop/programmation/BACK/NestJs/production/authentication/src/common/helpers/services/helper.hash.service.ts\n            \n            \n                100 %\n                (11/11)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    C:/Users/LENOVO/Desktop/programmation/BACK/NestJs/production/authentication/src/common/helpers/services/helper.string.service.ts\n            \n            \n                100 %\n                (22/22)\n            \n            \n                100 %\n                (29/29)\n            \n            \n                100 %\n                (8/8)\n            \n            \n                100 %\n                (19/19)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appLanguage   (src/.../app.constant.ts)\n                        \n                        \n                            AUTH_JWT_AT_STRATEGY_NAME   (src/.../auth.constant.ts)\n                        \n                        \n                            AUTH_JWT_RT_STRATEGY_NAME   (src/.../auth.constant.ts)\n                        \n                        \n                            AuthAccessTokenEntityName   (src/.../auth.access-token.entity.ts)\n                        \n                        \n                            AuthJwtPayload   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            AuthJwtToken   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            AuthRefreshTokenEntityName   (src/.../auth.refresh-token.entity.ts)\n                        \n                        \n                            AWS_PHOTO_ENTITY_NAME   (src/.../aws.photo.entity.ts)\n                        \n                        \n                            DATABASE_CREATED_AT_FIELD_NAME   (src/.../databast.constant.ts)\n                        \n                        \n                            DATABASE_DELETE_AT_FIELD_NAME   (src/.../databast.constant.ts)\n                        \n                        \n                            DATABASE_UPDATE_AT_FIELD_NAME   (src/.../databast.constant.ts)\n                        \n                        \n                            ENUM_AUTH_ACCESS_FOR   (src/.../auth.enum.constant.ts)\n                        \n                        \n                            LOGGER_ENTITY_NAME   (src/.../logger.entity.ts)\n                        \n                        \n                            PERMISSION_ENTITY_NAME   (src/.../permission.entity.ts)\n                        \n                        \n                            ROLE_ENTITY_NAME   (src/.../role.entity.ts)\n                        \n                        \n                            SETTING_ENTITY_NAME   (src/.../setting.entity.ts)\n                        \n                        \n                            USER_ENTITY_NAME   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants/app.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_AT_STRATEGY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwtAccessToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_RT_STRATEGY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwtRefreshToken\"\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/repository/entities/auth.access-token.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthAccessTokenEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt_access_token\"\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/decorators/auth.jwt.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthJwtPayload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext): Record => {\n        const { user } = ctx.switchToHttp().getRequest();\n        return data ? user[data] : user;\n    }\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthJwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext): string => {\n        const { headers } = ctx.switchToHttp().getRequest();\n        const { authorization } = headers;\n        const authorizations: string[] = authorization.split(' ');\n\n        return authorizations.length >= 2 ? authorizations[1] : undefined;\n    }\n)\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/repository/entities/auth.refresh-token.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthRefreshTokenEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt_refresh_token\"\n                    \n                \n\n\n        \n    \n\n    src/common/aws/repositories/entities/aws.photo.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AWS_PHOTO_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"photo\"\n                    \n                \n\n\n        \n    \n\n    src/common/database/constants/databast.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'created_at'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'deleted_at'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'updated_at'\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/constants/auth.enum.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENUM_AUTH_ACCESS_FOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    ...ENUM_AUTH_ACCESS_FOR_DEFAULT,\n    ...ENUM_AUTH_ACCESS_FOR_SUPER_ADMIN,\n}\n                    \n                \n\n\n        \n    \n\n    src/common/logger/repository/entities/logger.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"logger\"\n                    \n                \n\n\n        \n    \n\n    src/modules/permissions/repository/entities/permission.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PERMISSION_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"permission\"\n                    \n                \n\n\n        \n    \n\n    src/modules/role/repository/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLE_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"role\"\n                    \n                \n\n\n        \n    \n\n    src/common/settings/repository/entities/setting.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SETTING_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"setting\"\n                    \n                \n\n\n        \n    \n\n    src/modules/user/repository/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"user\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

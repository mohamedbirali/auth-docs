var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.99,1,3.246]],["body/controllers/AppController.html",[1,4.535,2,3.269,3,0.191,4,0.171,5,5.744,6,0.541,7,1.698,8,7.501,9,2.322,10,0.012,11,5.744,12,1.355,13,1.077,14,0.01,15,0.01]],["title/modules/AppModule.html",[16,1.602,17,2.99]],["body/modules/AppModule.html",[1,4.114,2,2.965,3,0.173,4,0.155,10,0.011,14,0.01,15,0.01,17,5.854,18,1.826,19,2.653,20,4.55,21,4.55,22,5.105,23,5.105,24,2.863,25,2.274,26,2.274,27,5.211,28,2.821]],["title/classes/AuthAccessTokenEntity.html",[29,1.546,30,2.785]],["body/classes/AuthAccessTokenEntity.html",[3,0.118,4,0.106,6,0.335,9,3.019,10,0.012,13,1.279,14,0.008,15,0.008,30,2.411,31,1.338,32,1.247,33,3.108,34,2.81,35,1.758,36,2.588,37,1.364,38,4.009,39,4.009,40,4.009,41,4.009,42,3.553,43,3.553,44,3.553,45,2.393,46,0.979,47,4.693,48,2.81,49,4.103,50,4.371,51,4.103,52,2.81,53,2.81,54,2.81,55,4.038,56,2.263,57,2.263,58,2.263,59,2.136,60,0.84]],["title/injectables/AuthAccessTokenService.html",[61,1.794,62,2.785]],["body/injectables/AuthAccessTokenService.html",[3,0.131,4,0.118,6,0.373,7,1.334,10,0.012,12,1.48,13,1.268,14,0.008,15,0.008,30,4.582,32,1.388,45,1.602,46,0.822,60,1.596,62,2.683,63,1.663,64,3.961,65,3.459,66,3.285,67,2.704,68,3.98,69,3.98,70,1.957,71,3.961,72,4.952,73,1.939,74,1.496,75,2.377,76,2.862,77,2.964,78,2.969,79,2.737,80,2.444,81,2.88,82,2.964,83,2.145,84,2.88,85,3.48]],["title/classes/AuthEntityAbstract.html",[29,1.546,36,2.99]],["body/classes/AuthEntityAbstract.html",[3,0.119,4,0.107,6,0.337,9,3.022,10,0.012,13,1.281,14,0.008,15,0.008,31,1.344,32,1.252,35,1.766,36,2.599,37,1.368,38,4.021,39,4.021,40,4.021,41,4.021,42,3.561,43,3.561,44,3.561,45,2.399,46,0.98,47,4.702,48,2.822,49,4.111,50,4.38,51,4.111,52,2.822,53,2.822,54,2.822,55,4.044,56,2.273,57,2.273,58,2.273,59,2.145,60,0.843,86,3.575,87,2.421]],["title/injectables/AuthJwtAccessTokenGuard.html",[61,1.794,88,3.59]],["body/injectables/AuthJwtAccessTokenGuard.html",[3,0.235,4,0.151,6,0.476,7,1.568,10,0.011,12,1.192,14,0.01,15,0.01,32,1.771,46,0.782,60,1.192,63,2.122,73,1.845,74,1.117,88,4.413,89,4.413,90,4.413,91,4.413,92,5.619,93,4.413,94,6.508,95,3.863,96,6.508,97,4.413]],["title/injectables/AuthJwtAccessTokenStrategy.html",[61,1.794,98,2.99]],["body/injectables/AuthJwtAccessTokenStrategy.html",[3,0.161,4,0.145,6,0.457,7,1.527,10,0.011,12,1.144,14,0.009,15,0.009,32,1.7,46,0.762,60,1.479,62,4.971,63,2.037,67,3.096,70,2.396,73,1.796,74,1.386,89,4.235,90,4.235,98,3.527,99,4.235,100,5.473,101,3.084,102,4.415,103,4.667,104,4.235,105,2.967,106,4.851]],["title/modules/AuthJwtModule.html",[16,1.602,107,2.614]],["body/modules/AuthJwtModule.html",[3,0.135,4,0.122,10,0.012,14,0.008,15,0.008,18,1.428,19,2.257,24,2.436,25,1.779,26,1.779,28,2.207,32,1.428,62,4.638,98,4.979,103,4.981,107,5.286,108,3.559,109,3.559,110,3.559,111,3.559,112,4.638,113,4.354,114,4.979,115,4.638,116,4.076,117,2.32,118,2.32]],["title/injectables/AuthJwtRefreshTokenGuard.html",[61,1.794,119,3.59]],["body/injectables/AuthJwtRefreshTokenGuard.html",[3,0.235,4,0.151,6,0.476,7,1.568,10,0.011,12,1.192,14,0.01,15,0.01,32,1.771,46,0.782,60,1.192,63,2.122,73,1.845,74,1.117,91,4.413,92,5.619,93,4.413,94,6.508,95,3.863,96,6.508,97,4.413,119,4.413,120,4.413,121,4.413]],["title/injectables/AuthJwtRefreshTokenStrategy.html",[61,1.794,114,2.99]],["body/injectables/AuthJwtRefreshTokenStrategy.html",[3,0.161,4,0.145,6,0.457,7,1.527,10,0.011,12,1.144,14,0.009,15,0.009,32,1.7,46,0.762,60,1.479,63,2.037,67,3.096,70,2.396,73,1.796,74,1.386,80,1.89,99,4.235,100,5.473,101,3.084,102,4.415,103,4.667,104,4.235,105,2.967,114,3.527,115,4.971,120,4.235,121,4.235]],["title/modules/AuthJwtRepositoryModule.html",[16,1.602,112,2.785]],["body/modules/AuthJwtRepositoryModule.html",[3,0.158,4,0.142,10,0.011,14,0.009,15,0.009,18,1.671,19,2.506,24,2.705,25,2.081,26,2.081,32,1.671,72,6.384,112,5.476,117,2.714,118,2.714,122,4.163,123,4.163,124,4.163,125,6.384,126,4.768]],["title/classes/AuthRefreshTokenEntity.html",[29,1.546,127,2.785]],["body/classes/AuthRefreshTokenEntity.html",[3,0.106,4,0.096,6,0.302,9,3.044,10,0.012,13,1.228,14,0.007,15,0.007,31,1.206,32,1.124,34,2.532,35,1.584,36,2.332,37,1.264,38,3.718,39,3.718,40,3.718,41,3.718,42,3.349,43,3.349,44,3.349,45,2.256,46,0.985,47,4.978,48,2.532,49,3.909,50,4.636,51,4.352,52,2.532,53,2.532,54,2.532,55,3.896,56,2.039,57,2.039,58,2.039,59,1.925,60,0.757,127,2.172,128,2.8,129,4.709,130,4.709,131,2.055,132,3.207,133,4.111,134,3.207]],["title/injectables/AuthRefreshTokenService.html",[61,1.794,115,2.785]],["body/injectables/AuthRefreshTokenService.html",[3,0.116,4,0.104,6,0.328,7,1.219,10,0.012,12,1.508,13,1.321,14,0.007,15,0.007,32,1.221,45,2.023,46,0.823,60,1.597,63,1.464,65,3.044,66,3.002,67,3.668,68,3.637,69,3.637,70,1.722,73,1.94,74,1.497,75,2.092,76,2.894,77,2.709,78,3.204,79,2.79,80,2.491,81,2.535,82,2.709,83,1.887,84,2.535,85,4.065,115,2.361,125,4.62,127,4.33,135,3.486,136,4.368,137,3.486,138,3.044,139,3.637]],["title/injectables/AuthService.html",[61,1.794,103,2.614]],["body/injectables/AuthService.html",[3,0.083,4,0.075,6,0.236,7,0.953,10,0.012,12,1.587,13,1.474,14,0.006,15,0.006,32,0.879,37,1.05,46,0.859,60,1.631,63,1.054,67,3.705,70,1.24,73,1.981,74,1.528,76,2.428,78,1.188,79,2.097,80,2.535,83,2.118,101,1.595,102,3.055,103,1.595,105,3.079,131,1.095,140,2.51,141,3.088,142,2.649,143,3.911,144,3.415,145,3.415,146,3.415,147,3.415,148,3.415,149,3.415,150,3.415,151,3.415,152,3.675,153,3.675,154,2.51,155,1.981,156,2.191,157,3.415,158,1.707,159,2.844,160,2.191,161,2.51,162,3.675,163,3.945,164,2.191,165,1.825,166,2.191,167,2.486,168,2.191,169,2.191,170,2.347,171,2.191,172,3.415,173,2.191,174,1.825,175,1.595,176,2.51]],["title/classes/AuthUpdateRefreshTokenDto.html",[29,1.546,139,2.99]],["body/classes/AuthUpdateRefreshTokenDto.html",[3,0.187,4,0.168,6,0.53,10,0.011,14,0.01,15,0.01,31,2.116,32,1.972,37,1.848,46,0.837,55,3.203,139,4.093,158,2.456,177,5.629,178,5.629,179,6.009,180,6.009]],["title/modules/AwsModule.html",[16,1.602,181,2.468]],["body/modules/AwsModule.html",[3,0.164,4,0.147,10,0.011,14,0.009,15,0.009,18,1.73,19,2.563,24,2.766,25,2.154,26,2.154,28,2.673,117,2.809,118,2.809,181,4.835,182,4.31,183,4.31,184,4.31,185,4.31,186,5.004,187,5.511,188,4.936]],["title/classes/AwsPhotoEntity.html",[29,1.546,189,3.246]],["body/classes/AwsPhotoEntity.html",[3,0.124,4,0.111,6,0.352,9,3.056,10,0.012,13,1.388,14,0.008,15,0.008,31,1.403,37,1.41,45,2.123,46,0.98,47,4.418,49,4.582,50,4.115,51,4.582,59,2.24,95,3.152,189,2.947,190,3.259,191,4.147,192,4.586,193,3.819,194,4.586,195,3.557,196,4.586,197,3.733,198,3.733,199,6.076,200,3.733,201,2.528,202,3.733]],["title/modules/AwsRepositoryModule.html",[16,1.602,186,2.785]],["body/modules/AwsRepositoryModule.html",[3,0.208,4,0.187,10,0.011,14,0.011,15,0.011,18,2.192,186,4.237,203,6.256]],["title/classes/AwsS3MultipartPartsSerialization.html",[29,1.546,204,3.246]],["body/classes/AwsS3MultipartPartsSerialization.html",[3,0.174,4,0.156,6,0.494,9,2.663,10,0.012,13,0.983,14,0.01,15,0.01,31,1.971,37,1.769,46,0.801,131,2.288,204,4.14,205,4.578,206,7.202,207,4.789,208,4.461,209,3.333,210,3.812,211,4.14,212,4.578,213,4.578,214,5.243]],["title/classes/AwsS3MultipartSerialization.html",[29,1.546,215,3.59]],["body/classes/AwsS3MultipartSerialization.html",[3,0.142,4,0.128,6,0.403,9,2.826,10,0.012,13,0.803,14,0.009,15,0.009,31,1.61,37,1.551,45,1.732,46,0.85,74,1.662,131,3.051,204,3.382,205,3.74,207,4.198,208,4.423,209,2.723,210,4.749,211,3.382,212,3.74,213,3.74,215,3.74,216,5.774,217,4.559,218,4.559,219,4.284,220,4.284,221,5.774,222,2.723,223,4.284,224,3.74,225,4.284,226,4.284,227,4.284,228,3.74,229,4.284]],["title/classes/AwsS3Serialization.html",[29,1.546,230,3.59]],["body/classes/AwsS3Serialization.html",[3,0.146,4,0.131,6,0.414,9,3.062,10,0.012,13,1.42,14,0.009,15,0.009,31,1.652,37,1.578,46,0.921,191,4.638,192,5.129,193,4.271,194,5.129,195,3.979,196,5.129,208,5.13,209,2.794,228,6.427,230,3.838,231,4.395]],["title/injectables/AwsS3Service.html",[61,1.794,187,2.785]],["body/injectables/AwsS3Service.html",[3,0.068,4,0.061,6,0.193,7,0.81,10,0.012,12,1.604,13,1.494,14,0.005,15,0.005,37,0.893,46,0.857,60,1.567,63,0.859,67,3.8,70,1.011,73,1.904,74,1.469,76,1.884,79,1.832,80,2.649,101,1.301,102,2.669,131,1.451,141,4.497,142,3.858,187,1.386,191,2.625,193,3.053,195,2.251,207,2.417,217,2.625,218,4.497,232,2.046,233,3.325,234,4.199,235,2.903,236,3.666,237,2.903,238,2.903,239,2.903,240,2.903,241,2.903,242,2.903,243,3.666,244,2.903,245,2.903,246,1.787,247,1.787,248,2.903,249,1.787,250,3.515,251,1.787,252,1.787,253,1.787,254,1.787,255,1.787,256,1.787,257,4.221,258,4.221,259,4.221,260,4.221,261,4.221,262,1.787,263,1.787,264,1.787,265,2.903,266,1.787]],["title/modules/CommonModule.html",[16,1.602,22,2.785]],["body/modules/CommonModule.html",[3,0.155,4,0.139,10,0.012,14,0.009,15,0.009,18,1.634,19,2.47,22,5.609,24,2.666,25,2.035,26,2.035,28,2.525,107,4.597,113,4.597,181,4.339,267,4.071,268,4.071,269,4.897,270,4.897,271,4.663]],["title/classes/DatabaseEntityAbstract.html",[29,1.546,87,2.785]],["body/classes/DatabaseEntityAbstract.html",[3,0.155,4,0.139,6,0.439,9,2.923,10,0.012,13,0.874,14,0.009,15,0.009,31,1.753,37,1.64,42,4.089,43,4.089,44,4.089,45,2.755,46,0.954,55,4.383,56,2.964,57,2.964,58,2.964,59,2.799,60,1.1,87,3.158,272,4.663]],["title/modules/DatabaseModule.html",[16,1.602,269,2.785]],["body/modules/DatabaseModule.html",[3,0.173,4,0.155,10,0.011,14,0.01,15,0.01,18,1.826,19,2.653,24,2.863,25,2.274,26,2.274,117,2.965,118,2.965,269,5.371,273,4.55,274,4.55,275,4.55,276,5.974,277,5.211]],["title/injectables/DatabaseOptionsService.html",[61,1.794,276,2.99]],["body/injectables/DatabaseOptionsService.html",[3,0.107,4,0.096,6,0.304,7,1.154,10,0.012,12,0.762,13,1.287,14,0.007,15,0.007,37,1.272,46,0.902,60,1.322,63,1.357,70,1.596,73,0.926,74,0.714,76,1.845,95,2.842,101,2.055,102,3.563,131,1.41,141,6.306,142,5.409,158,1.41,174,5.288,175,4.624,276,2.35,278,3.232,279,3.232,280,4.735,281,4.735,282,4.735,283,2.842,284,4.735,285,4.893,286,2.822,287,3.232,288,3.232,289,3.232,290,3.232,291,3.232,292,3.232,293,3.232,294,3.232]],["title/injectables/HealthAwsS3Indicator.html",[61,1.794,295,2.99]],["body/injectables/HealthAwsS3Indicator.html",[3,0.168,4,0.151,6,0.476,7,1.568,10,0.011,12,1.192,13,1.206,14,0.01,15,0.01,35,2.497,46,0.782,60,1.518,63,2.122,67,3.179,70,2.497,73,1.845,74,1.423,80,1.97,162,3.423,187,4.795,295,3.675,296,5.055,297,5.055,298,5.055,299,6.436,300,5.055,301,5.055]],["title/controllers/HealthController.html",[0,2.99,302,3.246]],["body/controllers/HealthController.html",[2,3.225,3,0.188,4,0.169,6,0.534,7,1.684,9,2.291,10,0.012,12,1.337,14,0.01,15,0.01,67,3.414,80,2.208,302,4.474,303,5.667,304,7.457,305,5.667]],["title/modules/HealthModule.html",[16,1.602,306,2.785]],["body/modules/HealthModule.html",[3,0.164,4,0.147,10,0.011,14,0.009,15,0.009,18,1.73,19,2.563,24,2.766,25,2.154,26,2.154,28,2.673,117,2.809,118,2.809,181,4.435,295,5.917,306,5.456,307,4.31,308,4.31,309,4.936,310,4.31,311,4.936]],["title/injectables/HelperEncryptionService.html",[61,1.794,152,2.785]],["body/injectables/HelperEncryptionService.html",[3,0.093,4,0.084,6,0.265,7,1.04,10,0.012,12,1.647,13,1.545,14,0.006,15,0.006,46,0.869,60,1.686,63,1.18,70,1.389,73,2.049,74,1.58,76,2.244,78,2.441,83,1.522,105,3.303,152,1.904,158,1.862,162,3.901,163,4.188,165,2.044,167,2.713,170,2.561,312,2.811,313,3.726,314,3.726,315,3.726,316,3.726,317,3.726,318,3.726,319,3.726,320,3.726,321,2.811,322,5.159,323,2.811,324,2.811,325,2.454,326,2.454,327,2.454,328,2.454,329,3.726,330,2.454,331,2.454,332,2.454,333,2.454,334,2.454]],["title/injectables/HelperHashService.html",[61,1.794,153,2.785]],["body/injectables/HelperHashService.html",[3,0.127,4,0.114,6,0.361,7,1.304,10,0.012,12,1.656,13,1.541,14,0.008,15,0.008,46,0.853,60,1.656,63,1.61,73,2.011,74,1.551,131,2.336,153,2.597,155,4.226,158,2.336,222,2.438,335,3.835,336,4.226,337,4.673,338,4.673,339,4.673,340,4.673,341,3.348,342,4.673,343,3.348,344,4.673,345,3.348,346,3.348,347,3.348,348,3.835,349,4.673,350,3.835]],["title/modules/HelperModule.html",[16,1.602,113,2.614]],["body/modules/HelperModule.html",[3,0.147,4,0.132,10,0.012,14,0.009,15,0.009,18,1.556,19,2.392,24,2.582,25,1.938,26,1.938,113,5.199,117,2.528,118,2.528,152,5.401,153,5.401,351,3.878,352,3.878,353,3.878,354,5.799,355,4.442]],["title/injectables/HelperStringService.html",[61,1.794,354,2.99]],["body/injectables/HelperStringService.html",[3,0.102,4,0.091,6,0.289,7,1.11,10,0.012,12,1.69,13,1.494,14,0.007,15,0.007,46,0.871,60,1.69,63,1.288,73,2.054,74,1.584,76,1.775,79,2.806,131,3.251,158,2.806,175,1.95,222,4.555,283,3.263,354,2.23,356,3.067,357,3.978,358,3.978,359,3.978,360,3.978,361,3.978,362,3.978,363,3.978,364,3.978,365,2.678,366,2.678,367,1.95,368,2.678,369,2.678,370,2.678,371,2.678,372,2.678,373,3.067,374,3.313,375,2.678,376,3.597]],["title/interfaces/IAuthAccessTokenService.html",[377,1.392,378,3.59]],["body/interfaces/IAuthAccessTokenService.html",[3,0.139,4,0.125,6,0.395,7,1.388,10,0.012,12,1.525,13,1.3,14,0.008,15,0.008,30,4.695,32,1.471,45,1.697,46,0.786,60,1.525,66,3.419,68,4.141,69,4.141,73,1.853,74,1.429,75,2.52,76,2.912,77,3.084,78,3.06,79,2.821,80,2.519,81,3.052,82,3.084,83,2.273,84,3.052,85,3.621,378,3.665,379,1.374,380,4.198,381,3.665]],["title/interfaces/IAuthPayloadOptions.html",[159,2.99,377,1.392]],["body/interfaces/IAuthPayloadOptions.html",[3,0.192,4,0.172,6,0.545,10,0.011,14,0.01,15,0.01,32,2.026,37,1.879,46,0.703,55,3.982,159,4.205,179,6.569,379,1.893,382,5.783]],["title/interfaces/IAuthRefreshTokenService.html",[377,1.392,383,3.59]],["body/interfaces/IAuthRefreshTokenService.html",[3,0.125,4,0.112,6,0.355,7,1.288,10,0.012,12,1.562,13,1.355,14,0.008,15,0.008,32,1.32,45,2.137,46,0.805,60,1.562,66,3.172,68,3.843,69,3.843,73,1.897,74,1.463,75,2.261,76,2.952,77,2.862,78,3.3,79,2.889,80,2.58,81,2.738,82,2.862,83,2.039,84,2.738,85,4.208,127,4.483,136,4.614,138,3.288,139,3.843,379,1.233,381,3.288,383,3.288,384,3.766]],["title/interfaces/IAuthService.html",[377,1.392,385,3.59]],["body/interfaces/IAuthService.html",[3,0.095,4,0.086,6,0.27,7,1.056,10,0.012,12,1.657,13,1.516,14,0.006,15,0.006,32,1.005,46,0.854,60,1.657,73,2.013,74,1.553,76,2.56,78,1.358,79,2.279,80,2.658,83,2.346,105,3.229,144,3.784,145,3.784,146,3.784,147,3.784,148,3.784,149,3.784,150,3.784,151,3.784,156,2.505,157,3.784,158,1.891,159,3.151,160,2.505,162,3.941,163,4.231,164,2.505,165,3.151,166,2.505,167,2.755,168,2.505,169,2.505,170,2.601,171,2.505,172,3.784,173,2.505,283,1.722,379,0.939,385,2.505,386,2.869,387,2.869,388,2.869]],["title/interfaces/IAwsS3PutItemOptions.html",[250,2.99,377,1.392]],["body/interfaces/IAwsS3PutItemOptions.html",[3,0.182,4,0.163,6,0.516,10,0.011,13,1.269,14,0.01,15,0.01,37,1.818,46,0.823,74,1.497,195,4.977,250,3.986,379,1.794,389,5.482,390,7.348,391,6.772]],["title/interfaces/IAwsS3Service.html",[377,1.392,392,3.59]],["body/interfaces/IAwsS3Service.html",[3,0.082,4,0.074,6,0.233,7,0.942,10,0.012,12,1.692,13,1.52,14,0.006,15,0.006,46,0.836,60,1.623,73,1.972,74,1.521,76,2.097,79,2.077,80,2.795,131,1.687,193,3.461,195,2.618,207,2.811,217,3.052,218,4.889,235,3.376,236,4.156,237,3.376,238,3.376,239,3.376,240,3.376,241,3.376,242,3.376,243,4.156,244,3.376,245,3.376,246,2.159,247,2.159,248,3.376,249,2.159,250,3.913,251,2.159,252,2.159,253,2.159,254,2.159,255,2.159,256,2.159,257,4.699,258,4.699,259,3.376,260,3.376,261,3.376,262,2.159,263,2.159,264,2.159,265,3.376,266,2.159,379,0.809,392,2.159,393,2.473]],["title/interfaces/IDatabaseCreateOptions.html",[77,2.226,377,1.392]],["body/interfaces/IDatabaseCreateOptions.html",[3,0.188,4,0.169,6,0.534,10,0.011,13,1.295,14,0.01,15,0.01,35,2.799,37,1.856,45,3.015,46,0.689,74,1.528,77,3.068,379,1.854,394,3.838,395,5.667]],["title/interfaces/IDatabaseExistOptions.html",[377,1.392,396,2.785]],["body/interfaces/IDatabaseExistOptions.html",[3,0.191,4,0.171,6,0.541,10,0.011,13,1.306,14,0.01,15,0.01,35,2.837,37,1.871,46,0.698,379,1.88,394,3.89,396,3.89,397,3.89,398,7.501]],["title/interfaces/IDatabaseFindAllOptions.html",[377,1.392,399,2.785]],["body/interfaces/IDatabaseFindAllOptions.html",[3,0.204,4,0.184,10,0.011,14,0.011,15,0.011,35,3.045,379,2.017,394,4.175,399,4.175,400,4.867]],["title/interfaces/IDatabaseFindOneOptions.html",[82,2.226,377,1.392]],["body/interfaces/IDatabaseFindOneOptions.html",[3,0.156,4,0.14,6,0.442,10,0.012,14,0.009,15,0.009,35,2.316,37,1.646,46,0.881,74,1.762,82,2.539,105,2.902,158,3.162,379,1.534,394,3.175,401,4.094,402,5.965,403,6.832,404,5.965,405,5.965,406,6.131,407,4.841]],["title/interfaces/IDatabaseOptionsService.html",[377,1.392,408,3.59]],["body/interfaces/IDatabaseOptionsService.html",[3,0.193,4,0.174,6,0.548,7,1.712,10,0.011,12,1.374,14,0.01,15,0.01,285,6.588,286,5.084,379,1.906,408,5.084,409,5.823,410,5.823]],["title/interfaces/IDatabaseRepository.html",[377,1.392,411,3.59]],["body/interfaces/IDatabaseRepository.html",[3,0.041,4,0.037,6,0.117,7,0.53,10,0.012,12,1.663,13,1.199,14,0.003,15,0.003,45,2.025,46,0.907,60,1.649,66,1.305,73,2.14,74,1.545,75,0.744,76,3.028,77,1.891,78,2.37,79,3.102,80,2.748,82,1.891,85,2.22,105,3.716,379,0.406,396,1.473,397,1.473,399,1.473,411,1.082,412,1.239,413,2.175,414,2.175,415,2.175,416,2.175,417,1.717,418,2.175,419,1.717,420,1.717,421,2.175,422,2.175,423,2.905,424,2.175,425,2.175,426,2.175,427,2.175,428,2.175,429,2.175,430,2.175,431,2.175,432,2.175,433,2.175,434,2.175,435,2.175,436,6.505,437,1.239,438,1.239,439,3.82,440,4.624,441,1.239,442,1.239,443,2.539,444,0.979,445,1.239,446,0.979,447,2.905,448,0.979,449,1.239,450,1.239,451,1.239,452,2.905,453,1.239,454,1.239,455,3.049,456,1.239,457,1.239,458,3.049,459,1.239,460,1.239,461,3.049,462,1.239,463,1.239,464,3.049,465,1.239,466,1.239,467,1.239,468,1.239]],["title/interfaces/IHelperEncryptionService.html",[377,1.392,469,3.59]],["body/interfaces/IHelperEncryptionService.html",[3,0.096,4,0.086,6,0.273,7,1.064,10,0.012,12,1.662,13,1.55,14,0.006,15,0.006,46,0.856,60,1.662,73,2.019,74,1.557,76,2.28,78,2.487,83,1.569,105,3.334,158,1.906,162,3.962,163,4.253,165,2.107,167,2.776,170,2.621,313,3.813,314,3.813,315,3.813,316,3.813,317,3.813,318,3.813,319,3.813,320,3.813,325,2.53,326,2.53,327,2.53,328,2.53,329,3.813,330,2.53,331,2.53,332,2.53,333,2.53,334,2.53,379,0.948,469,2.53,470,2.898,471,2.288,472,2.898,473,2.898]],["title/interfaces/IHelperHashService.html",[377,1.392,474,3.59]],["body/interfaces/IHelperHashService.html",[3,0.127,4,0.114,6,0.359,7,1.3,10,0.012,12,1.653,13,1.54,14,0.008,15,0.008,46,0.852,60,1.653,73,2.008,74,1.549,131,2.328,155,4.212,158,2.328,222,2.427,336,4.212,337,4.658,338,4.658,339,4.658,340,4.658,341,3.333,342,4.658,343,3.333,344,4.658,345,3.333,346,3.333,347,3.333,349,4.658,379,1.249,471,3.014,474,3.333,475,3.818,476,3.818,477,3.818]],["title/interfaces/IHelperJwtOptions.html",[167,2.614,377,1.392]],["body/interfaces/IHelperJwtOptions.html",[3,0.171,4,0.153,6,0.485,10,0.012,13,1.407,14,0.01,15,0.01,35,2.543,37,1.748,46,0.791,74,1.439,131,3.275,167,3.272,170,3.089,379,1.684,478,4.064,479,7.141,480,7.141]],["title/interfaces/IHelperJwtVerifyOptions.html",[170,2.468,377,1.392]],["body/interfaces/IHelperJwtVerifyOptions.html",[3,0.169,4,0.152,6,0.479,10,0.012,13,1.519,14,0.01,15,0.01,37,1.735,46,0.908,170,3.052,379,1.664,478,4.015,481,7.101,482,7.101,483,7.101,484,7.101]],["title/interfaces/IHelperRandomStringOptions.html",[374,2.99,377,1.392]],["body/interfaces/IHelperRandomStringOptions.html",[3,0.17,4,0.153,6,0.482,10,0.011,13,1.216,14,0.01,15,0.01,37,1.741,46,0.865,74,1.745,158,3.268,374,3.72,376,5.622,379,1.674,478,4.039,485,7.121,486,7.121]],["title/interfaces/IHelperStringService.html",[377,1.392,487,3.59]],["body/interfaces/IHelperStringService.html",[3,0.101,4,0.091,6,0.288,7,1.107,10,0.012,12,1.689,13,1.493,14,0.007,15,0.007,46,0.87,60,1.689,73,2.051,74,1.582,76,1.771,79,2.801,131,3.248,158,2.801,175,1.943,222,4.081,283,3.256,357,3.967,358,3.967,359,3.967,360,3.967,361,3.967,362,3.967,363,3.967,364,3.967,365,2.668,366,2.668,367,1.943,368,2.668,369,2.668,370,2.668,371,2.668,372,2.668,374,3.304,375,2.668,376,3.587,379,1,471,2.413,487,2.668,488,3.056,489,5.424,490,3.056]],["title/interfaces/IPaginationOptions.html",[377,1.392,400,3.246]],["body/interfaces/IPaginationOptions.html",[3,0.177,4,0.159,6,0.503,10,0.011,14,0.01,15,0.01,37,1.79,46,0.924,74,1.681,379,1.749,400,4.218,491,4.665,492,7.264,493,7.264,494,6.665,495,5.819]],["title/interfaces/ISettingService.html",[377,1.392,496,3.246]],["body/interfaces/ISettingService.html",[3,0.195,4,0.175,6,0.552,7,1.719,10,0.011,12,1.383,14,0.01,15,0.01,80,2.285,379,1.919,496,4.63,497,5.864,498,6.608]],["title/interfaces/IUserService.html",[377,1.392,499,3.59]],["body/interfaces/IUserService.html",[3,0.077,4,0.069,6,0.218,7,0.895,10,0.012,12,1.662,13,1.381,14,0.005,15,0.005,45,1.485,46,0.906,60,1.662,66,2.204,73,2.136,74,1.558,75,1.39,76,3.059,77,1.988,78,1.096,79,3.129,80,2.746,82,3.261,95,1.39,105,2.457,201,2.487,367,2.335,379,0.758,396,4.078,397,3.516,399,2.487,407,4.099,417,2.899,419,2.899,420,2.899,440,2.899,443,2.67,444,1.829,446,1.829,448,1.829,499,2.023,500,2.316,501,3.206,502,3.206,503,3.206,504,3.206,505,3.206,506,3.206,507,3.206,508,2.67,509,2.023,510,2.023,511,1.684,512,2.023,513,2.487,514,2.023,515,2.023,516,2.023,517,2.023]],["title/modules/RequestModule.html",[16,1.602,270,2.785]],["body/modules/RequestModule.html",[3,0.208,4,0.187,10,0.011,14,0.011,15,0.011,18,2.192,270,4.237,518,6.256]],["title/classes/RoleEntity.html",[29,1.546,519,3.59]],["body/classes/RoleEntity.html",[3,0.143,4,0.128,6,0.405,9,2.956,10,0.012,13,1.086,14,0.009,15,0.009,31,1.618,35,2.127,37,1.556,42,3.93,43,3.93,44,3.93,45,2.648,46,0.963,49,2.737,55,4.285,56,2.737,57,2.737,58,2.737,59,2.584,60,1.545,87,2.916,519,3.759,520,3.759,521,4.305,522,3.13,523,4.305,524,3.759]],["title/modules/RoleModule.html",[16,1.602,525,2.785]],["body/modules/RoleModule.html",[3,0.183,4,0.165,10,0.011,14,0.01,15,0.01,18,1.933,19,2.749,24,2.967,25,2.408,26,2.408,28,2.988,525,5.35,526,4.818,527,4.818,528,5.21,529,5.518]],["title/modules/RoleRepositoryModule.html",[16,1.602,528,2.785]],["body/modules/RoleRepositoryModule.html",[3,0.208,4,0.187,10,0.011,14,0.011,15,0.011,18,2.192,528,4.237,530,6.256]],["title/modules/RouterModule.html",[16,1.602,23,2.785]],["body/modules/RouterModule.html",[3,0.197,4,0.177,7,1.449,10,0.011,12,1.403,14,0.011,15,0.011,18,2.084,23,4.027,531,5.947,532,5.947,533,7.115,534,5.947]],["title/modules/RoutesModule.html",[16,1.602,535,2.99]],["body/modules/RoutesModule.html",[2,2.965,3,0.173,4,0.155,10,0.011,14,0.01,15,0.01,18,1.826,19,2.653,24,2.863,25,2.274,26,2.274,28,2.821,181,4.524,302,4.114,306,5.105,535,5.854,536,4.55,537,5.211,538,5.211]],["title/modules/RoutesPublicModule.html",[16,1.602,539,2.99]],["body/modules/RoutesPublicModule.html",[2,2.842,3,0.166,4,0.149,10,0.011,14,0.009,15,0.009,18,1.75,19,2.582,24,2.787,25,2.18,26,2.18,28,2.704,107,4.718,525,5.026,539,5.93,540,4.361,541,4.361,542,5.026,543,4.995,544,3.943]],["title/classes/SettingModule.html",[29,1.546,545,3.59]],["body/classes/SettingModule.html",[3,0.208,4,0.187,10,0.011,14,0.011,15,0.011,31,2.351,545,5.462,546,6.256]],["title/classes/SettingService.html",[29,1.546,547,3.59]],["body/classes/SettingService.html",[3,0.177,4,0.159,6,0.503,7,1.624,10,0.011,12,1.26,14,0.01,15,0.01,31,2.008,46,0.649,60,1.26,67,3.292,70,2.639,73,1.531,74,1.181,80,2.082,101,3.397,102,4.618,496,4.218,498,6.342,547,4.665,548,5.343,549,5.343]],["title/controllers/UserController.html",[0,2.99,550,3.59]],["body/controllers/UserController.html",[2,3.56,3,0.208,4,0.187,10,0.011,14,0.011,15,0.011,550,5.462,551,6.256]],["title/classes/UserCreateDto.html",[29,1.546,508,2.99]],["body/classes/UserCreateDto.html",[3,0.115,4,0.104,6,0.327,9,2.931,10,0.012,13,1.359,14,0.007,15,0.007,31,1.305,37,1.339,46,0.881,142,5.399,208,4.766,209,4.609,210,2.524,283,3.504,367,3.171,508,2.524,511,3.627,513,3.953,522,2.524,552,3.472,553,4.355,554,4.355,555,3.938,556,6.33,557,3.472,558,4.988,559,3.031,560,3.472,561,3.472,562,3.472,563,3.472,564,3.472,565,3.472,566,3.472,567,3.031,568,3.472,569,3.472,570,3.031,571,3.472,572,3.472]],["title/classes/UserEntity.html",[29,1.546,201,2.785]],["body/classes/UserEntity.html",[3,0.079,4,0.071,6,0.226,7,0.919,9,3.09,10,0.012,12,0.565,13,1.241,14,0.006,15,0.006,30,1.622,31,0.9,35,1.183,37,1.013,42,2.799,43,2.799,44,2.799,45,2.585,46,0.948,49,3.884,50,4.485,51,4.332,55,3.477,56,1.523,57,1.523,58,1.523,59,1.438,60,1.1,87,1.622,127,1.622,131,1.045,133,2.092,158,1.646,174,2.742,189,1.891,201,1.622,222,1.523,283,2.263,367,2.397,511,2.742,513,2.554,522,3.391,553,3.292,554,3.292,555,2.977,573,2.092,574,3.771,575,3.771,576,3.292,577,3.292,578,3.771,579,4.664,580,2.396,581,2.396,582,5.29,583,5.29,584,2.396,585,2.396,586,4.664,587,2.396,588,2.396,589,2.396,590,2.396,591,2.396,592,2.396,593,2.396,594,2.396,595,2.396,596,2.396,597,2.396,598,2.396,599,2.396,600,2.396,601,2.396,602,2.396,603,2.396,604,2.396,605,2.396,606,2.396,607,2.396,608,2.396,609,2.396]],["title/classes/UserLoginDto.html",[29,1.546,610,3.246]],["body/classes/UserLoginDto.html",[3,0.148,4,0.133,6,0.42,9,2.697,10,0.012,13,1.25,14,0.009,15,0.009,31,1.678,37,1.594,46,0.811,51,2.839,74,1.312,83,2.418,142,5.153,158,1.949,180,5.184,208,3.024,209,2.839,283,4.003,513,4.021,522,3.247,556,5.184,559,5.184,567,5.184,570,3.899,610,3.525,611,4.465,612,4.465,613,4.465,614,4.465,615,4.465,616,4.465,617,4.465,618,4.465]],["title/modules/UserModule.html",[16,1.602,542,2.785]],["body/modules/UserModule.html",[3,0.164,4,0.147,10,0.011,14,0.009,15,0.009,18,1.73,19,2.563,24,2.766,25,2.154,26,2.154,28,2.673,117,2.809,118,2.809,542,5.456,619,4.31,620,4.31,621,4.31,622,4.31,623,5.004,624,5.917,625,4.936]],["title/classes/UserPasswordAttemptDto.html",[29,1.546,626,3.59]],["body/classes/UserPasswordAttemptDto.html",[3,0.191,4,0.171,6,0.541,9,2.322,10,0.012,14,0.01,15,0.01,31,2.159,37,1.871,46,0.698,131,2.507,576,6.084,626,5.015,627,5.744,628,5.744,629,5.744]],["title/controllers/UserPublicController.html",[0,2.99,544,3.246]],["body/controllers/UserPublicController.html",[2,2.729,3,0.159,4,0.143,6,0.452,7,1.516,9,2.516,10,0.012,12,1.468,14,0.009,15,0.009,46,0.756,60,1.468,67,3.61,73,1.783,74,1.375,80,2.425,544,3.786,610,5.453,630,4.796,631,6.222,632,6.222,633,4.796,634,4.796,635,4.796,636,5.453,637,4.796]],["title/classes/UserRegisterDto.html",[29,1.546,636,3.246]],["body/classes/UserRegisterDto.html",[3,0.208,4,0.187,10,0.011,14,0.011,15,0.011,31,2.351,636,4.939,638,6.256]],["title/modules/UserRepositoryModule.html",[16,1.602,623,2.785]],["body/modules/UserRepositoryModule.html",[3,0.173,4,0.155,10,0.011,14,0.01,15,0.01,18,1.826,19,2.653,24,2.863,25,2.274,26,2.274,117,2.965,118,2.965,623,5.371,639,4.55,640,4.55,641,4.55,642,6.488,643,5.211]],["title/injectables/UserService.html",[61,1.794,624,2.99]],["body/injectables/UserService.html",[3,0.071,4,0.064,6,0.202,7,0.84,10,0.012,12,1.625,13,1.356,14,0.005,15,0.005,45,1.394,46,0.9,60,1.656,63,0.898,66,2.069,67,3.781,70,1.057,73,2.122,74,1.552,75,1.284,76,3.02,77,1.866,78,1.013,79,3.063,80,2.685,82,3.148,95,1.284,105,2.349,201,2.334,367,2.191,396,3.938,397,3.361,399,2.334,407,3.918,417,2.721,419,2.721,420,2.721,440,2.721,443,2.506,444,1.69,446,1.69,448,1.69,501,3.01,502,3.01,503,3.01,504,3.01,505,3.01,506,3.01,507,3.01,508,2.506,509,1.868,510,1.868,511,1.556,512,1.868,513,2.334,514,1.868,515,1.868,516,1.868,517,1.868,624,1.556,642,3.417,644,2.14,645,2.14]],["title/dependencies.html",[19,2,646,2.996]],["body/dependencies.html",[10,0.013,14,0.007,15,0.007,19,1.359,29,1.831,211,2.653,336,2.653,647,3.361,648,3.361,649,3.361,650,3.361,651,3.361,652,3.361,653,3.361,654,3.361,655,3.361,656,3.361,657,3.361,658,5.732,659,3.361,660,3.361,661,3.361,662,3.361,663,3.361,664,3.361,665,3.361,666,3.361,667,3.361,668,3.361,669,3.361,670,3.361,671,3.361,672,3.361,673,3.361,674,3.361,675,3.361,676,3.361,677,3.361,678,3.361,679,3.361,680,3.361,681,3.361,682,3.361,683,3.361,684,4.872,685,3.361,686,3.361,687,3.361,688,3.361,689,3.361,690,3.361,691,3.361,692,3.361,693,3.361,694,3.361,695,3.361,696,2.934,697,3.361,698,3.361,699,2.934,700,3.361,701,3.361,702,5.732,703,3.361,704,3.361,705,3.361,706,2.934,707,3.361,708,3.361,709,3.361,710,3.361,711,3.361,712,3.361,713,2.934,714,3.361,715,2.934,716,3.361,717,3.361,718,3.361,719,3.361,720,3.361,721,3.361]],["title/miscellaneous/enumerations.html",[722,1.953,723,4.319]],["body/miscellaneous/enumerations.html",[6,0.407,10,0.012,14,0.009,15,0.009,32,1.516,175,4.794,224,3.778,722,2.463,723,3.778,724,5.814,725,4.328,726,5.814,727,5.814,728,4.328,729,7.541,730,5.814,731,4.328,732,5.814,733,4.328,734,5.814,735,4.328,736,4.328,737,4.328,738,4.328,739,4.328,740,4.328,741,4.328,742,4.328,743,4.328,744,4.328,745,4.328,746,4.328,747,4.328,748,4.328,749,4.328,750,4.328,751,4.328,752,4.328,753,4.328,754,4.328,755,4.328,756,4.328,757,4.328,758,4.328,759,4.328,760,4.328]],["title/miscellaneous/functions.html",[722,1.953,761,3.905]],["body/miscellaneous/functions.html",[6,0.432,10,0.012,12,1.695,14,0.009,15,0.009,32,1.607,46,0.735,60,1.426,73,1.732,74,1.336,76,1.787,79,2.002,722,2.61,761,3.621,762,6.759,763,5.276,764,6.759,765,6.759,766,4.587,767,6.043,768,6.043,769,6.043,770,4.005,771,6.043,772,4.587,773,4.587,774,4.587,775,6.043,776,4.587,777,4.587,778,4.005,779,4.587]],["title/index.html",[6,0.323,780,3.432,781,3.432]],["body/index.html",[10,0.012,14,0.008,15,0.008,696,3.274,699,3.274,706,4.6,713,3.274,715,3.274,778,3.274,782,5.318,783,3.75,784,3.75,785,3.75,786,3.75,787,3.75,788,3.75,789,3.75,790,3.75,791,3.75,792,3.75,793,3.274,794,3.75,795,3.75,796,5.269,797,3.75,798,3.75,799,3.75,800,3.75,801,3.75,802,3.75,803,3.75,804,3.75,805,3.75,806,3.75,807,3.75,808,3.75,809,3.75,810,3.75,811,3.75,812,3.75,813,6.091,814,3.75,815,3.75,816,2.96,817,3.75,818,3.75,819,3.75,820,2.96,821,3.75,822,3.75,823,3.75,824,6.96,825,3.75,826,3.75,827,6.607,828,3.75,829,3.75,830,5.269,831,3.75,832,3.75,833,3.75,834,2.96,835,4.809,836,3.75,837,3.75,838,3.274,839,3.75,840,3.75,841,3.274,842,3.75,843,3.75]],["title/modules.html",[18,1.968]],["body/modules.html",[10,0.008,14,0.008,15,0.008,17,2.894,18,1.394,22,2.695,23,2.695,107,2.53,112,2.695,113,2.53,181,2.389,186,2.695,269,2.695,270,2.695,306,2.695,525,2.695,528,2.695,535,2.894,539,2.894,542,2.695,623,2.695,844,8.093,845,8.093,846,8.093,847,8.26,848,6.779,849,6.779]],["title/overview.html",[820,4.434]],["body/overview.html",[2,1.078,10,0.012,14,0.005,15,0.005,17,3.993,18,0.664,19,1.262,20,1.654,21,1.654,22,4.676,23,2.696,24,1.362,25,0.827,26,0.827,31,0.712,62,2.696,63,0.795,72,4.585,98,2.894,103,3.692,107,4.718,108,1.654,109,1.654,110,1.654,111,1.654,112,4.259,113,4.389,114,2.894,115,2.696,122,1.654,123,1.654,124,1.654,125,4.585,152,3.933,153,3.933,181,3.887,182,1.654,183,1.654,184,1.654,185,1.654,186,2.696,187,3.933,267,1.654,268,1.654,269,3.72,270,2.696,273,1.654,274,1.654,275,1.654,276,4.222,295,4.222,306,4.11,307,1.654,308,1.654,310,1.654,351,1.654,352,1.654,353,1.654,354,4.222,379,0.62,525,3.457,526,1.654,527,1.654,528,2.696,535,3.993,536,1.654,539,4.412,540,1.654,541,1.654,542,4.11,619,1.654,620,1.654,621,1.654,622,1.654,623,3.72,624,4.222,639,1.654,640,1.654,641,1.654,642,4.585,820,1.496,850,3.121,851,1.895,852,1.895,853,1.895]],["title/properties.html",[37,1.328,646,2.996]],["body/properties.html",[10,0.012,14,0.01,15,0.01,37,1.564,210,4.234,782,5.084,793,5.084,816,4.598,838,5.084,841,5.084,854,5.823,855,5.823,856,5.823,857,5.823]],["title/miscellaneous/typealiases.html",[722,1.953,858,4.947]],["body/miscellaneous/typealiases.html",[6,0.414,10,0.012,14,0.009,15,0.009,46,0.534,85,4.207,105,2.08,394,2.977,397,3.979,401,6.427,402,5.778,404,6.167,405,3.838,439,6.167,443,4.271,455,5.129,458,5.129,461,5.129,464,5.778,491,3.838,495,5.129,722,2.501,859,4.395,860,5.875,861,7.958,862,4.395]],["title/unit-test.html",[834,3.489,835,3.489]],["body/unit-test.html",[4,0.14,10,0.012,14,0.009,15,0.009,524,7.199,761,3.702,834,3.702,835,3.702,863,4.689,864,4.689,865,4.689,866,4.689,867,4.689,868,6.131,869,4.689,870,6.131,871,4.689,872,4.689,873,4.689,874,4.689,875,4.689,876,4.689,877,4.689,878,4.689,879,4.689,880,4.689,881,4.689,882,4.689]],["title/miscellaneous/variables.html",[722,1.953,883,4.319]],["body/miscellaneous/variables.html",[6,0.241,10,0.013,13,1.426,14,0.006,15,0.006,32,1.92,33,2.231,34,4.326,42,2.38,43,2.38,44,2.38,46,0.879,78,2.301,95,2.917,105,1.209,128,2.231,174,5.412,175,4.732,190,2.231,209,1.625,520,2.231,555,2.018,573,2.231,577,2.231,722,1.454,763,3.463,770,2.231,816,2.018,883,2.231,884,3.966,885,2.555,886,3.966,887,3.966,888,3.966,889,3.966,890,2.555,891,3.966,892,3.966,893,3.966,894,2.555,895,3.966,896,2.555,897,4.861,898,3.966,899,2.555,900,3.966,901,2.555,902,2.555,903,2.555,904,2.555,905,2.555,906,2.555,907,2.555,908,3.966,909,3.966,910,3.966,911,5.479,912,3.966,913,3.966,914,2.555,915,3.966,916,2.555,917,2.555,918,2.555,919,2.555,920,2.555,921,2.555,922,2.555,923,2.555,924,2.555,925,2.555]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":594,"title":{},"body":{"classes/UserEntity.html":{}}}],["0.0.1",{"_index":855,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["0.3.11",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["0/0",{"_index":874,"title":{},"body":{"unit-test.html":{}}}],["1",{"_index":224,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"miscellaneous/enumerations.html":{}}}],["1.0.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["1.0.32",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":524,"title":{},"body":{"classes/RoleEntity.html":{},"unit-test.html":{}}}],["11/11",{"_index":873,"title":{},"body":{"unit-test.html":{}}}],["14",{"_index":597,"title":{},"body":{"classes/UserEntity.html":{}}}],["15.1.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":850,"title":{},"body":{"overview.html":{}}}],["17.6.2",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["17.7.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["17/17",{"_index":871,"title":{},"body":{"unit-test.html":{}}}],["18",{"_index":852,"title":{},"body":{"overview.html":{}}}],["19/19",{"_index":868,"title":{},"body":{"unit-test.html":{}}}],["1})@type(undefined",{"_index":214,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{}}}],["2",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.1.3",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":869,"title":{},"body":{"unit-test.html":{}}}],["200",{"_index":219,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["21",{"_index":853,"title":{},"body":{"overview.html":{}}}],["22/22",{"_index":877,"title":{},"body":{"unit-test.html":{}}}],["29/29",{"_index":878,"title":{},"body":{"unit-test.html":{}}}],["3.0.2",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["3.252.0",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["30d",{"_index":615,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["4",{"_index":851,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":875,"title":{},"body":{"unit-test.html":{}}}],["5100",{"_index":743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.1.4",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["6100",{"_index":738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6101",{"_index":740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6404",{"_index":754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6500",{"_index":751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7.6.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":616,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["8/8",{"_index":879,"title":{},"body":{"unit-test.html":{}}}],["9",{"_index":564,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["9.0.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":870,"title":{},"body":{"unit-test.html":{}}}],["abortmultipart",{"_index":235,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["abortmultipart(path",{"_index":246,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["abstract",{"_index":798,"title":{},"body":{"index.html":{}}}],["access_token_id",{"_index":581,"title":{},"body":{"classes/UserEntity.html":{}}}],["accesstoken",{"_index":574,"title":{},"body":{"classes/UserEntity.html":{}}}],["acl",{"_index":390,"title":{},"body":{"interfaces/IAwsS3PutItemOptions.html":{}}}],["aes256decrypt",{"_index":313,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["aes256decrypt(encrepted",{"_index":472,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["aes256decrypt(encrypted",{"_index":323,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["aes256encrypt",{"_index":314,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["aes256encrypt(data",{"_index":325,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["aliases",{"_index":859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apiproperty({description",{"_index":559,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty({example",{"_index":208,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty({oneof",{"_index":227,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["app",{"_index":813,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["applanguage",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":17,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["asc",{"_index":747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":67,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"classes/SettingService.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{}}}],["attempt.dto.ts",{"_index":628,"title":{},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["audience",{"_index":481,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["auth_jwt_access_token_error",{"_index":737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_jwt_at_strategy_name",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_jwt_refresh_token_error",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_jwt_rt_strategy_name",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authaccesstokenentity",{"_index":30,"title":{"classes/AuthAccessTokenEntity.html":{}},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"classes/UserEntity.html":{}}}],["authaccesstokenentityname",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authaccesstokenprotected",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authaccesstokenrepository",{"_index":72,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["authaccesstokenservice",{"_index":62,"title":{"injectables/AuthAccessTokenService.html":{}},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"overview.html":{}}}],["authentication",{"_index":782,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authentityabstract",{"_index":36,"title":{"classes/AuthEntityAbstract.html":{}},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["authjwtaccesstokenguard",{"_index":88,"title":{"injectables/AuthJwtAccessTokenGuard.html":{}},"body":{"injectables/AuthJwtAccessTokenGuard.html":{}}}],["authjwtaccesstokenstrategy",{"_index":98,"title":{"injectables/AuthJwtAccessTokenStrategy.html":{}},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"overview.html":{}}}],["authjwtmodule",{"_index":107,"title":{"modules/AuthJwtModule.html":{}},"body":{"modules/AuthJwtModule.html":{},"modules/CommonModule.html":{},"modules/RoutesPublicModule.html":{},"modules.html":{},"overview.html":{}}}],["authjwtpayload",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authjwtrefreshtokenguard",{"_index":119,"title":{"injectables/AuthJwtRefreshTokenGuard.html":{}},"body":{"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["authjwtrefreshtokenstrategy",{"_index":114,"title":{"injectables/AuthJwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"overview.html":{}}}],["authjwtrepositorymodule",{"_index":112,"title":{"modules/AuthJwtRepositoryModule.html":{}},"body":{"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["authjwttoken",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":856,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":816,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["authorization.split",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorizations",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorizations.length",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorizations[1",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authrefreshtokenentity",{"_index":127,"title":{"classes/AuthRefreshTokenEntity.html":{}},"body":{"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"classes/UserEntity.html":{}}}],["authrefreshtokenentityname",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authrefreshtokenprotected",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authrefreshtokenrepository",{"_index":125,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"injectables/AuthRefreshTokenService.html":{},"overview.html":{}}}],["authrefreshtokenservice",{"_index":115,"title":{"injectables/AuthRefreshTokenService.html":{}},"body":{"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"overview.html":{}}}],["authservice",{"_index":103,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["authupdaterefreshtokendto",{"_index":139,"title":{"classes/AuthUpdateRefreshTokenDto.html":{}},"body":{"injectables/AuthRefreshTokenService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["available",{"_index":849,"title":{},"body":{"modules.html":{}}}],["aws",{"_index":211,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"dependencies.html":{}}}],["aws_photo_entity_name",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awsmodule",{"_index":181,"title":{"modules/AwsModule.html":{}},"body":{"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["awsphotoentity",{"_index":189,"title":{"classes/AwsPhotoEntity.html":{}},"body":{"classes/AwsPhotoEntity.html":{},"classes/UserEntity.html":{}}}],["awsrepositorymodule",{"_index":186,"title":{"modules/AwsRepositoryModule.html":{}},"body":{"modules/AwsModule.html":{},"modules/AwsRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["awss3multipartpartsserialization",{"_index":204,"title":{"classes/AwsS3MultipartPartsSerialization.html":{}},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["awss3multipartserialization",{"_index":215,"title":{"classes/AwsS3MultipartSerialization.html":{}},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["awss3serialization",{"_index":230,"title":{"classes/AwsS3Serialization.html":{}},"body":{"classes/AwsS3Serialization.html":{}}}],["awss3service",{"_index":187,"title":{"injectables/AwsS3Service.html":{}},"body":{"modules/AwsModule.html":{},"injectables/AwsS3Service.html":{},"injectables/HealthAwsS3Indicator.html":{},"overview.html":{}}}],["b.mohamed",{"_index":857,"title":{},"body":{"properties.html":{}}}],["base64decrypt",{"_index":315,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64decrypt(data",{"_index":326,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64encrypt",{"_index":316,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64encrypt(data",{"_index":327,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64validate",{"_index":317,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base64validate(clientbasictoken",{"_index":328,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["base_url",{"_index":197,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["baseurl",{"_index":191,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{}}}],["bcrypt",{"_index":336,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{},"dependencies.html":{}}}],["bcrypt(passwordstring",{"_index":341,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["bcryptcomapre",{"_index":337,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["bcryptcomapre(passwordstring",{"_index":343,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["before_expiration",{"_index":132,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["beforeexpiration",{"_index":129,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["beforeinsert()@beforeupdate",{"_index":608,"title":{},"body":{"classes/UserEntity.html":{}}}],["beforesave",{"_index":579,"title":{},"body":{"classes/UserEntity.html":{}}}],["blob",{"_index":261,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["boilerplate",{"_index":783,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["bootstrap",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["branches",{"_index":865,"title":{},"body":{"unit-test.html":{}}}],["browse",{"_index":847,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":844,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":233,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["buffer",{"_index":258,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["c:/users/lenovo/desktop/programmation/back/nestjs/production/authentication/src/common/helpers/services/helper.encryption.service.ts",{"_index":867,"title":{},"body":{"unit-test.html":{}}}],["c:/users/lenovo/desktop/programmation/back/nestjs/production/authentication/src/common/helpers/services/helper.hash.service.ts",{"_index":872,"title":{},"body":{"unit-test.html":{}}}],["c:/users/lenovo/desktop/programmation/back/nestjs/production/authentication/src/common/helpers/services/helper.string.service.ts",{"_index":876,"title":{},"body":{"unit-test.html":{}}}],["censor",{"_index":357,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["censor(value",{"_index":365,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["centralized",{"_index":794,"title":{},"body":{"index.html":{}}}],["character",{"_index":566,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["checkawshealth",{"_index":304,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkconnection",{"_index":236,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["checkemail",{"_index":358,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkemail(email",{"_index":366,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordmedium",{"_index":359,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordmedium(password",{"_index":368,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordstrong",{"_index":360,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordstrong(password",{"_index":369,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordweak",{"_index":361,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checkpasswordweak(password",{"_index":370,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checksafestring",{"_index":362,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["checksafestring(text",{"_index":371,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["chunk'})@type(undefined",{"_index":223,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["class",{"_index":29,"title":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"classes/UserRegisterDto.html":{}},"body":{"dependencies.html":{}}}],["classdecorator",{"_index":776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":31,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"classes/UserRegisterDto.html":{},"overview.html":{}}}],["clean",{"_index":789,"title":{},"body":{"index.html":{}}}],["clientbasictoken",{"_index":330,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["cluster_appmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule",{"_index":108,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule_exports",{"_index":109,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule_imports",{"_index":111,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtmodule_providers",{"_index":110,"title":{},"body":{"modules/AuthJwtModule.html":{},"overview.html":{}}}],["cluster_authjwtrepositorymodule",{"_index":122,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["cluster_authjwtrepositorymodule_exports",{"_index":124,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["cluster_authjwtrepositorymodule_providers",{"_index":123,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{},"overview.html":{}}}],["cluster_awsmodule",{"_index":182,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_exports",{"_index":185,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_imports",{"_index":184,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_awsmodule_providers",{"_index":183,"title":{},"body":{"modules/AwsModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":267,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":268,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":273,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":275,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":274,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":307,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_exports",{"_index":310,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_imports",{"_index":309,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_healthmodule_providers",{"_index":308,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_helpermodule",{"_index":351,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_helpermodule_exports",{"_index":353,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_helpermodule_providers",{"_index":352,"title":{},"body":{"modules/HelperModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":526,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":527,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_routesmodule",{"_index":536,"title":{},"body":{"modules/RoutesModule.html":{},"overview.html":{}}}],["cluster_routesmodule_imports",{"_index":537,"title":{},"body":{"modules/RoutesModule.html":{}}}],["cluster_routespublicmodule",{"_index":540,"title":{},"body":{"modules/RoutesPublicModule.html":{},"overview.html":{}}}],["cluster_routespublicmodule_imports",{"_index":541,"title":{},"body":{"modules/RoutesPublicModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":619,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":621,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":620,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":622,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userrepositorymodule",{"_index":639,"title":{},"body":{"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["cluster_userrepositorymodule_exports",{"_index":640,"title":{},"body":{"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["cluster_userrepositorymodule_providers",{"_index":641,"title":{},"body":{"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["code",{"_index":790,"title":{},"body":{"index.html":{}}}],["code.constant.ts",{"_index":726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code.enum.constant.ts",{"_index":729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column({name",{"_index":47,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{}}}],["column({nullable",{"_index":199,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["column({type",{"_index":587,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({unique",{"_index":521,"title":{},"body":{"classes/RoleEntity.html":{}}}],["command",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["commander",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":22,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["complete_url",{"_index":198,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["completedpart",{"_index":248,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["completemultipart",{"_index":237,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["completemultipart(path",{"_index":247,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["completeurl",{"_index":192,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{}}}],["compose",{"_index":809,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":102,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"classes/SettingService.html":{}}}],["configuration",{"_index":795,"title":{},"body":{"index.html":{}}}],["const",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"classes/SettingService.html":{},"injectables/UserService.html":{}}}],["constructor(authaccesstokenrepository",{"_index":71,"title":{},"body":{"injectables/AuthAccessTokenService.html":{}}}],["constructor(authrefreshtokenrepository",{"_index":137,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{}}}],["constructor(awss3service",{"_index":300,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["constructor(configservice",{"_index":101,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"classes/SettingService.html":{}}}],["constructor(jwtservice",{"_index":321,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["constructor(userrepository",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["contact",{"_index":843,"title":{},"body":{"index.html":{}}}],["contains",{"_index":561,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["content",{"_index":257,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/UserController.html":{},"controllers/UserPublicController.html":{}},"body":{}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"controllers/UserController.html":{},"controllers/UserPublicController.html":{},"overview.html":{}}}],["coverage",{"_index":863,"title":{},"body":{"unit-test.html":{}}}],["create",{"_index":66,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["create(data",{"_index":75,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["created_at",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdatecolumn({name",{"_index":56,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["createmany",{"_index":413,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["createmany(data",{"_index":437,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["createmultipart",{"_index":238,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["createmultipart(filename",{"_index":249,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["createparamdecorator",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpassword",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["createpassword(password",{"_index":387,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["createpassword(passwordstring",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["createpayloadtoken",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["createpayloadtoken(data",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["createtypeormoptions",{"_index":285,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"interfaces/IDatabaseOptionsService.html":{}}}],["crypto",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":78,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":788,"title":{},"body":{"index.html":{}}}],["database_created_at_field_name",{"_index":42,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["database_delete_at_field_name",{"_index":43,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["database_update_at_field_name",{"_index":44,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["databaseentity",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databaseentity(options",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databaseentityabstract",{"_index":87,"title":{"classes/DatabaseEntityAbstract.html":{}},"body":{"classes/AuthEntityAbstract.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["databasemodel",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasemodel(entity",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["databasemodule",{"_index":269,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseoptionsservice",{"_index":276,"title":{"injectables/DatabaseOptionsService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"overview.html":{}}}],["date",{"_index":55,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/DatabaseEntityAbstract.html":{},"interfaces/IAuthPayloadOptions.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["debug",{"_index":280,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["decodetoken",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["decodetoken(token",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["decorators",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/DatabaseEntityAbstract.html":{},"controllers/HealthController.html":{},"classes/RoleEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{}}}],["decrypttoken",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["decrypttoken(payload",{"_index":388,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["decrypttoken(undefined",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["default",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseOptionsService.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["deleted_at",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedatecolumn({name",{"_index":57,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["deletefolder",{"_index":239,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deletefolder(directory",{"_index":251,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteiteminbucket",{"_index":240,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteiteminbucket(filename",{"_index":253,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteitemsinbucket",{"_index":241,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deleteitemsinbucket(filenames",{"_index":254,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["deletemany",{"_index":414,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deletemany(find",{"_index":438,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deletemanybyid",{"_index":415,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deletemanybyid(id",{"_index":441,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deleteone",{"_index":416,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deleteone(find",{"_index":442,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["deleteonebyid",{"_index":417,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["deleteonebyid(id",{"_index":444,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":19,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/RoleModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":210,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/UserCreateDto.html":{},"properties.html":{}}}],["development",{"_index":826,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":801,"title":{},"body":{"index.html":{}}}],["directory",{"_index":252,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["docker",{"_index":808,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":807,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":791,"title":{},"body":{"index.html":{}}}],["dynamicmodule",{"_index":534,"title":{},"body":{"modules/RouterModule.html":{}}}],["e2e",{"_index":837,"title":{},"body":{"index.html":{}}}],["ecryption_key",{"_index":53,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["email",{"_index":367,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["en",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encrepted",{"_index":473,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["encrypted",{"_index":324,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["encrypted_token",{"_index":48,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryptedtoken",{"_index":38,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryption_iv",{"_index":52,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryptioniv",{"_index":39,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encryptionkey",{"_index":40,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["encrypttoken",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["encrypttoken(payload",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["end",{"_index":812,"title":{},"body":{"index.html":{}}}],["entity",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["entityoptions",{"_index":775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum_auth_status_code_error",{"_index":724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_error_status_code_error",{"_index":727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_pagination_sort_type",{"_index":730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_request_status_code_error",{"_index":732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum_user_status_code_error",{"_index":734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":723,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":281,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["erd",{"_index":822,"title":{},"body":{"index.html":{}}}],["err",{"_index":97,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["error",{"_index":94,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["error_request_timeout",{"_index":745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_service_unavailable",{"_index":744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_unknown",{"_index":742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["etag",{"_index":206,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{}}}],["example",{"_index":567,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["excludeids",{"_index":398,"title":{},"body":{"interfaces/IDatabaseExistOptions.html":{}}}],["executioncontext",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existemail",{"_index":501,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existemail(email",{"_index":509,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existphonenumber",{"_index":502,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existphonenumber(phonenumber",{"_index":510,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":418,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["exists(find",{"_index":445,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["existusername",{"_index":503,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["existusername(username",{"_index":512,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["expire",{"_index":614,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["expiredin",{"_index":479,"title":{},"body":{"interfaces/IHelperJwtOptions.html":{}}}],["exports",{"_index":118,"title":{},"body":{"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{}}}],["express",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":35,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/HealthAwsS3Indicator.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IHelperJwtOptions.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["faker",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":51,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["features",{"_index":785,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"unit-test.html":{}}}],["filename",{"_index":193,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["filenames",{"_index":255,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["find",{"_index":440,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findall",{"_index":419,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findall(find",{"_index":446,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":420,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findone(find",{"_index":448,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyemail",{"_index":504,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyemail(email",{"_index":514,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyid",{"_index":421,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["findonebyid(id",{"_index":449,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["findonebytoken",{"_index":68,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["findonebytoken(token",{"_index":81,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["findonebyusername",{"_index":505,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findonebyusername(username",{"_index":515,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["findoptionsrelations",{"_index":406,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{}}}],["firstname",{"_index":553,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserEntity.html":{}}}],["fk_auth_jwt_access_token",{"_index":584,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_auth_jwt_refresh_token",{"_index":603,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_aws_photo_user",{"_index":600,"title":{},"body":{"classes/UserEntity.html":{}}}],["fk_role_user",{"_index":606,"title":{},"body":{"classes/UserEntity.html":{}}}],["foreignkeyconstraintname",{"_index":583,"title":{},"body":{"classes/UserEntity.html":{}}}],["forroot",{"_index":533,"title":{},"body":{"modules/RouterModule.html":{}}}],["front",{"_index":811,"title":{},"body":{"index.html":{}}}],["functions",{"_index":761,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["get('hello",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["getappname",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["getiteminbucket",{"_index":242,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["getiteminbucket(filename",{"_index":256,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["getmaxpasswordattempt",{"_index":498,"title":{},"body":{"interfaces/ISettingService.html":{},"classes/SettingService.html":{}}}],["getting",{"_index":780,"title":{"index.html":{}},"body":{}}],["gettotal",{"_index":422,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["gettotal(find",{"_index":450,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["google",{"_index":818,"title":{},"body":{"index.html":{}}}],["graph",{"_index":848,"title":{},"body":{"modules.html":{}}}],["handled",{"_index":821,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":92,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["handlerequest(err",{"_index":93,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["hashone",{"_index":350,"title":{},"body":{"injectables/HelperHashService.html":{}}}],["hashtwo",{"_index":349,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["hasone",{"_index":477,"title":{},"body":{"interfaces/IHelperHashService.html":{}}}],["headerapikey",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthawss3indicator",{"_index":295,"title":{"injectables/HealthAwsS3Indicator.html":{}},"body":{"injectables/HealthAwsS3Indicator.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["healthcheck()@get('/aws",{"_index":305,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":302,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/RoutesModule.html":{}}}],["healthindicator",{"_index":298,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["healthmodule",{"_index":306,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["helperencryptionservice",{"_index":152,"title":{"injectables/HelperEncryptionService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["helperhashservice",{"_index":153,"title":{"injectables/HelperHashService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"overview.html":{}}}],["helpermodule",{"_index":113,"title":{"modules/HelperModule.html":{}},"body":{"modules/AuthJwtModule.html":{},"modules/CommonModule.html":{},"modules/HelperModule.html":{},"modules.html":{},"overview.html":{}}}],["helperstringservice",{"_index":354,"title":{"injectables/HelperStringService.html":{}},"body":{"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"overview.html":{}}}],["host",{"_index":282,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["iauthaccesstokenservice",{"_index":378,"title":{"interfaces/IAuthAccessTokenService.html":{}},"body":{"interfaces/IAuthAccessTokenService.html":{}}}],["iauthpayloadoptions",{"_index":159,"title":{"interfaces/IAuthPayloadOptions.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthService.html":{}}}],["iauthrefreshtokenservice",{"_index":383,"title":{"interfaces/IAuthRefreshTokenService.html":{}},"body":{"interfaces/IAuthRefreshTokenService.html":{}}}],["iauthservice",{"_index":385,"title":{"interfaces/IAuthService.html":{}},"body":{"interfaces/IAuthService.html":{}}}],["iawss3putitemoptions",{"_index":250,"title":{"interfaces/IAwsS3PutItemOptions.html":{}},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{}}}],["iawss3service",{"_index":392,"title":{"interfaces/IAwsS3Service.html":{}},"body":{"interfaces/IAwsS3Service.html":{}}}],["id",{"_index":45,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/DatabaseEntityAbstract.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["idatabasecreatemanyoptions",{"_index":860,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idatabasecreateoptions",{"_index":77,"title":{"interfaces/IDatabaseCreateOptions.html":{}},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasedeleteoptions",{"_index":443,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseexistoptions",{"_index":396,"title":{"interfaces/IDatabaseExistOptions.html":{}},"body":{"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasefindalloptions",{"_index":399,"title":{"interfaces/IDatabaseFindAllOptions.html":{}},"body":{"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasefindoneoptions",{"_index":82,"title":{"interfaces/IDatabaseFindOneOptions.html":{}},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["idatabasemanyoptions",{"_index":439,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseoptions",{"_index":397,"title":{},"body":{"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseoptionsservice",{"_index":408,"title":{"interfaces/IDatabaseOptionsService.html":{}},"body":{"interfaces/IDatabaseOptionsService.html":{}}}],["idatabaserepository",{"_index":411,"title":{"interfaces/IDatabaseRepository.html":{}},"body":{"interfaces/IDatabaseRepository.html":{}}}],["idatabaserestoremanyoptions",{"_index":455,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaserestoreoptions",{"_index":458,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabasesoftdeletemanyoptions",{"_index":461,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabasesoftdeleteoptions",{"_index":464,"title":{},"body":{"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["idatabaseupdateoptions",{"_index":85,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IDatabaseRepository.html":{},"miscellaneous/typealiases.html":{}}}],["ihelperencryptionservice",{"_index":469,"title":{"interfaces/IHelperEncryptionService.html":{}},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["ihelperhashservice",{"_index":474,"title":{"interfaces/IHelperHashService.html":{}},"body":{"interfaces/IHelperHashService.html":{}}}],["ihelperjwtoptions",{"_index":167,"title":{"interfaces/IHelperJwtOptions.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperJwtOptions.html":{}}}],["ihelperjwtverifyoptions",{"_index":170,"title":{"interfaces/IHelperJwtVerifyOptions.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{}}}],["ihelperrandomstringoptions",{"_index":374,"title":{"interfaces/IHelperRandomStringOptions.html":{}},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{}}}],["ihelperstringservice",{"_index":487,"title":{"interfaces/IHelperStringService.html":{}},"body":{"interfaces/IHelperStringService.html":{}}}],["implements",{"_index":549,"title":{},"body":{"classes/SettingService.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/RoleModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{}}}],["increasepasswordattempt",{"_index":506,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["increasepasswordattempt(user",{"_index":516,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"classes/RoleEntity.html":{},"classes/SettingService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index('access_token')@onetoone(undefined)@joincolumn({name",{"_index":580,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('email')@column({type",{"_index":585,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('is_active')@column({type",{"_index":588,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('lastname')@column({type",{"_index":590,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('password')@column({type",{"_index":591,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('password_attempt')@column({type",{"_index":592,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('phone_number')@column({name",{"_index":595,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('photo')@onetoone(undefined)@joincolumn({name",{"_index":598,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('refresh_token')@onetoone(undefined)@joincolumn({name",{"_index":601,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('role')@manytoone(undefined)@joincolumn({name",{"_index":604,"title":{},"body":{"classes/UserEntity.html":{}}}],["index('username')@column({type",{"_index":607,"title":{},"body":{"classes/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{}}}],["init",{"_index":212,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"injectables/UserService.html":{}},"body":{}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":823,"title":{},"body":{"index.html":{}}}],["int",{"_index":133,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{},"classes/UserEntity.html":{}}}],["integration",{"_index":796,"title":{},"body":{"index.html":{}}}],["interface",{"_index":377,"title":{"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{}},"body":{}}],["interfaces",{"_index":379,"title":{},"body":{"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"overview.html":{}}}],["ipaginationoptions",{"_index":400,"title":{"interfaces/IPaginationOptions.html":{}},"body":{"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IPaginationOptions.html":{}}}],["ipaginationsort",{"_index":495,"title":{},"body":{"interfaces/IPaginationOptions.html":{},"miscellaneous/typealiases.html":{}}}],["irunning",{"_index":825,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":589,"title":{},"body":{"classes/UserEntity.html":{}}}],["isactive",{"_index":575,"title":{},"body":{"classes/UserEntity.html":{}}}],["isettingservice",{"_index":496,"title":{"interfaces/ISettingService.html":{}},"body":{"interfaces/ISettingService.html":{},"classes/SettingService.html":{}}}],["ishealthy",{"_index":299,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["ishealthy(key",{"_index":301,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["isnumber()@type(undefined)@isnotempty",{"_index":629,"title":{},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["isoptional",{"_index":570,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["issuer",{"_index":482,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["iuserservice",{"_index":499,"title":{"interfaces/IUserService.html":{}},"body":{"interfaces/IUserService.html":{}}}],["iv",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jenkinsfile",{"_index":819,"title":{},"body":{"index.html":{}}}],["joi",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":402,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["js",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["js/faker",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":802,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":706,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["jwt/auth.jwt.module.ts",{"_index":116,"title":{},"body":{"modules/AuthJwtModule.html":{}}}],["jwt/constants/auth.constant.ts",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/constants/enum.status",{"_index":736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jwt/decorators/auth.jwt.decorator.ts",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jwt/dto/auth.refresh",{"_index":177,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{}}}],["jwt/guards/access",{"_index":89,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{}}}],["jwt/guards/refresh",{"_index":120,"title":{},"body":{"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["jwt/interfaces/auth.access",{"_index":380,"title":{},"body":{"interfaces/IAuthAccessTokenService.html":{}}}],["jwt/interfaces/auth.interface.ts",{"_index":382,"title":{},"body":{"interfaces/IAuthPayloadOptions.html":{}}}],["jwt/interfaces/auth.refresh",{"_index":384,"title":{},"body":{"interfaces/IAuthRefreshTokenService.html":{}}}],["jwt/interfaces/auth.service.interface.ts",{"_index":386,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["jwt/repository/auth.jwt.repository.module.ts",{"_index":126,"title":{},"body":{"modules/AuthJwtRepositoryModule.html":{}}}],["jwt/repository/entities/abstract/auth.entity.abstract.ts",{"_index":86,"title":{},"body":{"classes/AuthEntityAbstract.html":{}}}],["jwt/repository/entities/auth.access",{"_index":33,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"miscellaneous/variables.html":{}}}],["jwt/repository/entities/auth.refresh",{"_index":128,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{},"miscellaneous/variables.html":{}}}],["jwt/services/auth.access",{"_index":64,"title":{},"body":{"injectables/AuthAccessTokenService.html":{}}}],["jwt/services/auth.refresh",{"_index":135,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{}}}],["jwt/services/auth.service.ts",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_access_token",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_refresh_token",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_token",{"_index":54,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["jwtaccesstoken",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdecrypt",{"_index":318,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtdecrypt(jwtencrypted",{"_index":331,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtencrypt",{"_index":319,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtencrypt(payload",{"_index":333,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtencrypted",{"_index":332,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtrefreshtoken",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":322,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["jwttoken",{"_index":41,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{}}}],["jwtverify",{"_index":320,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["jwtverify(token",{"_index":334,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["key",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["last",{"_index":225,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["lastname",{"_index":554,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserEntity.html":{}}}],["lenght",{"_index":489,"title":{},"body":{"interfaces/IHelperStringService.html":{}}}],["length",{"_index":222,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"classes/UserEntity.html":{}}}],["license",{"_index":838,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":842,"title":{},"body":{"index.html":{}}}],["limit",{"_index":805,"title":{},"body":{"index.html":{}}}],["lines",{"_index":866,"title":{},"body":{"unit-test.html":{}}}],["link",{"_index":810,"title":{},"body":{"index.html":{}}}],["listbucket",{"_index":243,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["listtiteminbucket",{"_index":244,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["listtiteminbucket(prifix",{"_index":262,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["literal",{"_index":494,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["lodash",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":631,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["login(userlogindto",{"_index":633,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["logindate",{"_index":179,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{},"interfaces/IAuthPayloadOptions.html":{}}}],["matching",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":220,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["maxpartnumber",{"_index":216,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["metadata",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RouterModule.html":{},"classes/SettingService.html":{},"classes/UserEntity.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{}}}],["mime",{"_index":194,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{}}}],["miscellaneous",{"_index":722,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":841,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mode",{"_index":830,"title":{},"body":{"index.html":{}}}],["model",{"_index":423,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/AwsRepositoryModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/RequestModule.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{}},"body":{}}],["modules",{"_index":18,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/AwsRepositoryModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/RequestModule.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["multipart'})@type(undefined",{"_index":213,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["mysql",{"_index":797,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":436,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["name",{"_index":60,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/RoleEntity.html":{},"classes/SettingService.html":{},"classes/UserEntity.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":696,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs",{"_index":699,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bullmq",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":880,"title":{},"body":{"unit-test.html":{}}}],["ngrx/store",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["notbefore",{"_index":480,"title":{},"body":{"interfaces/IHelperJwtOptions.html":{}}}],["npm",{"_index":824,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":50,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":131,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthService.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperStringService.html":{},"classes/UserEntity.html":{},"classes/UserPasswordAttemptDto.html":{}}}],["oauth2",{"_index":817,"title":{},"body":{"index.html":{}}}],["objectcannedacl",{"_index":391,"title":{},"body":{"interfaces/IAwsS3PutItemOptions.html":{}}}],["omit",{"_index":395,"title":{},"body":{"interfaces/IDatabaseCreateOptions.html":{}}}],["onetoone(undefined",{"_index":202,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["optional",{"_index":74,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IUserService.html":{},"classes/SettingService.html":{},"classes/UserLoginDto.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":76,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options.service.interface.ts",{"_index":410,"title":{},"body":{"interfaces/IDatabaseOptionsService.html":{}}}],["options.service.ts",{"_index":279,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["ours",{"_index":329,"title":{},"body":{"injectables/HelperEncryptionService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["out",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/RoleModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["overview",{"_index":820,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":646,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paging",{"_index":492,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["parameterdecorator",{"_index":779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":73,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/SettingService.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":221,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["parth",{"_index":266,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["partnumber",{"_index":207,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["parts",{"_index":217,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["passport",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":283,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperStringService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["password_attempt",{"_index":593,"title":{},"body":{"classes/UserEntity.html":{}}}],["passwordattempt",{"_index":576,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserPasswordAttemptDto.html":{}}}],["passwordhashed",{"_index":344,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["passwordsaltlength",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordstring",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["path",{"_index":195,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{}}}],["path_with_file_name",{"_index":200,"title":{},"body":{"classes/AwsPhotoEntity.html":{}}}],["pathwithfilename",{"_index":196,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"classes/AwsS3Serialization.html":{}}}],["payload",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{}}}],["payloadhashed",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["phone_number",{"_index":596,"title":{},"body":{"classes/UserEntity.html":{}}}],["phonenumber",{"_index":511,"title":{},"body":{"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["photo",{"_index":577,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["photo_id",{"_index":599,"title":{},"body":{"classes/UserEntity.html":{}}}],["pick",{"_index":401,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["port",{"_index":284,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["post('login",{"_index":634,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["post('register",{"_index":637,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["prefix",{"_index":376,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{}}}],["prifix",{"_index":263,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":59,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["private",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{}}}],["production",{"_index":832,"title":{},"body":{"index.html":{}}}],["project",{"_index":839,"title":{},"body":{"index.html":{}}}],["promise",{"_index":80,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"classes/SettingService.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IPaginationOptions.html":{},"classes/RoleEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"properties.html":{}}}],["providers",{"_index":117,"title":{},"body":{"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{}}}],["pwdhashed",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["pwdstring",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["r",{"_index":452,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["random",{"_index":363,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["random(lenght",{"_index":490,"title":{},"body":{"interfaces/IHelperStringService.html":{}}}],["random(length",{"_index":373,"title":{},"body":{"injectables/HelperStringService.html":{}}}],["randomreference",{"_index":364,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["randomreference(length",{"_index":375,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["randomsalt",{"_index":338,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["randomsalt(length",{"_index":345,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["rate",{"_index":804,"title":{},"body":{"index.html":{}}}],["raw",{"_index":424,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["raw(rawoperation",{"_index":451,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["rawoperation",{"_index":453,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["readable",{"_index":259,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["readablestream",{"_index":260,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["readonly",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["record",{"_index":105,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":582,"title":{},"body":{"classes/UserEntity.html":{}}}],["reflect",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":613,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["refresh_token_id",{"_index":602,"title":{},"body":{"classes/UserEntity.html":{}}}],["refreshtoken",{"_index":578,"title":{},"body":{"classes/UserEntity.html":{}}}],["register",{"_index":632,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["register(userregisterdto",{"_index":635,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["relational",{"_index":787,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":800,"title":{},"body":{"index.html":{}}}],["release1",{"_index":793,"title":{},"body":{"index.html":{},"properties.html":{}}}],["remember_me_expired",{"_index":134,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["rememberme",{"_index":180,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{},"classes/UserLoginDto.html":{}}}],["remembermeexpired",{"_index":130,"title":{},"body":{"classes/AuthRefreshTokenEntity.html":{}}}],["rememeberme",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["rename",{"_index":814,"title":{},"body":{"index.html":{}}}],["repo",{"_index":815,"title":{},"body":{"index.html":{}}}],["repository",{"_index":799,"title":{},"body":{"index.html":{}}}],["request_validation_error",{"_index":750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestmodule",{"_index":270,"title":{"modules/RequestModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/RequestModule.html":{},"modules.html":{},"overview.html":{}}}],["required",{"_index":556,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{}}}],["reset",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/RoleModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"overview.html":{}}}],["resetpasswordattempt",{"_index":507,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["resetpasswordattempt(id",{"_index":517,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["restoremany",{"_index":425,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoremany(find",{"_index":454,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoremanybyid",{"_index":426,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoremanybyid(id",{"_index":456,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreone",{"_index":427,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreone(find",{"_index":457,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreonebyid",{"_index":428,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["restoreonebyid(id",{"_index":459,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["results",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"modules/AwsModule.html":{},"classes/AwsPhotoEntity.html":{},"modules/AwsRepositoryModule.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/DatabaseEntityAbstract.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"modules/HelperModule.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RequestModule.html":{},"classes/RoleEntity.html":{},"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules/RouterModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"classes/SettingModule.html":{},"classes/SettingService.html":{},"controllers/UserController.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{},"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthAccessTokenService.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"controllers/HealthController.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseOptionsService.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{},"interfaces/ISettingService.html":{},"interfaces/IUserService.html":{},"modules/RouterModule.html":{},"classes/SettingService.html":{},"classes/UserEntity.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":555,"title":{},"body":{"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["role_entity_name",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role_id",{"_index":605,"title":{},"body":{"classes/UserEntity.html":{}}}],["roleentity",{"_index":519,"title":{"classes/RoleEntity.html":{}},"body":{"classes/RoleEntity.html":{}}}],["rolemodule",{"_index":525,"title":{"modules/RoleModule.html":{}},"body":{"modules/RoleModule.html":{},"modules/RoutesPublicModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepositorymodule",{"_index":528,"title":{"modules/RoleRepositoryModule.html":{}},"body":{"modules/RoleModule.html":{},"modules/RoleRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["routermodule",{"_index":23,"title":{"modules/RouterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RouterModule.html":{},"modules.html":{},"overview.html":{}}}],["routesmodule",{"_index":535,"title":{"modules/RoutesModule.html":{}},"body":{"modules/RoutesModule.html":{},"modules.html":{},"overview.html":{}}}],["routespublicmodule",{"_index":539,"title":{"modules/RoutesPublicModule.html":{}},"body":{"modules/RoutesPublicModule.html":{},"modules.html":{},"overview.html":{}}}],["run",{"_index":827,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":713,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["s3",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["s3.indicator.ts",{"_index":297,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["s3client",{"_index":234,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["safe",{"_index":485,"title":{},"body":{"interfaces/IHelperRandomStringOptions.html":{}}}],["salt",{"_index":342,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sdk/client",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["secretkey",{"_index":483,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["select",{"_index":403,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{}}}],["service.interface.ts",{"_index":471,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperStringService.html":{}}}],["session",{"_index":404,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["settingmodule",{"_index":545,"title":{"classes/SettingModule.html":{}},"body":{"classes/SettingModule.html":{}}}],["settingservice",{"_index":547,"title":{"classes/SettingService.html":{}},"body":{"classes/SettingService.html":{}}}],["sha256",{"_index":339,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sha256(str",{"_index":346,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sha256compare",{"_index":340,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["sha256compare(hashone",{"_index":348,"title":{},"body":{"injectables/HelperHashService.html":{}}}],["sha256compare(hasone",{"_index":476,"title":{},"body":{"interfaces/IHelperHashService.html":{}}}],["signtoken",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["signtoken(payloadhashed",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["softdeletemany",{"_index":429,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeletemany(find",{"_index":460,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeletemanybyid",{"_index":430,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeletemanybyid(id",{"_index":462,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteone",{"_index":431,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteone(find",{"_index":463,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteonebyid",{"_index":432,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["softdeleteonebyid(id",{"_index":465,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["sort",{"_index":493,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["special",{"_index":565,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/.../app.constant.ts",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.access",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constant.ts",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.jwt.decorator.ts",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.refresh",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../aws.photo.entity.ts",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.decorator.ts",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../database.interface.ts",{"_index":861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../databast.constant.ts",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../enum.status",{"_index":725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../error.status",{"_index":728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pagination.enum.constant.ts",{"_index":731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../pagination.interface.ts",{"_index":862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../request.status",{"_index":733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.entity.ts",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.status",{"_index":735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.module.ts",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/constants/app.constant.ts",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/controllers/app.controllers.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{}}}],["src/common/auth",{"_index":32,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"modules/AuthJwtModule.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"modules/AuthJwtRepositoryModule.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/common/aws/aws.module.ts",{"_index":188,"title":{},"body":{"modules/AwsModule.html":{}}}],["src/common/aws/interfaces/aws.s3.interface.ts",{"_index":389,"title":{},"body":{"interfaces/IAwsS3PutItemOptions.html":{}}}],["src/common/aws/interfaces/aws.s3.service.interface.ts",{"_index":393,"title":{},"body":{"interfaces/IAwsS3Service.html":{}}}],["src/common/aws/repositories/aws.repository.module.ts",{"_index":203,"title":{},"body":{"modules/AwsRepositoryModule.html":{}}}],["src/common/aws/repositories/entities/aws.photo.entity.ts",{"_index":190,"title":{},"body":{"classes/AwsPhotoEntity.html":{},"miscellaneous/variables.html":{}}}],["src/common/aws/serializations/aws.s3.multipart.serialization.ts",{"_index":205,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{}}}],["src/common/aws/serializations/aws.s3.serialization.ts",{"_index":231,"title":{},"body":{"classes/AwsS3Serialization.html":{}}}],["src/common/aws/services/aws.s3.service.ts",{"_index":232,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["src/common/common.module.ts",{"_index":271,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/database/abstracts/database.entity.abstract.ts",{"_index":272,"title":{},"body":{"classes/DatabaseEntityAbstract.html":{}}}],["src/common/database/constants/databast.constant.ts",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/common/database/database.module.ts",{"_index":277,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/common/database/decorators/database.decorator.ts",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/database/interfaces/database",{"_index":409,"title":{},"body":{"interfaces/IDatabaseOptionsService.html":{}}}],["src/common/database/interfaces/database.interface.ts",{"_index":394,"title":{},"body":{"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindAllOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/database/interfaces/database.repository.interface.ts",{"_index":412,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["src/common/database/services/database",{"_index":278,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["src/common/error/constants/error.status",{"_index":741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/helper.module.ts",{"_index":355,"title":{},"body":{"modules/HelperModule.html":{}}}],["src/common/helpers/interfaces/helper.encryption",{"_index":470,"title":{},"body":{"interfaces/IHelperEncryptionService.html":{}}}],["src/common/helpers/interfaces/helper.hash",{"_index":475,"title":{},"body":{"interfaces/IHelperHashService.html":{}}}],["src/common/helpers/interfaces/helper.interface.ts",{"_index":478,"title":{},"body":{"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{}}}],["src/common/helpers/interfaces/helper.string",{"_index":488,"title":{},"body":{"interfaces/IHelperStringService.html":{}}}],["src/common/helpers/services/helper.encryption.service.ts",{"_index":312,"title":{},"body":{"injectables/HelperEncryptionService.html":{}}}],["src/common/helpers/services/helper.hash.service.ts",{"_index":335,"title":{},"body":{"injectables/HelperHashService.html":{}}}],["src/common/helpers/services/helper.string.service.ts",{"_index":356,"title":{},"body":{"injectables/HelperStringService.html":{}}}],["src/common/pagination/constants/pagination.enum.constant.ts",{"_index":746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/pagination/interfaces/pagination.interface.ts",{"_index":491,"title":{},"body":{"interfaces/IPaginationOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/request/constants/request.status",{"_index":749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/request/request.module.ts",{"_index":518,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/common/settings/interfaces/setting.service.interface.ts",{"_index":497,"title":{},"body":{"interfaces/ISettingService.html":{}}}],["src/common/settings/services/setting.service.ts",{"_index":548,"title":{},"body":{"classes/SettingService.html":{}}}],["src/common/settings/setting.module.ts",{"_index":546,"title":{},"body":{"classes/SettingModule.html":{}}}],["src/health/controllers/health.controller.ts",{"_index":303,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":311,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/health/indicators/health.aws",{"_index":296,"title":{},"body":{"injectables/HealthAwsS3Indicator.html":{}}}],["src/main.ts",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/modules/role/repository/entities/role.entity.ts",{"_index":520,"title":{},"body":{"classes/RoleEntity.html":{},"miscellaneous/variables.html":{}}}],["src/modules/role/repository/role.repository.module.ts",{"_index":530,"title":{},"body":{"modules/RoleRepositoryModule.html":{}}}],["src/modules/role/role.module.ts",{"_index":529,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/modules/user/constants/user.status",{"_index":752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/controllers/user.controller.ts",{"_index":551,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/controllers/user.public.controller.ts",{"_index":630,"title":{},"body":{"controllers/UserPublicController.html":{}}}],["src/modules/user/dto/user.create.dto.ts",{"_index":552,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/modules/user/dto/user.login.dto.ts",{"_index":611,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["src/modules/user/dto/user.password",{"_index":627,"title":{},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["src/modules/user/dto/user.register.dto.ts",{"_index":638,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/user/interfaces/user.service.interface.ts",{"_index":500,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/modules/user/repository/entities/user.entity.ts",{"_index":573,"title":{},"body":{"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/repository/user.repository.module.ts",{"_index":643,"title":{},"body":{"modules/UserRepositoryModule.html":{}}}],["src/modules/user/services/user.service.ts",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.module.ts",{"_index":625,"title":{},"body":{"modules/UserModule.html":{}}}],["src/router/router.module.ts",{"_index":531,"title":{},"body":{"modules/RouterModule.html":{}}}],["src/router/routes/routes.module.ts",{"_index":538,"title":{},"body":{"modules/RoutesModule.html":{}}}],["src/router/routes/routes.public.module.ts",{"_index":543,"title":{},"body":{"modules/RoutesPublicModule.html":{}}}],["start",{"_index":828,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":831,"title":{},"body":{"index.html":{}}}],["start:prodtests",{"_index":833,"title":{},"body":{"index.html":{}}}],["started",{"_index":781,"title":{"index.html":{}},"body":{}}],["startegy(ongoing",{"_index":803,"title":{},"body":{"index.html":{}}}],["statements",{"_index":864,"title":{},"body":{"unit-test.html":{}}}],["static",{"_index":532,"title":{},"body":{"modules/RouterModule.html":{}}}],["str",{"_index":347,"title":{},"body":{"injectables/HelperHashService.html":{},"interfaces/IHelperHashService.html":{}}}],["string",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"classes/RoleEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":560,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["subject",{"_index":484,"title":{},"body":{"interfaces/IHelperJwtVerifyOptions.html":{}}}],["support",{"_index":845,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":846,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":806,"title":{},"body":{"index.html":{}}}],["system",{"_index":784,"title":{},"body":{"index.html":{}}}],["t",{"_index":407,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["table",{"_index":882,"title":{},"body":{"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":881,"title":{},"body":{"unit-test.html":{}}}],["test",{"_index":835,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["test:unit",{"_index":836,"title":{},"body":{"index.html":{}}}],["text",{"_index":372,"title":{},"body":{"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{}}}],["this.configservice.get('app.env",{"_index":288,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('auth.password.salt",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('database.debug",{"_index":287,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.host",{"_index":289,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.name",{"_index":290,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.options",{"_index":291,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.password",{"_index":292,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.port",{"_index":293,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["this.configservice.get('database.user",{"_index":294,"title":{},"body":{"injectables/DatabaseOptionsService.html":{}}}],["todo",{"_index":792,"title":{},"body":{"index.html":{}}}],["token",{"_index":83,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/HelperEncryptionService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IHelperEncryptionService.html":{},"classes/UserLoginDto.html":{}}}],["token.dto.ts",{"_index":178,"title":{},"body":{"classes/AuthUpdateRefreshTokenDto.html":{}}}],["token.entity.ts",{"_index":34,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthRefreshTokenEntity.html":{},"miscellaneous/variables.html":{}}}],["token.guard.ts",{"_index":91,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["token.service.interface.ts",{"_index":381,"title":{},"body":{"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["token.service.ts",{"_index":65,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{}}}],["token.strategy.ts",{"_index":99,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["token/auth.jwt.access",{"_index":90,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{}}}],["token/auth.jwt.refresh",{"_index":121,"title":{},"body":{"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["transformer",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":522,"title":{},"body":{"classes/RoleEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["true})@isboolean()@isnotempty()@validateif(e",{"_index":617,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["true})@isnotempty",{"_index":568,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@isuuid('4')@isnotempty",{"_index":571,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@maxlength(100)@isemail()@type(undefined)@isnotempty",{"_index":557,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@maxlength(100)@isstring()@type(undefined)@isnotempty",{"_index":618,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["true})@maxlength(14)@minlength(10)@isstring()@type(undefined)@validateif(e",{"_index":569,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["true})@maxlength(40)@minlength(1)@isstring()@type(undefined)@isnotempty",{"_index":558,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["tuser",{"_index":96,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"injectables/AuthAccessTokenService.html":{},"classes/AuthEntityAbstract.html":{},"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{},"classes/AuthRefreshTokenEntity.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateRefreshTokenDto.html":{},"classes/AwsPhotoEntity.html":{},"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"injectables/AwsS3Service.html":{},"classes/DatabaseEntityAbstract.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HealthAwsS3Indicator.html":{},"injectables/HelperEncryptionService.html":{},"injectables/HelperHashService.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthPayloadOptions.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3PutItemOptions.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseCreateOptions.html":{},"interfaces/IDatabaseExistOptions.html":{},"interfaces/IDatabaseFindOneOptions.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperEncryptionService.html":{},"interfaces/IHelperHashService.html":{},"interfaces/IHelperJwtOptions.html":{},"interfaces/IHelperJwtVerifyOptions.html":{},"interfaces/IHelperRandomStringOptions.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/IUserService.html":{},"classes/RoleEntity.html":{},"classes/SettingService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserPasswordAttemptDto.html":{},"controllers/UserPublicController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":858,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":715,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typeormmoduleoptions",{"_index":286,"title":{},"body":{"injectables/DatabaseOptionsService.html":{},"interfaces/IDatabaseOptionsService.html":{}}}],["types",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":786,"title":{},"body":{"index.html":{}}}],["ua",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["uint8array",{"_index":265,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["undefined",{"_index":209,"title":{},"body":{"classes/AwsS3MultipartPartsSerialization.html":{},"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{},"classes/UserCreateDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@isstring()@type(undefined)@isnotempty",{"_index":612,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["undefined})@type(undefined",{"_index":228,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"classes/AwsS3Serialization.html":{}}}],["under",{"_index":840,"title":{},"body":{"index.html":{}}}],["unique",{"_index":586,"title":{},"body":{"classes/UserEntity.html":{}}}],["unique'})@isstring()@type(undefined)@isnotempty",{"_index":572,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["unit",{"_index":834,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["unknown",{"_index":106,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{}}}],["update",{"_index":69,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["update(id",{"_index":84,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["updated_at",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedatecolumn({name",{"_index":58,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/DatabaseEntityAbstract.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["updatemany",{"_index":433,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updatemany(find",{"_index":466,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateone",{"_index":434,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateone(find",{"_index":467,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateonebyid",{"_index":435,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateonebyid(id",{"_index":468,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["updateremembermeandlogindate",{"_index":136,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["updateremembermeandlogindate(id",{"_index":138,"title":{},"body":{"injectables/AuthRefreshTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{}}}],["upload",{"_index":229,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["uploaded'})@type(undefined",{"_index":226,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{}}}],["uploadid",{"_index":218,"title":{},"body":{"classes/AwsS3MultipartSerialization.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["uploadpart",{"_index":245,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["uploadpart(parth",{"_index":264,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/IAwsS3Service.html":{}}}],["uppercase",{"_index":486,"title":{},"body":{"interfaces/IHelperRandomStringOptions.html":{}}}],["user",{"_index":95,"title":{},"body":{"injectables/AuthJwtAccessTokenGuard.html":{},"injectables/AuthJwtRefreshTokenGuard.html":{},"classes/AwsPhotoEntity.html":{},"injectables/DatabaseOptionsService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["user[data",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_account_not_activate_error",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_email_exists_error",{"_index":756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_entity_name",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found_error",{"_index":753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_password_max_attempt_error",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_password_not_correct_error",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_phone_exists_error",{"_index":757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_username_exists_error",{"_index":755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usercontroller",{"_index":550,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{}}}],["usercreatedto",{"_index":508,"title":{"classes/UserCreateDto.html":{}},"body":{"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"injectables/UserService.html":{}}}],["userentity",{"_index":201,"title":{"classes/UserEntity.html":{}},"body":{"classes/AwsPhotoEntity.html":{},"interfaces/IUserService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["userlogindto",{"_index":610,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{},"controllers/UserPublicController.html":{}}}],["usermodule",{"_index":542,"title":{"modules/UserModule.html":{}},"body":{"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":513,"title":{},"body":{"interfaces/IUserService.html":{},"classes/UserCreateDto.html":{},"classes/UserEntity.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["userpasswordattemptdto",{"_index":626,"title":{"classes/UserPasswordAttemptDto.html":{}},"body":{"classes/UserPasswordAttemptDto.html":{}}}],["userpubliccontroller",{"_index":544,"title":{"controllers/UserPublicController.html":{}},"body":{"modules/RoutesPublicModule.html":{},"controllers/UserPublicController.html":{}}}],["userregisterdto",{"_index":636,"title":{"classes/UserRegisterDto.html":{}},"body":{"controllers/UserPublicController.html":{},"classes/UserRegisterDto.html":{}}}],["userrepository",{"_index":642,"title":{},"body":{"modules/UserRepositoryModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["userrepositorymodule",{"_index":623,"title":{"modules/UserRepositoryModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["userservice",{"_index":624,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["validate",{"_index":100,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["validate(undefined",{"_index":104,"title":{},"body":{"injectables/AuthJwtAccessTokenStrategy.html":{},"injectables/AuthJwtRefreshTokenStrategy.html":{}}}],["validatetoken",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validatetoken(token",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validateuser",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validateuser(pwdstring",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["validator",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseOptionsService.html":{},"injectables/HelperStringService.html":{},"interfaces/IHelperStringService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":49,"title":{},"body":{"classes/AuthAccessTokenEntity.html":{},"classes/AuthEntityAbstract.html":{},"classes/AuthRefreshTokenEntity.html":{},"classes/AwsPhotoEntity.html":{},"classes/RoleEntity.html":{},"classes/UserEntity.html":{}}}],["variables",{"_index":883,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":854,"title":{},"body":{"properties.html":{}}}],["void",{"_index":609,"title":{},"body":{"classes/UserEntity.html":{}}}],["watch",{"_index":829,"title":{},"body":{"index.html":{}}}],["width",{"_index":523,"title":{},"body":{"classes/RoleEntity.html":{}}}],["withdeleted",{"_index":405,"title":{},"body":{"interfaces/IDatabaseFindOneOptions.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":447,"title":{},"body":{"interfaces/IDatabaseRepository.html":{}}}],["yargs",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":79,"title":{},"body":{"injectables/AuthAccessTokenService.html":{},"injectables/AuthRefreshTokenService.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/HelperStringService.html":{},"interfaces/IAuthAccessTokenService.html":{},"interfaces/IAuthRefreshTokenService.html":{},"interfaces/IAuthService.html":{},"interfaces/IAwsS3Service.html":{},"interfaces/IDatabaseRepository.html":{},"interfaces/IHelperStringService.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["z0",{"_index":563,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["za",{"_index":562,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["zoom",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthJwtModule.html":{},"modules/AuthJwtRepositoryModule.html":{},"modules/AwsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/HelperModule.html":{},"modules/RoleModule.html":{},"modules/RoutesModule.html":{},"modules/RoutesPublicModule.html":{},"modules/UserModule.html":{},"modules/UserRepositoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/controllers/app.controllers.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nRouterModule\n\nRouterModule\n\nAppModule -->\n\nRouterModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            RouterModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthAccessTokenEntity.html":{"url":"classes/AuthAccessTokenEntity.html","title":"class - AuthAccessTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthAccessTokenEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/repository/entities/auth.access-token.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encryptedToken\n                            \n                            \n                                encryptionIv\n                            \n                            \n                                encryptionKey\n                            \n                            \n                                jwtToken\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encrypted_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionIv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encryption_iv', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'ecryption_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'jwt_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthAccessTokenService.html":{"url":"injectables/AuthAccessTokenService.html","title":"injectable - AuthAccessTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthAccessTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/services/auth.access-token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findOneByToken\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authAccessTokenRepository: AuthAccessTokenRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authAccessTokenRepository\n                                                  \n                                                        \n                                                                        AuthAccessTokenRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: AuthAccessTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: AuthAccessTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntityAbstract.html":{"url":"classes/AuthEntityAbstract.html","title":"class - AuthEntityAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntityAbstract\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/repository/entities/abstract/auth.entity.abstract.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encryptedToken\n                            \n                            \n                                encryptionIv\n                            \n                            \n                                encryptionKey\n                            \n                            \n                                jwtToken\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encrypted_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionIv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encryption_iv', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'ecryption_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'jwt_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtAccessTokenGuard.html":{"url":"injectables/AuthJwtAccessTokenGuard.html","title":"injectable - AuthJwtAccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtAccessTokenGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/access-token/auth.jwt.access-token.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: Error, user: TUser, info: Error)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        TUser\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            TUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtAccessTokenStrategy.html":{"url":"injectables/AuthJwtAccessTokenStrategy.html","title":"injectable - AuthJwtAccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtAccessTokenStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/access-token/auth.jwt.access-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService, authAccessTokenService: AuthAccessTokenService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authAccessTokenService\n                                                  \n                                                        \n                                                                        AuthAccessTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthJwtModule.html":{"url":"modules/AuthJwtModule.html","title":"module - AuthJwtModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthJwtModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthJwtModule\n\n\n\ncluster_AuthJwtModule_exports\n\n\n\ncluster_AuthJwtModule_providers\n\n\n\ncluster_AuthJwtModule_imports\n\n\n\n\nAuthJwtRepositoryModule\n\nAuthJwtRepositoryModule\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\nAuthJwtModule -->\n\nAuthJwtRepositoryModule->AuthJwtModule\n\n\n\n\n\nHelperModule\n\nHelperModule\n\nAuthJwtModule -->\n\nHelperModule->AuthJwtModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthJwtModule->AuthService \n\n\n\n\n\nAuthAccessTokenService\n\nAuthAccessTokenService\n\nAuthJwtModule -->\n\nAuthAccessTokenService->AuthJwtModule\n\n\n\n\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtAccessTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtRefreshTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthRefreshTokenService\n\nAuthRefreshTokenService\n\nAuthJwtModule -->\n\nAuthRefreshTokenService->AuthJwtModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthJwtModule -->\n\nAuthService->AuthJwtModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/auth-jwt/auth.jwt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthAccessTokenService\n                        \n                        \n                            AuthJwtAccessTokenStrategy\n                        \n                        \n                            AuthJwtRefreshTokenStrategy\n                        \n                        \n                            AuthRefreshTokenService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthJwtRepositoryModule\n                        \n                        \n                            HelperModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtRefreshTokenGuard.html":{"url":"injectables/AuthJwtRefreshTokenGuard.html","title":"injectable - AuthJwtRefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtRefreshTokenGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/refresh-token/auth.jwt.refresh-token.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: Error, user: TUser, info: Error)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        TUser\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            TUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthJwtRefreshTokenStrategy.html":{"url":"injectables/AuthJwtRefreshTokenStrategy.html","title":"injectable - AuthJwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthJwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/guards/refresh-token/auth.jwt.refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService, authRefreshTokenService: AuthRefreshTokenService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authRefreshTokenService\n                                                  \n                                                        \n                                                                        AuthRefreshTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthJwtRepositoryModule.html":{"url":"modules/AuthJwtRepositoryModule.html","title":"module - AuthJwtRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthJwtRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthJwtRepositoryModule\n\n\n\ncluster_AuthJwtRepositoryModule_providers\n\n\n\ncluster_AuthJwtRepositoryModule_exports\n\n\n\n\nAuthAccessTokenRepository \n\nAuthAccessTokenRepository \n\n\n\nAuthRefreshTokenRepository \n\nAuthRefreshTokenRepository \n\n\n\nAuthJwtRepositoryModule\n\nAuthJwtRepositoryModule\n\nAuthAccessTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthAccessTokenRepository \n\n\n\nAuthRefreshTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthRefreshTokenRepository \n\n\n\n\n\nAuthAccessTokenRepository\n\nAuthAccessTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthAccessTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\nAuthRefreshTokenRepository\n\nAuthRefreshTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthRefreshTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/auth-jwt/repository/auth.jwt.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthAccessTokenRepository\n                        \n                        \n                            AuthRefreshTokenRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthAccessTokenRepository\n                        \n                        \n                            AuthRefreshTokenRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRefreshTokenEntity.html":{"url":"classes/AuthRefreshTokenEntity.html","title":"class - AuthRefreshTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRefreshTokenEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/repository/entities/auth.refresh-token.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beforeExpiration\n                            \n                            \n                                rememberMeExpired\n                            \n                            \n                                encryptedToken\n                            \n                            \n                                encryptionIv\n                            \n                            \n                                encryptionKey\n                            \n                            \n                                jwtToken\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'before_expiration', type: 'int', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMeExpired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'remember_me_expired', type: 'int', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptedToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encrypted_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionIv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'encryption_iv', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'ecryption_key', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'jwt_token', type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthRefreshTokenService.html":{"url":"injectables/AuthRefreshTokenService.html","title":"injectable - AuthRefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthRefreshTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/services/auth.refresh-token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneByToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRememberMeAndLoginDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRefreshTokenRepository: AuthRefreshTokenRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRefreshTokenRepository\n                                                  \n                                                        \n                                                                        AuthRefreshTokenRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: AuthRefreshTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, data: AuthRefreshTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRememberMeAndLoginDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRememberMeAndLoginDate(id: string, data: AuthUpdateRefreshTokenDto, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthUpdateRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                passwordSaltLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPassword\n                            \n                            \n                                createPayloadToken\n                            \n                            \n                                    Async\n                                decodeToken\n                            \n                            \n                                    Async\n                                decryptToken\n                            \n                            \n                                    Async\n                                encryptToken\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, helperEncryptionService: HelperEncryptionService, helperHashService: HelperHashService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperEncryptionService\n                                                  \n                                                        \n                                                                        HelperEncryptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperHashService\n                                                  \n                                                        \n                                                                        HelperHashService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPassword(passwordString: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPayloadToken\n                        \n                    \n                \n            \n            \n                \ncreatePayloadToken(data: Record, rememeberMe?: boolean, options?: IAuthPayloadOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rememeberMe\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAuthPayloadOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeToken(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptToken(undefined: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptToken(payload: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(payloadHashed: string, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payloadHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(token: string, options?: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(pwdString: string, pwdHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pwdString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pwdHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        passwordSaltLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('auth.password.salt')\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUpdateRefreshTokenDto.html":{"url":"classes/AuthUpdateRefreshTokenDto.html","title":"class - AuthUpdateRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUpdateRefreshTokenDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/dto/auth.refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginDate\n                            \n                            \n                                rememberMe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsModule.html":{"url":"modules/AwsModule.html","title":"module - AwsModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_AwsModule_imports\n\n\n\ncluster_AwsModule_exports\n\n\n\n\nAwsRepositoryModule\n\nAwsRepositoryModule\n\n\n\nAwsModule\n\nAwsModule\n\nAwsModule -->\n\nAwsRepositoryModule->AwsModule\n\n\n\n\n\nAwsS3Service \n\nAwsS3Service \n\nAwsS3Service  -->\n\nAwsModule->AwsS3Service \n\n\n\n\n\nAwsS3Service\n\nAwsS3Service\n\nAwsModule -->\n\nAwsS3Service->AwsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/aws/aws.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AwsS3Service\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AwsS3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsPhotoEntity.html":{"url":"classes/AwsPhotoEntity.html","title":"class - AwsPhotoEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsPhotoEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/repositories/entities/aws.photo.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                completeUrl\n                            \n                            \n                                filename\n                            \n                            \n                                id\n                            \n                            \n                                mime\n                            \n                            \n                                path\n                            \n                            \n                                pathWithFileName\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'base_url', nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'complete_url', nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathWithFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'path_with_file_name', nullable: false, type: 'varchar'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AwsRepositoryModule.html":{"url":"modules/AwsRepositoryModule.html","title":"module - AwsRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/aws/repositories/aws.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsS3MultipartPartsSerialization.html":{"url":"classes/AwsS3MultipartPartsSerialization.html","title":"class - AwsS3MultipartPartsSerialization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsS3MultipartPartsSerialization\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/serializations/aws.s3.multipart.serialization.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ETag\n                            \n                            \n                                PartNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ETag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'ETag from aws after init multipart'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsS3MultipartSerialization.html":{"url":"classes/AwsS3MultipartSerialization.html","title":"class - AwsS3MultipartSerialization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsS3MultipartSerialization\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/serializations/aws.s3.multipart.serialization.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                maxPartNumber\n                            \n                            \n                                    Optional\n                                partNumber\n                            \n                            \n                                    Optional\n                                parts\n                            \n                            \n                                uploadId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        maxPartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 200, description: 'Max part number, or length of the chunk'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        partNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'Last part number uploaded'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AwsS3MultipartPartsSerialization[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({oneOf: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Upload id from aws after init multipart'})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AwsS3Serialization.html":{"url":"classes/AwsS3Serialization.html","title":"class - AwsS3Serialization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AwsS3Serialization\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/serializations/aws.s3.serialization.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                completeUrl\n                            \n                            \n                                filename\n                            \n                            \n                                mime\n                            \n                            \n                                path\n                            \n                            \n                                pathWithFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathWithFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsS3Service.html":{"url":"injectables/AwsS3Service.html","title":"injectable - AwsS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsS3Service\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/services/aws.s3.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                bucket\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                abortMultipart\n                            \n                            \n                                    Async\n                                checkConnection\n                            \n                            \n                                    Async\n                                completeMultipart\n                            \n                            \n                                    Async\n                                createMultipart\n                            \n                            \n                                    Async\n                                deleteFolder\n                            \n                            \n                                    Async\n                                deleteItemInBucket\n                            \n                            \n                                    Async\n                                deleteItemsInBucket\n                            \n                            \n                                    Async\n                                getItemInBucket\n                            \n                            \n                                    Async\n                                listBucket\n                            \n                            \n                                    Async\n                                listtItemInBucket\n                            \n                            \n                                    Async\n                                uploadPart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        abortMultipart\n                        \n                    \n                \n            \n            \n                \n                    \n                    abortMultipart(path: string, uploadId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkConnection()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        completeMultipart\n                        \n                    \n                \n            \n            \n                \n                    \n                    completeMultipart(path: string, uploadId: string, parts: CompletedPart[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parts\n                                    \n                                            CompletedPart[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createMultipart\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMultipart(filename: string, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFolder(directory: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteItemInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItemInBucket(filename: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteItemsInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItemsInBucket(filenames: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filenames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getItemInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    getItemInBucket(filename: string, content: string | Buffer | Readable | ReadableStream | Blob, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                            string | Buffer | Readable | ReadableStream | Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    listBucket()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listtItemInBucket\n                        \n                    \n                \n            \n            \n                \n                    \n                    listtItemInBucket(prifix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prifix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadPart\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPart(parth: string, uploadId: string, partNumber: number, content: string | Buffer | Readable | ReadableStream | Blob | Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                            string | Buffer | Readable | ReadableStream | Blob | Uint8Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAuthJwtModule->CommonModule\n\n\n\n\n\nAwsModule\n\nAwsModule\n\nCommonModule -->\n\nAwsModule->CommonModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCommonModule -->\n\nDatabaseModule->CommonModule\n\n\n\n\n\nHelperModule\n\nHelperModule\n\nCommonModule -->\n\nHelperModule->CommonModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nCommonModule -->\n\nRequestModule->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthJwtModule\n                        \n                        \n                            AwsModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            HelperModule\n                        \n                        \n                            RequestModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseEntityAbstract.html":{"url":"classes/DatabaseEntityAbstract.html","title":"class - DatabaseEntityAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseEntityAbstract\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/abstracts/database.entity.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDatabaseOptionsService \n\nDatabaseOptionsService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseOptionsService  -->\n\nDatabaseModule->DatabaseOptionsService \n\n\n\n\n\nDatabaseOptionsService\n\nDatabaseOptionsService\n\nDatabaseModule -->\n\nDatabaseOptionsService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseOptionsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseOptionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseOptionsService.html":{"url":"injectables/DatabaseOptionsService.html","title":"injectable - DatabaseOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseOptionsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/services/database-options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debug\n                            \n                            \n                                    Private\n                                    Readonly\n                                env\n                            \n                            \n                                    Private\n                                    Readonly\n                                host\n                            \n                            \n                                    Private\n                                    Readonly\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                password\n                            \n                            \n                                    Private\n                                    Readonly\n                                port\n                            \n                            \n                                    Private\n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.debug')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('app.env')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.host')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.name')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.options')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.password')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        port\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.port')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.configService.get('database.user')\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthAwsS3Indicator.html":{"url":"injectables/HealthAwsS3Indicator.html","title":"injectable - HealthAwsS3Indicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthAwsS3Indicator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/indicators/health.aws-s3.indicator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isHealthy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(awsS3Service: AwsS3Service)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        awsS3Service\n                                                  \n                                                        \n                                                                        AwsS3Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isHealthy\n                        \n                    \n                \n            \n            \n                \n                    \n                    isHealthy(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/controllers/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAwsHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAwsHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAwsHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HealthCheck()@Get('/aws')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nAwsModule->HealthModule\n\n\n\n\n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator  -->\n\nHealthModule->HealthAwsS3Indicator \n\n\n\n\n\nHealthAwsS3Indicator\n\nHealthAwsS3Indicator\n\nHealthModule -->\n\nHealthAwsS3Indicator->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthAwsS3Indicator\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HealthAwsS3Indicator\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperEncryptionService.html":{"url":"injectables/HelperEncryptionService.html","title":"injectable - HelperEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelperEncryptionService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/services/helper.encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aes256Decrypt\n                            \n                            \n                                aes256Encrypt\n                            \n                            \n                                base64Decrypt\n                            \n                            \n                                base64Encrypt\n                            \n                            \n                                base64Validate\n                            \n                            \n                                jwtDecrypt\n                            \n                            \n                                jwtEncrypt\n                            \n                            \n                                jwtVerify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Decrypt\n                        \n                    \n                \n            \n            \n                \naes256Decrypt(encrypted: string, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Record | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Encrypt\n                        \n                    \n                \n            \n            \n                \naes256Encrypt(data: string | Record | Record[], key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Decrypt\n                        \n                    \n                \n            \n            \n                \nbase64Decrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Encrypt\n                        \n                    \n                \n            \n            \n                \nbase64Encrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Validate\n                        \n                    \n                \n            \n            \n                \nbase64Validate(clientBasicToken: string, ours: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientBasicToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ours\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtDecrypt\n                        \n                    \n                \n            \n            \n                \njwtDecrypt(jwtEncrypted: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jwtEncrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtEncrypt\n                        \n                    \n                \n            \n            \n                \njwtEncrypt(payload: Record, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtVerify\n                        \n                    \n                \n            \n            \n                \njwtVerify(token: string, options: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperHashService.html":{"url":"injectables/HelperHashService.html","title":"injectable - HelperHashService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelperHashService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/services/helper.hash.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bcrypt\n                            \n                            \n                                bcryptComapre\n                            \n                            \n                                randomSalt\n                            \n                            \n                                sha256\n                            \n                            \n                                sha256Compare\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n            \n                \nbcrypt(passwordString: string, salt: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bcryptComapre\n                        \n                    \n                \n            \n            \n                \nbcryptComapre(passwordString: string, passwordHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomSalt\n                        \n                    \n                \n            \n            \n                \nrandomSalt(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256\n                        \n                    \n                \n            \n            \n                \nsha256(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Compare\n                        \n                    \n                \n            \n            \n                \nsha256Compare(hashOne: string, hashTwo: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hashOne\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashTwo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelperModule.html":{"url":"modules/HelperModule.html","title":"module - HelperModule","body":"\n                   \n\n\n\n\n    Modules\n    HelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HelperModule\n\n\n\ncluster_HelperModule_providers\n\n\n\ncluster_HelperModule_exports\n\n\n\n\nHelperEncryptionService \n\nHelperEncryptionService \n\n\n\nHelperHashService \n\nHelperHashService \n\n\n\nHelperStringService \n\nHelperStringService \n\n\n\nHelperModule\n\nHelperModule\n\nHelperEncryptionService  -->\n\nHelperModule->HelperEncryptionService \n\n\n\nHelperHashService  -->\n\nHelperModule->HelperHashService \n\n\n\nHelperStringService  -->\n\nHelperModule->HelperStringService \n\n\n\n\n\nHelperEncryptionService\n\nHelperEncryptionService\n\nHelperModule -->\n\nHelperEncryptionService->HelperModule\n\n\n\n\n\nHelperHashService\n\nHelperHashService\n\nHelperModule -->\n\nHelperHashService->HelperModule\n\n\n\n\n\nHelperStringService\n\nHelperStringService\n\nHelperModule -->\n\nHelperStringService->HelperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/helpers/helper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HelperEncryptionService\n                        \n                        \n                            HelperHashService\n                        \n                        \n                            HelperStringService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HelperEncryptionService\n                        \n                        \n                            HelperHashService\n                        \n                        \n                            HelperStringService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperStringService.html":{"url":"injectables/HelperStringService.html","title":"injectable - HelperStringService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelperStringService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/services/helper.string.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                censor\n                            \n                            \n                                checkEmail\n                            \n                            \n                                checkPasswordMedium\n                            \n                            \n                                checkPasswordStrong\n                            \n                            \n                                checkPasswordWeak\n                            \n                            \n                                checkSafeString\n                            \n                            \n                                random\n                            \n                            \n                                randomReference\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        censor\n                        \n                    \n                \n            \n            \n                \ncensor(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordMedium\n                        \n                    \n                \n            \n            \n                \ncheckPasswordMedium(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordStrong\n                        \n                    \n                \n            \n            \n                \ncheckPasswordStrong(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordWeak\n                        \n                    \n                \n            \n            \n                \ncheckPasswordWeak(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkSafeString\n                        \n                    \n                \n            \n            \n                \ncheckSafeString(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        random\n                        \n                    \n                \n            \n            \n                \nrandom(length: number, options?: IHelperRandomStringOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperRandomStringOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomReference\n                        \n                    \n                \n            \n            \n                \nrandomReference(length: number, prefix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthAccessTokenService.html":{"url":"interfaces/IAuthAccessTokenService.html","title":"interface - IAuthAccessTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthAccessTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.access-token.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findOneByToken\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: AuthAccessTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \nfindOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: AuthAccessTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthAccessTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthPayloadOptions.html":{"url":"interfaces/IAuthPayloadOptions.html","title":"interface - IAuthPayloadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthPayloadOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthRefreshTokenService.html":{"url":"interfaces/IAuthRefreshTokenService.html","title":"interface - IAuthRefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthRefreshTokenService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.refresh-token.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findOneByToken\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                                \n                                    \n                                        updateRememberMeAndLoginDate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: AuthRefreshTokenEntity, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByToken\n                        \n                    \n                \n            \n            \n                \nfindOneByToken(token: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: AuthRefreshTokenEntity, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthRefreshTokenEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRememberMeAndLoginDate\n                        \n                    \n                \n            \n            \n                \nupdateRememberMeAndLoginDate(id: string, data: AuthUpdateRefreshTokenDto, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AuthUpdateRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthService.html":{"url":"interfaces/IAuthService.html","title":"interface - IAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/auth-jwt/interfaces/auth.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createPassword\n                                    \n                                \n                                \n                                    \n                                        createPayloadToken\n                                    \n                                \n                                \n                                    \n                                        decodeToken\n                                    \n                                \n                                \n                                    \n                                        decryptToken\n                                    \n                                \n                                \n                                    \n                                        encryptToken\n                                    \n                                \n                                \n                                    \n                                        signToken\n                                    \n                                \n                                \n                                    \n                                        validateToken\n                                    \n                                \n                                \n                                    \n                                        validateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPassword\n                        \n                    \n                \n            \n            \n                \ncreatePassword(password: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPayloadToken\n                        \n                    \n                \n            \n            \n                \ncreatePayloadToken(data: Record | string, rememeberMe?: boolean, options?: IAuthPayloadOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rememeberMe\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAuthPayloadOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeToken\n                        \n                    \n                \n            \n            \n                \ndecodeToken(token: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decryptToken\n                        \n                    \n                \n            \n            \n                \ndecryptToken(payload: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptToken\n                        \n                    \n                \n            \n            \n                \nencryptToken(payload: Record, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signToken\n                        \n                    \n                \n            \n            \n                \nsignToken(payloadHashed: string, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payloadHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateToken\n                        \n                    \n                \n            \n            \n                \nvalidateToken(token: string, options?: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateUser\n                        \n                    \n                \n            \n            \n                \nvalidateUser(pwdString: string, pwdHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pwdString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pwdHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAwsS3PutItemOptions.html":{"url":"interfaces/IAwsS3PutItemOptions.html","title":"interface - IAwsS3PutItemOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAwsS3PutItemOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/interfaces/aws.s3.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            acl\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acl:     ObjectCannedACL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectCannedACL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAwsS3Service.html":{"url":"interfaces/IAwsS3Service.html","title":"interface - IAwsS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAwsS3Service\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/aws/interfaces/aws.s3.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        abortMultipart\n                                    \n                                \n                                \n                                    \n                                        checkConnection\n                                    \n                                \n                                \n                                    \n                                        completeMultipart\n                                    \n                                \n                                \n                                    \n                                        createMultipart\n                                    \n                                \n                                \n                                    \n                                        deleteFolder\n                                    \n                                \n                                \n                                    \n                                        deleteItemInBucket\n                                    \n                                \n                                \n                                    \n                                        deleteItemsInBucket\n                                    \n                                \n                                \n                                    \n                                        getItemInBucket\n                                    \n                                \n                                \n                                    \n                                        listBucket\n                                    \n                                \n                                \n                                    \n                                        listtItemInBucket\n                                    \n                                \n                                \n                                    \n                                        uploadPart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abortMultipart\n                        \n                    \n                \n            \n            \n                \nabortMultipart(path: string, uploadId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkConnection\n                        \n                    \n                \n            \n            \n                \ncheckConnection()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completeMultipart\n                        \n                    \n                \n            \n            \n                \ncompleteMultipart(path: string, uploadId: string, parts: CompletedPart[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parts\n                                    \n                                            CompletedPart[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMultipart\n                        \n                    \n                \n            \n            \n                \ncreateMultipart(filename: string, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFolder\n                        \n                    \n                \n            \n            \n                \ndeleteFolder(directory: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directory\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItemInBucket\n                        \n                    \n                \n            \n            \n                \ndeleteItemInBucket(filename: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItemsInBucket\n                        \n                    \n                \n            \n            \n                \ndeleteItemsInBucket(filenames: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filenames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemInBucket\n                        \n                    \n                \n            \n            \n                \ngetItemInBucket(filename: string, content: Buffer | string | Readable | ReadableStream | Blob, options?: IAwsS3PutItemOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                            Buffer | string | Readable | ReadableStream | Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IAwsS3PutItemOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listBucket\n                        \n                    \n                \n            \n            \n                \nlistBucket()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listtItemInBucket\n                        \n                    \n                \n            \n            \n                \nlisttItemInBucket(prifix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prifix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadPart\n                        \n                    \n                \n            \n            \n                \nuploadPart(parth: string, uploadId: string, partNumber: number, content:  | string | Uint8Array | Buffer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uploadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                             | string | Uint8Array | Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseCreateOptions.html":{"url":"interfaces/IDatabaseCreateOptions.html","title":"interface - IDatabaseCreateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseCreateOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseExistOptions.html":{"url":"interfaces/IDatabaseExistOptions.html","title":"interface - IDatabaseExistOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseExistOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IDatabaseOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            excludeIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        excludeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        excludeIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseFindAllOptions.html":{"url":"interfaces/IDatabaseFindAllOptions.html","title":"interface - IDatabaseFindAllOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseFindAllOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IPaginationOptions\n            \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseFindOneOptions.html":{"url":"interfaces/IDatabaseFindOneOptions.html","title":"interface - IDatabaseFindOneOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseFindOneOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            join\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            select\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            session\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withDeleted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        join\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        join:     boolean | FindOptionsRelations\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | FindOptionsRelations\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        select:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withDeleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withDeleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseOptionsService.html":{"url":"interfaces/IDatabaseOptionsService.html","title":"interface - IDatabaseOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseOptionsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database-options.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createTypeOrmOptions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatabaseRepository.html":{"url":"interfaces/IDatabaseRepository.html","title":"interface - IDatabaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatabaseRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/interfaces/database.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        createMany\n                                    \n                                \n                                \n                                    \n                                        deleteMany\n                                    \n                                \n                                \n                                    \n                                        deleteManyById\n                                    \n                                \n                                \n                                    \n                                        deleteOne\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        findOneById\n                                    \n                                \n                                \n                                    \n                                        getTotal\n                                    \n                                \n                                \n                                    \n                                        model\n                                    \n                                \n                                \n                                    \n                                        raw\n                                    \n                                \n                                \n                                    \n                                        restoreMany\n                                    \n                                \n                                \n                                    \n                                        restoreManyById\n                                    \n                                \n                                \n                                    \n                                        restoreOne\n                                    \n                                \n                                \n                                    \n                                        restoreOneById\n                                    \n                                \n                                \n                                    \n                                        softDeleteMany\n                                    \n                                \n                                \n                                    \n                                        softDeleteManyById\n                                    \n                                \n                                \n                                    \n                                        softDeleteOne\n                                    \n                                \n                                \n                                    \n                                        softDeleteOneById\n                                    \n                                \n                                \n                                    \n                                        updateMany\n                                    \n                                \n                                \n                                    \n                                        updateOne\n                                    \n                                \n                                \n                                    \n                                        updateOneById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: N, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMany\n                        \n                    \n                \n            \n            \n                \ncreateMany(data: N[], options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            N[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(find: Record | Record[], options?: IDatabaseManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteManyById\n                        \n                    \n                \n            \n            \n                \ndeleteManyById(id: string[], options?: IDatabaseManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \ndeleteOne(find: Record | Record[], options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(id: string, options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(find: Record | Record[], options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(find?: Record | Record[], options?: IDatabaseFindAllOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Y\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindAllOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(find?: Record | Record[], options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Y\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Y\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotal\n                        \n                    \n                \n            \n            \n                \ngetTotal(find?: Record | Record[], options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n            \n                \nmodel()\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        raw\n                        \n                    \n                \n            \n            \n                \nraw(rawOperation: R)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rawOperation\n                                    \n                                            R\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreMany\n                        \n                    \n                \n            \n            \n                \nrestoreMany(find: Record | Record[], options?: IDatabaseRestoreManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreManyById\n                        \n                    \n                \n            \n            \n                \nrestoreManyById(id: string[], options?: IDatabaseRestoreManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreOne\n                        \n                    \n                \n            \n            \n                \nrestoreOne(find: Record | Record[], options?: IDatabaseRestoreOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreOneById\n                        \n                    \n                \n            \n            \n                \nrestoreOneById(id: string, options?: IDatabaseRestoreOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseRestoreOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteMany\n                        \n                    \n                \n            \n            \n                \nsoftDeleteMany(find: Record | Record[], options?: IDatabaseSoftDeleteManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteManyById\n                        \n                    \n                \n            \n            \n                \nsoftDeleteManyById(id: string[], options?: IDatabaseSoftDeleteManyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteOne\n                        \n                    \n                \n            \n            \n                \nsoftDeleteOne(find: Record | Record[], options?: IDatabaseSoftDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        softDeleteOneById\n                        \n                    \n                \n            \n            \n                \nsoftDeleteOneById(id: string, options?: IDatabaseSoftDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseSoftDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMany\n                        \n                    \n                \n            \n            \n                \nupdateMany(find: Record | Record[], data: N, options?: IDatabaseManyOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOne\n                        \n                    \n                \n            \n            \n                \nupdateOne(find: Record | Record, data: N, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record | Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(id: string, data: N, options?: IDatabaseUpdateOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        N\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            N\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseUpdateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperEncryptionService.html":{"url":"interfaces/IHelperEncryptionService.html","title":"interface - IHelperEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperEncryptionService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.encryption-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        aes256Decrypt\n                                    \n                                \n                                \n                                    \n                                        aes256Encrypt\n                                    \n                                \n                                \n                                    \n                                        base64Decrypt\n                                    \n                                \n                                \n                                    \n                                        base64Encrypt\n                                    \n                                \n                                \n                                    \n                                        base64Validate\n                                    \n                                \n                                \n                                    \n                                        jwtDecrypt\n                                    \n                                \n                                \n                                    \n                                        jwtEncrypt\n                                    \n                                \n                                \n                                    \n                                        jwtVerify\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Decrypt\n                        \n                    \n                \n            \n            \n                \naes256Decrypt(encrepted: string, key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encrepted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Record | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aes256Encrypt\n                        \n                    \n                \n            \n            \n                \naes256Encrypt(data: string | Record | Record[], key: string, iv: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Record | Record[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iv\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Decrypt\n                        \n                    \n                \n            \n            \n                \nbase64Decrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Encrypt\n                        \n                    \n                \n            \n            \n                \nbase64Encrypt(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64Validate\n                        \n                    \n                \n            \n            \n                \nbase64Validate(clientBasicToken: string, ours: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientBasicToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ours\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtDecrypt\n                        \n                    \n                \n            \n            \n                \njwtDecrypt(jwtEncrypted: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jwtEncrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtEncrypt\n                        \n                    \n                \n            \n            \n                \njwtEncrypt(payload: Record, options: IHelperJwtOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtVerify\n                        \n                    \n                \n            \n            \n                \njwtVerify(token: string, options: IHelperJwtVerifyOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperJwtVerifyOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperHashService.html":{"url":"interfaces/IHelperHashService.html","title":"interface - IHelperHashService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperHashService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.hash-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        bcrypt\n                                    \n                                \n                                \n                                    \n                                        bcryptComapre\n                                    \n                                \n                                \n                                    \n                                        randomSalt\n                                    \n                                \n                                \n                                    \n                                        sha256\n                                    \n                                \n                                \n                                    \n                                        sha256Compare\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n            \n                \nbcrypt(passwordString: string, salt: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bcryptComapre\n                        \n                    \n                \n            \n            \n                \nbcryptComapre(passwordString: string, passwordHashed: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomSalt\n                        \n                    \n                \n            \n            \n                \nrandomSalt(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256\n                        \n                    \n                \n            \n            \n                \nsha256(str: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Compare\n                        \n                    \n                \n            \n            \n                \nsha256Compare(hasOne: string, hashTwo: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hasOne\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashTwo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperJwtOptions.html":{"url":"interfaces/IHelperJwtOptions.html","title":"interface - IHelperJwtOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperJwtOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IHelperJwtVerifyOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expiredIn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notBefore\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiredIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiredIn:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notBefore\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notBefore:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperJwtVerifyOptions.html":{"url":"interfaces/IHelperJwtVerifyOptions.html","title":"interface - IHelperJwtVerifyOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperJwtVerifyOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audience\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            secretKey\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperRandomStringOptions.html":{"url":"interfaces/IHelperRandomStringOptions.html","title":"interface - IHelperRandomStringOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperRandomStringOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            upperCase\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upperCase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upperCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHelperStringService.html":{"url":"interfaces/IHelperStringService.html","title":"interface - IHelperStringService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHelperStringService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/interfaces/helper.string-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        censor\n                                    \n                                \n                                \n                                    \n                                        checkEmail\n                                    \n                                \n                                \n                                    \n                                        checkPasswordMedium\n                                    \n                                \n                                \n                                    \n                                        checkPasswordStrong\n                                    \n                                \n                                \n                                    \n                                        checkPasswordWeak\n                                    \n                                \n                                \n                                    \n                                        checkSafeString\n                                    \n                                \n                                \n                                    \n                                        random\n                                    \n                                \n                                \n                                    \n                                        randomReference\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        censor\n                        \n                    \n                \n            \n            \n                \ncensor(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordMedium\n                        \n                    \n                \n            \n            \n                \ncheckPasswordMedium(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordStrong\n                        \n                    \n                \n            \n            \n                \ncheckPasswordStrong(password: string, length?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordWeak\n                        \n                    \n                \n            \n            \n                \ncheckPasswordWeak(password: string, lenght?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lenght\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkSafeString\n                        \n                    \n                \n            \n            \n                \ncheckSafeString(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        random\n                        \n                    \n                \n            \n            \n                \nrandom(lenght: number, options?: IHelperRandomStringOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lenght\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IHelperRandomStringOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomReference\n                        \n                    \n                \n            \n            \n                \nrandomReference(length: number, prefix?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaginationOptions.html":{"url":"interfaces/IPaginationOptions.html","title":"interface - IPaginationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPaginationOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/interfaces/pagination.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            paging\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paging:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         IPaginationSort\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPaginationSort\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettingService.html":{"url":"interfaces/ISettingService.html","title":"interface - ISettingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettingService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/settings/interfaces/setting.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getMaxPasswordAttempt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxPasswordAttempt\n                        \n                    \n                \n            \n            \n                \ngetMaxPasswordAttempt()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserService.html":{"url":"interfaces/IUserService.html","title":"interface - IUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/interfaces/user.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        deleteOneById\n                                    \n                                \n                                \n                                    \n                                        existEmail\n                                    \n                                \n                                \n                                    \n                                        existPhoneNumber\n                                    \n                                \n                                \n                                    \n                                        existUsername\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        findOneByEmail\n                                    \n                                \n                                \n                                    \n                                        findOneByUsername\n                                    \n                                \n                                \n                                    \n                                        increasePasswordAttempt\n                                    \n                                \n                                \n                                    \n                                        resetPasswordAttempt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: UserCreateDto, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \ndeleteOneById(id: string, options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existEmail\n                        \n                    \n                \n            \n            \n                \nexistEmail(email: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existPhoneNumber\n                        \n                    \n                \n            \n            \n                \nexistPhoneNumber(phoneNumber: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existUsername\n                        \n                    \n                \n            \n            \n                \nexistUsername(username: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(find?: Record, options?: IDatabaseFindAllOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindAllOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(find: Record, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increasePasswordAttempt\n                        \n                    \n                \n            \n            \n                \nincreasePasswordAttempt(user: UserEntity, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordAttempt\n                        \n                    \n                \n            \n            \n                \nresetPasswordAttempt(id: string, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/request/request.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleEntity.html":{"url":"classes/RoleEntity.html","title":"class - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/repository/entities/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, type: 'varchar', width: 100})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\n\nRoleRepositoryModule\n\nRoleRepositoryModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleRepositoryModule->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RoleRepositoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleRepositoryModule.html":{"url":"modules/RoleRepositoryModule.html","title":"module - RoleRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleRepositoryModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/repository/role.repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RouterModule.html":{"url":"modules/RouterModule.html","title":"module - RouterModule","body":"\n                   \n\n\n\n\n    Modules\n    RouterModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/router.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesModule.html":{"url":"modules/RoutesModule.html","title":"module - RoutesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesModule_imports\n\n\n\n\nAwsModule\n\nAwsModule\n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesModule -->\n\nAwsModule->RoutesModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nRoutesModule -->\n\nHealthModule->RoutesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/routes/routes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AwsModule\n                        \n                        \n                            HealthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesPublicModule.html":{"url":"modules/RoutesPublicModule.html","title":"module - RoutesPublicModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesPublicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoutesPublicModule\n\n\n\ncluster_RoutesPublicModule_imports\n\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\n\n\nRoutesPublicModule\n\nRoutesPublicModule\n\nRoutesPublicModule -->\n\nAuthJwtModule->RoutesPublicModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nRoutesPublicModule -->\n\nRoleModule->RoutesPublicModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nRoutesPublicModule -->\n\nUserModule->RoutesPublicModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/router/routes/routes.public.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserPublicController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthJwtModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingModule.html":{"url":"classes/SettingModule.html","title":"class - SettingModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingModule\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/settings/setting.module.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingService.html":{"url":"classes/SettingService.html","title":"class - SettingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/settings/services/setting.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ISettingService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMaxPasswordAttempt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMaxPasswordAttempt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaxPasswordAttempt()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/controllers/user.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCreateDto.html":{"url":"classes/UserCreateDto.html","title":"class - UserCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCreateDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstname\n                            \n                            \n                                    Readonly\n                                lastname\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(100)@IsEmail()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(40)@MinLength(1)@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(40)@MinLength(1)@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'password should be  strong and contains [a-zA-Z0-9] and special character', example: undefined, required: true})@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(14)@MinLength(10)@IsString()@Type(undefined)@ValidateIf(e => )@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@IsUUID('4')@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true, description: 'username should be unique'})@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/repository/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEntityAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                isActive\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                            \n                                passwordAttempt\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                photo\n                            \n                            \n                                refreshToken\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                DATABASE_CREATED_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_DELETE_AT_FIELD_NAME\n                            \n                            \n                                DATABASE_UPDATE_AT_FIELD_NAME\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthAccessTokenEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('access_token')@OneToOne(undefined)@JoinColumn({name: 'access_token_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_AUTH_JWT_ACCESS_TOKEN'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('email')@Column({type: 'varchar', nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('is_active')@Column({type: 'boolean', name: 'is_active', nullable: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('lastname')@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('password')@Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('password_attempt')@Column({type: 'int', name: 'password_attempt', nullable: false, default: 0})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('phone_number')@Column({name: 'phone_number', type: 'varchar', length: 14, nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AwsPhotoEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('photo')@OneToOne(undefined)@JoinColumn({name: 'photo_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_AWS_PHOTO_USER'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthRefreshTokenEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('refresh_token')@OneToOne(undefined)@JoinColumn({name: 'refresh_token_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_AUTH_JWT_REFRESH_TOKEN'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('role')@ManyToOne(undefined)@JoinColumn({name: 'role_id', referencedColumnName: 'id', foreignKeyConstraintName: 'FK_ROLE_USER'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index('username')@Column({type: 'varchar', nullable: false, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: DATABASE_CREATED_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: DATABASE_DELETE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: DATABASE_UPDATE_AT_FIELD_NAME, type: Date})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid', {name: 'id'})\n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeSave\n                        \n                    \n                \n            \n            \n                \nbeforeSave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()@BeforeUpdate()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                rememberMe\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'string password', example: undefined})@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'if true refresh token will expire after 30d else 7d', example: false, required: true})@IsBoolean()@IsNotEmpty()@ValidateIf(e => )@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@MaxLength(100)@IsString()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserRepositoryModule\n\nUserRepositoryModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserRepositoryModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPasswordAttemptDto.html":{"url":"classes/UserPasswordAttemptDto.html","title":"class - UserPasswordAttemptDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPasswordAttemptDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.password-attempt.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordAttempt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserPublicController.html":{"url":"controllers/UserPublicController.html","title":"controller - UserPublicController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserPublicController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/controllers/user.public.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userLoginDto: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userRegisterDto: UserRegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRegisterDto\n                                    \n                                                UserRegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRegisterDto.html":{"url":"classes/UserRegisterDto.html","title":"class - UserRegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRegisterDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.register.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRepositoryModule.html":{"url":"modules/UserRepositoryModule.html","title":"module - UserRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserRepositoryModule\n\n\n\ncluster_UserRepositoryModule_exports\n\n\n\ncluster_UserRepositoryModule_providers\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nUserRepositoryModule\n\nUserRepositoryModule\n\nUserRepository  -->\n\nUserRepositoryModule->UserRepository \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserRepositoryModule -->\n\nUserRepository->UserRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/repository/user.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Async\n                                existEmail\n                            \n                            \n                                    Async\n                                existPhoneNumber\n                            \n                            \n                                    Async\n                                existUsername\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                            \n                                    Async\n                                increasePasswordAttempt\n                            \n                            \n                                resetPasswordAttempt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: UserCreateDto, options?: IDatabaseCreateOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseCreateOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string, options?: IDatabaseDeleteOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseDeleteOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        existEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    existEmail(email: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        existPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    existPhoneNumber(phoneNumber: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        existUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    existUsername(username: string, options?: IDatabaseExistOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseExistOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(find?: Record, options?: IDatabaseFindAllOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindAllOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(find: Record, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUsername(username: string, options?: IDatabaseFindOneOptions)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseFindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        increasePasswordAttempt\n                        \n                    \n                \n            \n            \n                \n                    \n                    increasePasswordAttempt(user: UserEntity, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordAttempt\n                        \n                    \n                \n            \n            \n                \nresetPasswordAttempt(id: string, options?: IDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.252.0\n        \n            @faker-js/faker : ^7.6.0\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/bullmq : ^1.0.0\n        \n            @nestjs/common : ^9.2.1\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.2.1\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.2.1\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/terminus : ^9.1.4\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @ngrx/store : ^15.1.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            crypto-js : ^4.1.1\n        \n            joi : ^17.7.0\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.4\n        \n            ms : ^2.1.3\n        \n            mysql2 : ^2.3.3\n        \n            nest-commander : ^3.3.0\n        \n            nestjs-command : ^3.1.2\n        \n            passport : ^0.6.0\n        \n            passport-headerapikey : ^1.2.2\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.8.0\n        \n            typeorm : ^0.3.11\n        \n            ua-parser-js : ^1.0.32\n        \n            yargs : ^17.6.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENUM_AUTH_STATUS_CODE_ERROR   (src/.../enum.status-code.constant.ts)\n                        \n                        \n                            ENUM_ERROR_STATUS_CODE_ERROR   (src/.../error.status-code.enum.constant.ts)\n                        \n                        \n                            ENUM_PAGINATION_SORT_TYPE   (src/.../pagination.enum.constant.ts)\n                        \n                        \n                            ENUM_REQUEST_STATUS_CODE_ERROR   (src/.../request.status-code.enum.constant.ts)\n                        \n                        \n                            ENUM_USER_STATUS_CODE_ERROR   (src/.../user.status-code.enum.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/auth-jwt/constants/enum.status-code.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_AUTH_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 AUTH_JWT_ACCESS_TOKEN_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6100\n                            \n                        \n                        \n                            \n                                 AUTH_JWT_REFRESH_TOKEN_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6101\n                            \n                        \n            \n        \n\n    src/common/error/constants/error.status-code.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_ERROR_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 ERROR_UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : 5100\n                            \n                        \n                        \n                            \n                                 ERROR_SERVICE_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                 ERROR_REQUEST_TIMEOUT\n                            \n                        \n            \n        \n\n    src/common/pagination/constants/pagination.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_PAGINATION_SORT_TYPE\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n            \n        \n\n    src/common/request/constants/request.status-code.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_REQUEST_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 REQUEST_VALIDATION_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6500\n                            \n                        \n            \n        \n\n    src/modules/user/constants/user.status-code.enum.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ENUM_USER_STATUS_CODE_ERROR\n                    \n                \n                        \n                            \n                                 USER_NOT_FOUND_ERROR\n                            \n                        \n                        \n                            \n                                Value : 6404\n                            \n                        \n                        \n                            \n                                 USER_USERNAME_EXISTS_ERROR\n                            \n                        \n                        \n                            \n                                 USER_EMAIL_EXISTS_ERROR\n                            \n                        \n                        \n                            \n                                 USER_PHONE_EXISTS_ERROR\n                            \n                        \n                        \n                            \n                                 USER_ACCOUNT_NOT_ACTIVATE_ERROR\n                            \n                        \n                        \n                            \n                                 USER_PASSWORD_MAX_ATTEMPT_ERROR\n                            \n                        \n                        \n                            \n                                 USER_PASSWORD_NOT_CORRECT_ERROR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthAccessTokenProtected   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            AuthRefreshTokenProtected   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            DatabaseEntity   (src/.../database.decorator.ts)\n                        \n                        \n                            DatabaseModel   (src/.../database.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/auth-jwt/decorators/auth.jwt.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthAccessTokenProtected\n                        \n                    \n                \n            \n            \n                \nAuthAccessTokenProtected()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     MethodDecorator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthRefreshTokenProtected\n                        \n                    \n                \n            \n            \n                \nAuthRefreshTokenProtected()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     MethodDecorator\n\n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/database/decorators/database.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DatabaseEntity\n                        \n                    \n                \n            \n            \n                \nDatabaseEntity(options?: EntityOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            EntityOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DatabaseModel\n                        \n                    \n                \n            \n            \n                \nDatabaseModel(entity: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParameterDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAuthentication\nA boilerplate authentication system with Nest.\nFeatures\n\nTypescript.\nNestJs.\nRelational database.\nClean code.\nDocumentation.\nRxJs.\n\nTodo\n #release1:\n\n Centralized configuration.\n TypeOrm integration (MySQL).\n Abstract repository.\n Entity Relationship Diagram.\n Jsonwebtoken startegy(ongoing...).\n rate-limit.\n Swagger.\n Dockerfile.\n Docker-compose.\n link to the front-end app.\n rename repo to: authentication-and-authorization.\n OAuth2 (Google).\n Jenkinsfile.\n\nOverview\n\nHow the jwt are handled in this app:\n\n \n\nERD-jwt:\n\n \nInstallation\n$ npm iRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTests\n# unit-test\n$ npm run test:unit\n\n# integration-test\n\n# e2e-test\nLicense\nThis project is under the MIT licensed.\nContact\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthJwtModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthJwtRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AwsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AwsRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleRepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RouterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesPublicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthJwtModule\n\n\n\ncluster_AuthJwtModule_imports\n\n\n\ncluster_AuthJwtModule_exports\n\n\n\ncluster_AuthJwtModule_providers\n\n\n\ncluster_AuthJwtRepositoryModule\n\n\n\ncluster_AuthJwtRepositoryModule_exports\n\n\n\ncluster_AuthJwtRepositoryModule_providers\n\n\n\ncluster_AwsModule\n\n\n\ncluster_AwsModule_imports\n\n\n\ncluster_AwsModule_exports\n\n\n\ncluster_AwsModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_HelperModule\n\n\n\ncluster_HelperModule_exports\n\n\n\ncluster_HelperModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\ncluster_RoutesModule\n\n\n\ncluster_RoutesPublicModule\n\n\n\ncluster_RoutesPublicModule_imports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserRepositoryModule\n\n\n\ncluster_UserRepositoryModule_exports\n\n\n\ncluster_UserRepositoryModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nRouterModule\n\nRouterModule\n\nAppModule -->\n\nRouterModule->AppModule\n\n\n\n\n\nAuthJwtRepositoryModule\n\nAuthJwtRepositoryModule\n\n\n\nAuthJwtModule\n\nAuthJwtModule\n\nAuthJwtModule -->\n\nAuthJwtRepositoryModule->AuthJwtModule\n\n\n\n\n\nAuthAccessTokenRepository \n\nAuthAccessTokenRepository \n\nAuthAccessTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthAccessTokenRepository \n\n\n\n\n\nAuthRefreshTokenRepository \n\nAuthRefreshTokenRepository \n\nAuthRefreshTokenRepository  -->\n\nAuthJwtRepositoryModule->AuthRefreshTokenRepository \n\n\n\n\n\nHelperModule\n\nHelperModule\n\nCommonModule -->\n\nHelperModule->CommonModule\n\n\n\nAuthJwtModule -->\n\nHelperModule->AuthJwtModule\n\n\n\n\n\nHelperEncryptionService \n\nHelperEncryptionService \n\nHelperEncryptionService  -->\n\nHelperModule->HelperEncryptionService \n\n\n\n\n\nHelperHashService \n\nHelperHashService \n\nHelperHashService  -->\n\nHelperModule->HelperHashService \n\n\n\n\n\nHelperStringService \n\nHelperStringService \n\nHelperStringService  -->\n\nHelperModule->HelperStringService \n\n\n\nCommonModule -->\n\nAuthJwtModule->CommonModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthJwtModule->AuthService \n\n\n\n\n\nRoutesPublicModule\n\nRoutesPublicModule\n\nRoutesPublicModule -->\n\nAuthJwtModule->RoutesPublicModule\n\n\n\n\n\nAuthAccessTokenService\n\nAuthAccessTokenService\n\nAuthJwtModule -->\n\nAuthAccessTokenService->AuthJwtModule\n\n\n\n\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtAccessTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtAccessTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtRefreshTokenStrategy\n\nAuthJwtModule -->\n\nAuthJwtRefreshTokenStrategy->AuthJwtModule\n\n\n\n\n\nAuthRefreshTokenService\n\nAuthRefreshTokenService\n\nAuthJwtModule -->\n\nAuthRefreshTokenService->AuthJwtModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthJwtModule -->\n\nAuthService->AuthJwtModule\n\n\n\n\n\nAuthAccessTokenRepository\n\nAuthAccessTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthAccessTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\nAuthRefreshTokenRepository\n\nAuthRefreshTokenRepository\n\nAuthJwtRepositoryModule -->\n\nAuthRefreshTokenRepository->AuthJwtRepositoryModule\n\n\n\n\n\nAwsRepositoryModule\n\nAwsRepositoryModule\n\n\n\nAwsModule\n\nAwsModule\n\nAwsModule -->\n\nAwsRepositoryModule->AwsModule\n\n\n\nCommonModule -->\n\nAwsModule->CommonModule\n\n\n\n\n\nAwsS3Service \n\nAwsS3Service \n\nAwsS3Service  -->\n\nAwsModule->AwsS3Service \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nAwsModule->HealthModule\n\n\n\n\n\nRoutesModule\n\nRoutesModule\n\nRoutesModule -->\n\nAwsModule->RoutesModule\n\n\n\n\n\nAwsS3Service\n\nAwsS3Service\n\nAwsModule -->\n\nAwsS3Service->AwsModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nCommonModule -->\n\nDatabaseModule->CommonModule\n\n\n\n\n\nDatabaseOptionsService \n\nDatabaseOptionsService \n\nDatabaseOptionsService  -->\n\nDatabaseModule->DatabaseOptionsService \n\n\n\n\n\nRequestModule\n\nRequestModule\n\nCommonModule -->\n\nRequestModule->CommonModule\n\n\n\n\n\nDatabaseOptionsService\n\nDatabaseOptionsService\n\nDatabaseModule -->\n\nDatabaseOptionsService->DatabaseModule\n\n\n\n\n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator \n\nHealthAwsS3Indicator  -->\n\nHealthModule->HealthAwsS3Indicator \n\n\n\nRoutesModule -->\n\nHealthModule->RoutesModule\n\n\n\n\n\nHealthAwsS3Indicator\n\nHealthAwsS3Indicator\n\nHealthModule -->\n\nHealthAwsS3Indicator->HealthModule\n\n\n\n\n\nHelperEncryptionService\n\nHelperEncryptionService\n\nHelperModule -->\n\nHelperEncryptionService->HelperModule\n\n\n\n\n\nHelperHashService\n\nHelperHashService\n\nHelperModule -->\n\nHelperHashService->HelperModule\n\n\n\n\n\nHelperStringService\n\nHelperStringService\n\nHelperModule -->\n\nHelperStringService->HelperModule\n\n\n\n\n\nRoleRepositoryModule\n\nRoleRepositoryModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleRepositoryModule->RoleModule\n\n\n\nRoutesPublicModule -->\n\nRoleModule->RoutesPublicModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nRoutesPublicModule -->\n\nUserModule->RoutesPublicModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserRepositoryModule\n\nUserRepositoryModule\n\nUserModule -->\n\nUserRepositoryModule->UserModule\n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nUserRepositoryModule->UserRepository \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserRepositoryModule -->\n\nUserRepository->UserRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : #release1: authentication-authorization\n        \n            License : MIT\n        \n            Author : B.Mohamed\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IDatabaseCreateManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseDeleteOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseRestoreManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseRestoreOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseSoftDeleteManyOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseSoftDeleteOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IDatabaseUpdateOptions   (src/.../database.interface.ts)\n                        \n                        \n                            IPaginationSort   (src/.../pagination.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/database/interfaces/database.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IDatabaseCreateManyOptions\n                \n            \n            \n                \n                            Pick | session>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseDeleteOptions\n                \n            \n            \n                \n                            IDatabaseUpdateOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseManyOptions\n                \n            \n            \n                \n                            Pick | \"join\" | \"session\">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseOptions\n                \n            \n            \n                \n                            Pick | \"join\" | \"session\" | \"withDeleted\">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseRestoreManyOptions\n                \n            \n            \n                \n                            IDatabaseManyOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseRestoreOptions\n                \n            \n            \n                \n                            IDatabaseSoftDeleteOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseSoftDeleteManyOptions\n                \n            \n            \n                \n                            IDatabaseManyOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseSoftDeleteOptions\n                \n            \n            \n                \n                            Pick | \"join\" | \"session\">\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IDatabaseUpdateOptions\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/common/pagination/interfaces/pagination.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IPaginationSort\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                    C:/Users/LENOVO/Desktop/programmation/BACK/NestJs/production/authentication/src/common/helpers/services/helper.encryption.service.ts\n            \n            \n                100 %\n                (19/19)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (9/9)\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    C:/Users/LENOVO/Desktop/programmation/BACK/NestJs/production/authentication/src/common/helpers/services/helper.hash.service.ts\n            \n            \n                100 %\n                (11/11)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    C:/Users/LENOVO/Desktop/programmation/BACK/NestJs/production/authentication/src/common/helpers/services/helper.string.service.ts\n            \n            \n                100 %\n                (22/22)\n            \n            \n                100 %\n                (29/29)\n            \n            \n                100 %\n                (8/8)\n            \n            \n                100 %\n                (19/19)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appLanguage   (src/.../app.constant.ts)\n                        \n                        \n                            AUTH_JWT_AT_STRATEGY_NAME   (src/.../auth.constant.ts)\n                        \n                        \n                            AUTH_JWT_RT_STRATEGY_NAME   (src/.../auth.constant.ts)\n                        \n                        \n                            AuthAccessTokenEntityName   (src/.../auth.access-token.entity.ts)\n                        \n                        \n                            AuthJwtPayload   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            AuthJwtToken   (src/.../auth.jwt.decorator.ts)\n                        \n                        \n                            AuthRefreshTokenEntityName   (src/.../auth.refresh-token.entity.ts)\n                        \n                        \n                            AWS_PHOTO_ENTITY_NAME   (src/.../aws.photo.entity.ts)\n                        \n                        \n                            DATABASE_CREATED_AT_FIELD_NAME   (src/.../databast.constant.ts)\n                        \n                        \n                            DATABASE_DELETE_AT_FIELD_NAME   (src/.../databast.constant.ts)\n                        \n                        \n                            DATABASE_UPDATE_AT_FIELD_NAME   (src/.../databast.constant.ts)\n                        \n                        \n                            ROLE_ENTITY_NAME   (src/.../role.entity.ts)\n                        \n                        \n                            USER_ENTITY_NAME   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants/app.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/constants/auth.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_AT_STRATEGY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwtAccessToken\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_RT_STRATEGY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwtRefreshToken\"\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/repository/entities/auth.access-token.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthAccessTokenEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt_access_token\"\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/decorators/auth.jwt.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthJwtPayload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext): Record => {\n        const { user } = ctx.switchToHttp().getRequest();\n        return data ? user[data] : user;\n    }\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthJwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext): string => {\n        const { headers } = ctx.switchToHttp().getRequest();\n        const { authorization } = headers;\n        const authorizations: string[] = authorization.split(' ');\n\n        return authorizations.length >= 2 ? authorizations[1] : undefined;\n    }\n)\n                    \n                \n\n\n        \n    \n\n    src/common/auth-jwt/repository/entities/auth.refresh-token.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthRefreshTokenEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt_refresh_token\"\n                    \n                \n\n\n        \n    \n\n    src/common/aws/repositories/entities/aws.photo.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AWS_PHOTO_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"photo\"\n                    \n                \n\n\n        \n    \n\n    src/common/database/constants/databast.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_CREATED_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'created_at'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_DELETE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'deleted_at'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATABASE_UPDATE_AT_FIELD_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'updated_at'\n                    \n                \n\n\n        \n    \n\n    src/modules/role/repository/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLE_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"role\"\n                    \n                \n\n\n        \n    \n\n    src/modules/user/repository/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_ENTITY_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"user\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
